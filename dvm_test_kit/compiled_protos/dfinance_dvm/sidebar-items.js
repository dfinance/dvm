initSidebarItems({"enum":[["ErrorCode",""],["LcsType",""],["VmTypeTag","Type of contract argument."],["VmWriteOp","Write set operation type."]],"mod":[["ds_service_client","Generated client implementations."],["ds_service_server","Generated server implementations."],["dvm_bytecode_metadata_client","Generated client implementations."],["dvm_bytecode_metadata_server","Generated server implementations."],["dvm_compiler_client","Generated client implementations."],["dvm_compiler_server","Generated server implementations."],["metadata",""],["vm_balance_change",""],["vm_module_publisher_client","Generated client implementations."],["vm_module_publisher_server","Generated server implementations."],["vm_script_executor_client","Generated client implementations."],["vm_script_executor_server","Generated server implementations."],["vm_status",""]],"struct":[["Abort","VmStatus `MoveAbort` case."],["AbortLocation","An `AbortLocation` specifies where a Move program `abort` occurred, either in a function in a module, or in a script."],["Bytecode","Bytecode."],["CompilationResult",""],["CompilationUnit","Compilation unit."],["CompiledUnit","Compiled source."],["CurrencyInfo",""],["CurrencyInfoRequest",""],["CurrencyInfoResponse",""],["DsAccessPath",""],["DsAccessPaths",""],["DsRawResponse",""],["DsRawResponses",""],["Failure","VmStatus `ExecutionFailure` case."],["Field","Struct field."],["Function",""],["FunctionLoc","Function location."],["LcsTag",""],["Message",""],["Metadata","Bytecode metadata."],["ModuleIdent",""],["ModuleMeta","Module metadata."],["MoveError","VmStatus `Error` case."],["MultipleCompilationResult",""],["NativeBalanceRequest",""],["NativeBalanceResponse",""],["OraclePriceRequest",""],["OraclePriceResponse",""],["ScriptMeta","Script metadata."],["SourceFiles","Compiler API"],["Struct",""],["StructIdent",""],["U128",""],["VmAccessPath","Storage path"],["VmArgs","Contract arguments."],["VmBalanceChange",""],["VmBalanceChangeSet",""],["VmEvent","VM event returns after contract execution."],["VmExecuteResponse","Response from VM contains write_set, events, gas used and status for specific contract."],["VmExecuteScript","VM contract object to process."],["VmPublishModule","Publish module."],["VmStatus","A `VMStatus` is represented as either"],["VmValue","VM value should be passed before execution and return after execution (with opcodes), write_set in nutshell."]]});