var searchIndex = JSON.parse('{\
"dvm":{"doc":"Definance Virtual Machine server implementation on tonic …","t":[3,12,11,11,11,11,11,11,11,11,12,11,11,11,12,11,12,11,11,11,12,5,5,12,11,11,11,11,11],"n":["Options","address","augment_clap","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","ds","fmt","from","from_arg_matches","info_service","init","integrations","into","into_app","into_request","logging","main","main_internal","memory_config","to_owned","try_from","try_into","type_id","vzip"],"q":["dvm","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Definance Virtual Machine combined with Move compilation …","Address in the form of HOST_ADDRESS:PORT. The address …","","","","","","","","","DataSource Server internet address.","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1],"f":[null,null,[[["app",3]],["app",3]],[[]],[[]],[[],["options",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["formatter",3]],["result",6]],[[]],[[["argmatches",3]]],null,[[],["usize",15]],null,[[]],[[],["app",3]],[[],["request",3]],null,[[],["result",6]],[[["options",3]],["result",6]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Options"]]},\
"dvm_cli":{"doc":"","t":[0,0,5,5,5,0,14,17,17,17,17,17,3,3,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,12,12,11,11,11,11,11,11,11,11,12,11,11,5,5,5],"n":["config","info_service","init","init_sigterm_handler","init_sigterm_handler_fut","logging","version","DVM_DATA_SOURCE","DVM_LOG","DVM_LOG_STYLE","DVM_SENTRY_DSN","DVM_SENTRY_ENV","IntegrationsOptions","LoggingOptions","MAX_LOG_VERBOSE","RUST_LOG","RUST_LOG_STYLE","augment_clap","augment_clap","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_arg_matches","from_arg_matches","init","init","into","into","into_app","into_app","into_request","into_request","log_filters","log_style","remove_empty_env_vars","sentry_dsn","sentry_env","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verbose","vzip","vzip","create_info_service","init_logging","logging_builder"],"q":["dvm_cli","","","","","","","dvm_cli::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_cli::info_service","dvm_cli::logging",""],"d":["","","Init standard handlers for cli-executable. Create …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Log filters. The same as standard RUST_LOG environment …","Log colors and other styles. The same as standard …","","Optional key-uri, enables crash logging service …","Sets the environment code to separate events from testnet …","","","","","","","","","Enables verbosity logging mode. Sets level of verbosity, …","","","Create and run information service.","Try init <code>env_logger</code> and then Libra’s logger.","Create and preconfigure <code>env_logger::Builder</code> using …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,0,2,2,1,2,1,2,1,2,1,2,1,1,2,0,0,0],"f":[null,null,[[["integrationsoptions",3],["loggingoptions",3]],["option",4]],[[],[["signal",4],["receiver",3]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[]],[[]],[[]],[[]],[[],["loggingoptions",3]],[[],["integrationsoptions",3]],[[]],[[]],[[],["loggingoptions",3]],[[],["integrationsoptions",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["app",3]],[[],["app",3]],[[],["request",3]],[[],["request",3]],null,null,[[]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[["infoserviceconfig",3]]],[[["loggingoptions",3]],[["setloggererror",3],["result",4]]],[[["loggingoptions",3]],["builder",3]]],"p":[[3,"LoggingOptions"],[3,"IntegrationsOptions"]]},\
"dvm_compiler":{"doc":"Move compiler.","tn":["Compiler","bech32","borrow","borrow_mut","builder","clone","clone_into","cmd","compile","compile","compile_source_map","dependence","deref","deref_mut","disassembler","drop","from","init","into","manifest","new","preprocessor","to_owned","try_from","try_into","type_id","vzip","HRP","bech32_into_libra","libra_into_bech32","replace_bech32_addresses","Builder","borrow","borrow_mut","check","compile","convert_path","deref","deref_mut","drop","drop","from","init","init_build_layout","into","load_dependencies","make_dependencies_as_source","make_source_map","new","preprocess_source_map","report_errors","try_from","try_into","type_id","verify","verify_and_store","vzip","build","check","init","new","update","execute","execute","execute","execute","execute","extractor","loader","BytecodeUses","DefinitionUses","borrow","borrow","borrow_mut","borrow_mut","default","default","deref","deref","deref_mut","deref_mut","drop","drop","extract","extract","extract_from_bytecode","extract_from_source","from","from","imports","imports","init","init","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_address","BytecodeLoader","Loader","LoaderErrorResponse","LoaderResponse","Response","RestBytecodeLoader","ZeroLoader","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from","from","from","get","init","init","init","init","init","init","into","into","into","into","into","into","load","load","load","make_rest_loader","new","new","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Config","Disassembler","Encode","INDENT","borrow","borrow","borrow_mut","borrow_mut","code","deref","deref","deref_mut","deref_mut","disasm","disasm_str","drop","drop","encode","fmt","fmt","from","from","functions","generics","imports","init","init","into","into","light_version","make_source_unit","module","new","script","structs","try_from","try_from","try_into","try_into","type_id","type_id","types","unit","vzip","vzip","write_array","body","exp","iter","locals","translator","Body","borrow","borrow_mut","deref","deref_mut","drop","encode","from","init","into","mock","new","try_from","try_into","type_id","vzip","Abort","Basket","BinaryOp","Break","Cast","Continue","Deref","Error","Exp","ExpLoc","FieldRef","FnCall","If","Ld","Let","Local","Loop","Nop","Not","Pack","Ref","Ret","SourceRange","Unpack","While","WriteRef","as_mut","as_ref","block","borrow","borrow","borrow_mut","borrow_mut","branching","cast","deref","deref","deref_mut","deref_mut","drop","drop","encode","encode","find_range","fmt","fmt","from","from","function","index","init","init","into","into","is_nop","ld","loc","lt","new","operators","pack","range","ret","rf","source_range","source_range","source_range","try_from","try_from","try_into","try_into","type_id","type_id","unpack","val","vzip","vzip","Block","borrow","borrow_mut","deref","deref_mut","drop","encode","fmt","from","init","into","mock","new","source_range","try_from","try_into","type_id","vzip","br","br_false","br_true","Cast","CastType","U128","U64","U8","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","encode","encode","exp","fmt","fmt","from","from","init","init","into","into","source_range","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BorrowGlobal","BorrowGlobalMut","BuildIn","BuildIn","Exists","FnCall","MoveFrom","MoveTo","Plain","StructName","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_in","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode","encode","encode","fmt","fmt","fmt","from","from","from","import","init","init","init","into","into","into","name","parameters_count","plain","source_range","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","kind","module","name","params","params","type_param_name","type_params","type_params","Address","Bool","Ld","U128","U64","U8","Vector","bool","borrow","borrow_mut","deref","deref_mut","drop","encode","fmt","from","init","into","ld_const","source_range","try_from","try_into","type_id","u128","u64","u8","vzip","Copy","Loc","LocAccess","Move","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","encode","encode","exp","fmt","fmt","from","from","init","init","into","into","source_range","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Let","borrow","borrow_mut","deref","deref_mut","drop","encode","exp","fmt","from","init","into","source_range","try_from","try_into","type_id","vzip","Abort","Add","And","BinaryOp","BitAnd","BitOr","Div","Eq","Ge","Gt","Le","Lt","Mod","Mul","Neq","Not","Op","Or","Shl","Shr","Sub","Xor","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encode","encode","encode","encode","exp","exp","exp","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","left","mock","nop","pop","right","sign","source_range","source_range","source_range","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Pack","PackField","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","encode","encode","exp","fields","fmt","fmt","from","from","init","init","into","into","module","name","name","source_range","try_from","try_from","try_into","try_into","type_id","type_id","type_params","value","vzip","vzip","Ret","borrow","borrow_mut","deref","deref_mut","drop","encode","exp","explicit_keyword","fmt","from","init","into","is_empty","is_explicit","ret_list","source_range","try_from","try_into","type_id","vzip","Deref","FieldRef","Ref","WriteRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encode","encode","encode","encode","exp","exp","exp","exp","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","source_range","source_range","source_range","source_range","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Unpack","borrow","borrow_mut","deref","deref_mut","drop","encode","exp","fields","fmt","from","init","into","module","name","source","source_range","try_from","try_into","type_id","type_params","vzip","BytecodeIterator","absolute","as_slice","borrow","borrow_mut","by_relative","deref","deref_mut","drop","from","index","init","into","into_iter","new","next","remaining_code","try_from","try_into","type_id","vzip","Local","Locals","Param","Var","Var","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode","encode","fmt","fmt","fmt","from","from","from","get","init","init","init","inner","into","into","into","mark_as_used","mark_as_used","mock","new","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_name","write_name","Context","Translator","borrow","borrow_mut","deref","deref_mut","drop","end_offset","end_offset","err","err","expressions","extract_signature","extract_signature","from","init","into","last_exp","last_exp","loc","loc","local_var","local_var","module_import","module_import","new","next_opcode","next_opcode","opcode_by_absolute_offset","opcode_by_absolute_offset","opcode_by_relative_offset","opcode_by_relative_offset","opcode_offset","opcode_offset","pack_fields","pack_fields","pop2_exp","pop2_exp","pop_exp","pop_exp","pop_exp_vec","pop_exp_vec","remaining_code","remaining_code","translate","translate_block","translate_block","try_from","try_into","type_id","vzip","FunctionsDef","Param","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","encode","encode","f_type","fmt","from","from","init","init","into","into","is_native","is_public","mark_as_used","name","new","params","ret","script","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_params","vzip","vzip","write_name","Generated","Generic","GenericName","GenericPrefix","Generics","SimplePrefix","as_name","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_generic","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encode","encode","encode","extract_type_params","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","new","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_type_parameters","Alias","Import","ImportName","Imports","Name","address","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","encode","encode","fmt","fmt","from","from","get_import","init","init","into","into","is_empty","new","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Module","borrow","borrow_mut","deref","deref_mut","drop","encode","from","functions","init","into","name","new","structs","try_from","try_into","type_id","vzip","Script","borrow","borrow_mut","deref","deref_mut","drop","encode","from","function","init","into","new","try_from","try_into","type_id","vzip","Field","StructDef","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","encode","encode","f_type","fields","from","from","init","init","into","into","is_nominal_resource","name","name","new","try_from","try_from","try_into","try_into","type_id","type_id","type_params","vzip","vzip","FType","FullStructName","Generic","Primitive","Ref","RefMut","Struct","StructInst","Vec","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","encode","encode","extract_struct_name","extract_type_signature","fmt","fmt","from","from","import","init","init","into","into","name","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CompiledUnit","Module","Module","Script","Script","SourceUnit","UnitAccess","address","address","borrow","borrow","borrow_mut","borrow_mut","code_string","constant","constant","deref","deref","deref_mut","deref_mut","drop","drop","field_handle","field_handle","field_instantiation","field_instantiation","fmt","from","from","function_defs","function_defs","function_handle","function_handle","function_instantiation","function_instantiation","identifier","identifier","identifiers","identifiers","init","init","into","into","is_script","is_script","module_handle","module_handle","module_handles","module_handles","new","script_info","script_info","self_id","self_id","self_module_handle_idx","self_module_handle_idx","signature","signature","struct_def","struct_def","struct_def_instantiation","struct_def_instantiation","struct_defs","struct_defs","struct_handle","struct_handle","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_code","Layout","MANIFEST","MoveToml","Package","account_address","authors","blockchain_api","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytecode_cache","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","erased_serialize","erased_serialize","erased_serialize","fill","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","layout","module_dir","module_output","name","new","package","read_manifest","script_dir","script_output","serialize","serialize","serialize","store_manifest","temp_dir","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","pre_processing"],"q":["dvm_compiler","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::bech32","","","","dvm_compiler::builder","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::cmd","","","","","dvm_compiler::cmd::build","dvm_compiler::cmd::check","dvm_compiler::cmd::init","dvm_compiler::cmd::new","dvm_compiler::cmd::update","dvm_compiler::dependence","","dvm_compiler::dependence::extractor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::dependence::loader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code","","","","","dvm_compiler::disassembler::code::body","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code::exp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code::exp::block","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code::exp::branching","","","dvm_compiler::disassembler::code::exp::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code::exp::function","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code::exp::function::FnCall","","","","","","","","dvm_compiler::disassembler::code::exp::ld","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code::exp::loc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code::exp::lt","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code::exp::operators","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code::exp::pack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code::exp::ret","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code::exp::rf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code::exp::unpack","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code::iter","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code::locals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::code::translator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::functions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::generics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::imports","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::module","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::script","","","","","","","","","","","","","","","","dvm_compiler::disassembler::structs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::disassembler::unit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::manifest","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_compiler::preprocessor"],"d":["Embedded move compiler.","bech32 -> libra related utils","","","Move builder.","","","Movec commands handler.","Compiler string with move source code.","Compiler source codes.","Compile multiple sources.","Dependencies loader.","","","Move lang disassembler.","","","","","Movec configuration.","Create move compiler.","Move source preprocessor.","","","","","","Fixed prefix of all dfinance bech32 addresses.","Convert bech32 wallet1 prefixed address into 20 bytes …","Convert libra 20 byte address into bech32 form.","Replace all occurrences of bech32 addresses in the <code>source</code> …","Move builder.","","","Check source files.","Compile source list with dependencies.","Converts paths buffers into strings.","","","Cleans up the builder layout.","","","","Initializes directory layout.","","Load dependencies for each source file.","Disassembles dependencies.","Makes source map.","Creates a new move builder.","Runs source preprocessor for each source file.","Prints errors to stdout.","","","","Verifies sources.","Verify and store compiled units.","","Project builder.","Project checker.","Project initializer.","Project creator.","Project dependencies loader.","Execute build command.","Execute check command.","Execute init command.","Execute create project command.","Execute update dependencies command.","Dependencies extractor.","Dependencies loader.","Bytecode dependencies extractor.","Source definition dependencies extractor.","","","","","","","","","","","","","Extracts dependencies from definition.","Extracts dependencies from compiled module.","Extract dependencies from bytecode.","Extract dependencies from source code.","","","Returns imports.","Returns imports.","","","","","","","","","","","","","Creates extractor with account address.","Module loader.","Module loader.","Error response.","Api response.","Success response.","Bytecode loader which loads bytecode by dnode REST api.","Empty module loader. Mock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Loads module by module id. Tries to load the module from …","","","","","","","","","","","","","Loads module bytecode by it module id.","","","Makes a RestBytecodeLoader with project path and project …","Create a new <code>RestBytecodeLoader</code> with dnode api base url.","Create a new module loader with cache path and external …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Disassembler configuration.","Move disassembler.","Encode to move code.","Code indent.","","","","","Code disassembler.","","","","","Disassemble bytecode with config and write source code to …","Disassemble bytecode with config.","","","Writes component source representation into writer with …","","","","","Function disassembler.","Generic disassembler.","Imports disassembler.","","","","","Use light disassembler version.","Convert a CompiledUnit to the SourceUnit.","Module disassembler.","Create a new disassembler.","Struct disassembler.","Struct disassembler.","","","","","","","Common types.","Bytecode abstractions.","","","Encode encodable array.","Function body representation.","Code expression.","Bytecode iterator.","Local variables.","Bytecode translator.","Function body representation.","","","","","","","","","","Returns body with abort instruction.","Create a new Body.","","","","","Abort. (abort)","Expression in parentheses.","Binary operation.","Break.","Cast types. (as)","Continue.","Dereference.","Disassembler error.","Move expression.","Expression wrapper that adds bytecode location of this …","Structures field access.","Function call.","If else expression.","Load literal or constant. (5)","Local variable assignment.","Local variable.","Infinite Loop.","Nothing.","Logical negation.","Struct constructor.","Reference.","Return.","Range in the bytecode.","Struct destructor.","While loop.","Assign reference.","","","Block of expressions in curly braces.","","","","","Branching algorithms.","Cast.","","","","","","","","","Returns bytecode range of the given expressions.","","","","","Function call.","Returns expression start index in the bytecode.","","","","","Returns <code>true</code> if the current expression is <code>Exp::Nop</code>.","Load literal or constant.","Load local variable.","Local variable assignment.","Create a new <code>ExpLoc</code>.","Build in operators.","Struct constructor.","Returns index range of the expression.","Return statement.","Reference.","Returns index range.","","Returns bytecode range of the curent expression.","","","","","","","Struct destructor.","Returns inner expression.","","","Block of expressions in curly braces.","","","","","","","","","","","Returns block with abort instruction. Used for light …","Create a new Block.","","","","","","Handles <code>Branch</code> instruction.","Handles <code>BrFalse</code> instruction.","Handles <code>BrTrue</code> instruction.","Cast representation.","Cast types.","Cast to u128.","Cast to u64.","Cast to u8.","","","","","","","","","","","","","Create a new cast expression.","","","","","","","","","","","","","","","","","","borrow_global","borrow_global_mut","Build-in functions.","Call build-in function.","exists","Function call representation.","move_from","move_to","Call plain function.","Struct full name.","","","","","","","Creates a new call build-in function expression.","","","","","","","","","","","","","","","","","","","Struct import.","","","","","","","Struct name.","Returns parameters count.","Creates a new call plain function expression.","","","","","","","","","","","","","","Build-in function kind.","Function module.","Function name.","Parameters.","Parameters.","Type parameter.","Type parameters of type parameter.","Type parameters.","Address constant.","Bool literal.","Load literal or constant.","U128 literal.","U64 literal.","U8 literal.","Vector constant.","Locals bool literal.","","","","","","","","","","","Locals constant.","","","","","Locals u128 literal.","Locals u64 literal.","Locals u8 literal.","","Copy local.","Local variable assignment.","Access type.","Move local.","","","","","","","","","","","","","Create a new loc expression.","","","","","","","","","","","","","","","","","","Assign local variable expression.","","","","","","","Create a new <code>Let</code> expressions.","","","","","","","","","","Abort expression.","","&&","Binary operation.","&","|","/","==","=","","<=","<","%","","!=","Logical negation.","Binary operation.","||","","<<","","^","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>BinaryOp</code> expressions.","Create a new <code>Abort</code> expressions.","Create a new <code>Not</code> expressions.","","","","","","","","","","","","","","","","","Left operand.","Returns Abort with the given expression.","Nop.","Pop stack.","Right operand.","Operator.","","","","","","","","","","","","","","","","","","","","Struct pack.","Pack field.","","","","","","","","","","","","","Create a new <code>Pack</code> expressions.","Struct fields.","","","","","","","","","Struct import.","Field name.","Struct name.","","","","","","","","Struct type parameters.","Field value.","","","Return expression.","","","","","","","Create a new <code>Ret</code> expression.","is explicit return required.","","","","","Returns <code>true</code> if the function empty tuple.","Returns <code>true</code> if the explicit return keyword required.","Result tuple.","","","","","","Dereference expressions.","Field reference.","Reference.","Write reference representation.","","","","","","","","","","","","","","","","","","","","","","","","","Field reference.","Create a new reference expression.","Create a new <code>Deref</code> expressions.","Create a new <code>WriteRef</code> expressions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unpack expressions.","","","","","","","Creates a new <code>Unpack</code> expressions;","Struct fields.","","","","","Struct import.","Struct name.","Struct instance.","","","","","Struct type parameters.","","Bytecode iterator.","Returns a bytecode instruction by absolute offset.","Returns a reference to all bytecode instructions.","","","Returns a bytecode instruction by relative offset.","","","","","Returns current bytecode instruction index.","","","","Create a new bytecode iterator.","","Returns a reference to remaining bytecode instructions.","","","","","Local variable.","Local variable representation.","Function parameters.","Variable.","Variable.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns local variables by its index.","","","","Local variables.","","","","Makes variable as used.","Makes local variable as used.","Returns the empty locals variables list. Used for light …","Create a new local variables.","","","","","","","","","","","","","","","Writes variable name to the given writer.","Writes local variable name to the given writer.","Transaction context. Provides functions for bytecode …","Bytecode translator.","","","","","","Returns the last bytecode offset of the current context.","","Returns error expression.","","Returns transaction results.","Extracts signature by its index.","","","","","Returns reference to the last element of a expression …","","Wraps the given expression at the current location.","","Returns local variable by its index.","","Returns module Import by its handle reference.","","Creates a new translator.","Returns next bytecode instruction and updates bytecode …","","Returns the bytecode instruction by absolute index.","","Returns the bytecode instruction by relative index.","","Returns current bytecode offset.","","Returns struct fields by its definition.","","Removes the two last elements from a expression list and …","","Removes the last element from a expression list and …","","Removes the <code>exp_count</code> last elements from a expression …","","Returns remaining bytecode instructions.","","Translates bytecode instructions.","Translates next <code>block_size</code> bytecode instructions and …","","","","","","Function representation.","Function parameter representation.","","","","","","","","","","","","","","","Returns parameter","","","","","","","","Return true if the function is native, false otherwise.","Return true if the function is public, false otherwise.","Marks a parameter as used.","Returns functions name.","Returns module function representation.","Returns functions parameters.","Returns functions return types.","Returns script main function representation.","","","","","","","","Returns functions type params.","","","Writes parameter name.","Random generic prefix.","Generic representation.","Generic name.","Generics prefix.","Generics template.","Simple generic prefix. Prefix from generic prefix table.","Returns generic name.","","","","","","","","","","","","","Create generic.","","","","","","","","","","","","","","","","Extract type parameters.","","","","","","","","","","","","","","","","Create a new generics.","","","","","","","","","","","","","","","","","","","Write type parameters to writer.","Import alias.","Import representation.","Import name.","Unit imports table.","Simple module name.","Returns import address.","","","","","","","","","","","","","","","","","Returns import by address and module name.","","","","","Returns <code>true</code> if the import contains no elements.","Create a new imports table.","","","","","","","","","Module representation.","","","","","","","","Returns functions.","","","Returns module name.","Creates a new module.","Returns structs.","","","","","Script representation.","","","","","","","","Returns function definition.","","","Creates a new script.","","","","","Struct field representation.","Struct representation.","","","","","","","","","","","","","Returns field type.","Returns struct fields.","","","","","","","Return true if the struct is the nominal resource, false …","Returns struct name.","Returns field name.","Create a new struct.","","","","","","","Returns struct type parameters.","","","Type.","Full structure name.","Generic type.","Primitive type.","Reference type.","Mutable reference type.","Struct type.","Struct instantiation instance.","Vector type.","","","","","","","","","","","","","Extract struct name.","Extract type signature.","","","","","Returns struct import.","","","","","Returns struct name.","","","","","","","","","Undefined bytecode abstraction.","Module ast.","Compiled module.","Script ast.","Compiled script.","Restored move ast.","Undefined bytecode accessor.","Returns account address by its index.","","","","","","Returns source code.","Returns constant by its index.","","","","","","","","Returns field handle by its index.","","Returns field instruction by its index.","","","","","Returns functions definition.","","Returns function definition by its index.","","Returns function instruction by its index.","","Returns identifier by its index.","","Returns identifiers.","","","","","","Returns true if the bytecode is script bytecode.","","Returns module handle by its index.","","Returns modules handlers.","","Create a new CompiledUnit with the given bytecode.","Returns script-specific data.","","Returns unit id.","","Returns self module handle","","Returns signature by its index.","","Returns struct definition by its index.","","Returns struct definition instruction by its index.","","Returns structures definition.","","Returns struct handle by its index.","","","","","","","","","","Writes source code to the given writer.","Project layout.","Movec manifest name.","Movec manifest.","Project info.","Project AccountAddress.","Authors list.","dnode base url.","","","","","","","Movec cache.","","","","","","","","","","","","","","","","","","","","","","","","","Fill layout with default values.","","","","","","","","","","","","","Project layout.","Directory with module sources.","Directory with compiled modules.","Project name.","Create a new layout.","Project info.","Reads the manifest by path.","Directory with script sources.","Directory with compiled scripts.","","","","Stores the manifest by path.","Processing directory.","","","","","","","","","","","","","","","","","","","Preprocess move code."],"i":[0,0,1,1,0,1,1,0,0,1,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,3,4,3,4,3,4,3,4,3,4,3,4,0,0,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,0,0,0,0,0,0,0,5,6,7,8,9,10,5,6,7,8,9,10,5,6,7,8,9,10,5,6,7,8,9,10,7,8,9,5,6,7,8,9,10,5,6,7,8,9,10,7,8,9,5,6,7,8,9,10,7,8,9,7,8,9,5,6,7,8,9,10,10,5,6,7,8,9,10,5,6,7,8,9,10,11,5,6,0,6,10,7,8,9,7,8,9,5,6,7,8,9,10,5,6,7,8,9,10,5,6,7,8,9,10,5,6,7,8,9,10,5,6,7,8,9,10,0,0,0,0,12,13,12,13,0,12,13,12,13,0,0,12,13,14,12,13,12,13,0,0,0,12,13,12,13,12,13,0,13,0,0,12,13,12,13,12,13,0,0,12,13,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,0,0,16,16,16,16,16,16,16,16,16,16,16,16,0,16,16,16,17,17,0,17,16,17,16,0,0,17,16,17,16,17,16,17,16,0,17,16,17,16,0,17,17,16,17,16,16,0,0,0,17,0,0,17,0,0,18,17,16,17,16,17,16,17,16,0,17,17,16,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,20,20,20,21,20,21,20,21,20,21,20,21,20,21,20,21,21,20,21,20,21,20,21,20,21,21,20,21,20,21,20,21,20,22,22,0,23,22,0,22,22,23,0,23,22,24,23,22,24,23,23,22,24,23,22,24,23,22,24,23,22,24,23,22,24,23,22,24,24,23,22,24,23,22,24,24,22,23,23,23,22,24,23,22,24,23,22,24,23,22,24,25,26,26,25,26,25,25,26,27,27,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,0,0,28,29,28,29,28,29,28,29,28,29,28,29,28,29,29,28,29,28,29,28,29,28,29,29,28,29,28,29,28,29,28,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,31,31,0,31,31,31,31,31,31,31,31,31,31,31,0,0,31,31,31,31,31,32,31,33,34,32,31,33,34,32,31,33,34,32,31,33,34,32,31,33,34,32,31,33,34,32,33,34,32,31,33,34,32,31,33,34,32,31,33,34,32,31,33,34,32,33,0,0,32,32,32,33,34,32,31,33,34,32,31,33,34,32,31,33,34,32,31,33,34,0,0,35,36,35,36,35,36,35,36,35,36,35,36,36,36,35,36,35,36,35,36,35,36,36,35,36,36,35,36,35,36,35,36,36,35,35,36,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,0,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,0,44,0,44,45,46,44,45,46,44,46,44,46,44,45,46,44,45,46,44,45,46,44,46,44,45,46,44,45,46,44,45,45,46,44,45,45,46,44,46,44,45,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,46,44,0,0,47,47,47,47,47,48,47,48,47,47,48,47,47,47,47,48,47,48,47,48,47,48,47,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,47,48,47,47,47,47,47,0,0,49,50,49,50,50,50,49,50,49,50,49,50,49,50,50,50,49,50,49,50,49,50,49,49,50,49,49,49,49,49,50,49,50,49,50,49,50,49,49,50,50,51,0,0,0,0,51,52,53,54,51,52,53,54,51,52,54,52,54,52,54,53,54,51,52,53,54,51,52,53,54,51,52,53,54,52,0,54,51,52,53,54,51,52,53,54,51,52,53,54,51,52,54,54,52,53,54,51,52,53,54,51,52,53,54,51,52,53,54,51,52,0,55,0,0,0,55,55,56,55,56,55,56,55,56,55,56,55,56,55,56,55,56,55,56,56,55,56,55,56,56,56,55,56,55,56,55,56,55,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,0,59,60,59,60,59,60,59,60,59,60,59,60,60,59,59,60,59,60,59,60,59,59,60,59,59,60,59,60,59,60,59,59,60,0,0,61,61,61,61,61,61,61,61,62,61,62,61,62,61,62,61,62,61,62,0,0,61,62,61,62,62,61,62,61,62,62,61,62,61,62,61,62,61,62,0,63,64,63,64,0,0,65,64,63,64,63,64,63,65,64,63,64,63,64,63,64,65,64,65,64,64,63,64,65,64,65,64,65,64,65,64,65,64,63,64,63,64,65,64,65,64,65,64,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,63,64,63,64,63,64,63,64,63,0,0,0,0,66,66,66,67,66,68,67,66,68,68,67,66,68,67,66,68,67,66,68,67,66,68,67,66,68,67,66,68,67,66,68,67,66,68,68,67,66,68,67,66,68,67,66,68,67,66,68,67,68,68,66,68,67,0,68,68,67,66,68,0,68,67,66,68,67,66,68,67,66,68,67,66,68,67,66,68,67,66,68,0],"f":[null,null,[[]],[[]],null,[[],["compiler",3]],[[]],null,[[["accountaddress",3],["str",15],["option",4]],[["result",6],["vec",3]]],[[["accountaddress",3],["str",15],["option",4]],[["result",6],["vec",3]]],[[["accountaddress",3],["hashmap",3],["option",4],["string",3]],[["result",6],["hashmap",3]]],null,[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],[[]],[[],["usize",15]],[[]],null,[[],["compiler",3]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["str",15]],[["result",6],["string",3]]],[[["str",15]],[["result",6],["string",3]]],[[["str",15]],["string",3]],null,[[]],[[]],[[["pathbuf",3],["vec",3]],["result",6]],[[["pathbuf",3],["vec",3]],["result",6]],[[],[["vec",3],["result",6]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[]],[[],["usize",15]],[[],["result",6]],[[]],[[],[["result",6],["hashmap",3]]],[[["vec",3],["hashmap",3],["moduleid",3]],[["vec",3],["result",6]]],[[],[["vec",3],["result",6]]],[[["bool",15],["path",3],["option",4],["movetoml",3]],["builder",3]],[[["pathbuf",3],["vec",3]],[["vec",3],["result",6]]],[[["filessourcetext",6],["errors",6]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["filessourcetext",6],["vec",3],["compiledunit",4]],[["result",6],["hashmap",3]]],[[["filessourcetext",6],["vec",3],["compiledunit",4]],["result",6]],[[]],null,null,null,null,null,[[["path",3],["movetoml",3]],["result",6]],[[["path",3],["movetoml",3]],["result",6]],[[["string",3],["option",4],["option",4],["path",3],["uri",3]],[["error",3],["result",4]]],[[["string",3],["option",4],["option",4],["path",3],["uri",3]],[["error",3],["result",4]]],[[["path",3],["movetoml",3]],[["error",3],["result",4]]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["definitionuses",3]],[[],["bytecodeuses",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["definition",4]],["result",6]],[[["compiledmodule",3]],["result",6]],[[],[["hashset",3],["result",6]]],[[["accountaddress",3],["bool",15],["option",4]],[["hashset",3],["result",6]]],[[]],[[]],[[],[["hashset",3],["moduleid",3]]],[[],[["hashset",3],["moduleid",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["accountaddress",3],["option",4]],["definitionuses",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["zeroloader",3]],[[],["restbytecodeloader",3]],[[],["loaderresponse",3]],[[],["response",3]],[[],["loadererrorresponse",3]],[[],["loader",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["loaderresponse",3]],[[],["response",3]],[[],["loadererrorresponse",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],[["ok",3],["error",3],["result",4]]],[[["serializer",8]],[["ok",3],["error",3],["result",4]]],[[["serializer",8]],[["ok",3],["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["moduleid",3]],[["result",6],["vec",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["moduleid",3]],[["result",6],["vec",3]]],[[["moduleid",3]],[["result",6],["vec",3]]],[[["moduleid",3]],[["result",6],["vec",3]]],[[["path",3],["movetoml",3]],[["result",6],["option",4]]],[[["uri",3]],["restbytecodeloader",3]],[[["pathbuf",3],["option",4]],["loader",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["config",3]],[["error",3],["result",4]]],[[["config",3]],[["string",3],["error",3],["result",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,null,[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,[[],["sourceunit",4]],null,[[["compiledunit",4],["config",3]],["disassembler",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[["str",15]],[["error",3],["result",4]]],null,null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[]],[[],["usize",15]],[[]],[[],["body",3]],[[["codeunit",3],["usize",15],["imports",3]],["body",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["exp",4]],[[],["exp",4]],null,[[]],[[]],[[]],[[]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[],["option",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["bool",15]],null,null,null,[[["usize",15],["exp",4]],["exploc",3]],null,null,[[]],null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["exp",4]],[[]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["block",3]],[[["vec",3],["bool",15],["exploc",3]],["block",3]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["usize",15]],["exp",4]],[[["usize",15]],["exp",4]],[[["usize",15]],["exp",4]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["casttype",4]],["exp",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4],["signatureindex",3],["structdefinitionindex",3],["buildin",4]],["exp",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],null,[[],["usize",15]],[[["signatureindex",3],["option",4],["functionhandleindex",3]],["exp",4]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",15]],["exp",4]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[["constantpoolindex",3]],["exp",4]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u128",15]],["exp",4]],[[["u64",15]],["exp",4]],[[["u8",15]],["exp",4]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["bool",15],["u8",15],["locaccess",4]],["exp",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["u8",15]],["exp",4]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["op",4]],["exp",4]],[[],["exp",4]],[[],["exp",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],null,[[["exploc",3]],["exp",4]],[[],["exp",4]],[[],["exp",4]],null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["signatureindex",3],["structdefinitionindex",3],["option",4]],["exp",4]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,null,[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],["exp",4]],null,[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["bool",15]],[[],["bool",15]],null,[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["fieldhandleindex",3],["bool",15]],["exp",4]],[[["bool",15],["u8",15]],["exp",4]],[[],["exp",4]],[[],["exp",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["signatureindex",3],["structdefinitionindex",3],["option",4]],["exp",4]],null,[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],null,null,null,[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],null,[[["usize",15]],["bytecode",4]],[[]],[[]],[[]],[[["isize",15]],["bytecode",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["bytecodeiterator",3]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["var",3]],[[],["local",4]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["usize",15]],["local",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],[[]],[[]],[[]],[[],["locals",3]],[[["signature",3],["imports",3]],["locals",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["usize",15]],[[],["usize",15]],[[],["exp",4]],[[],["exp",4]],[[],[["exploc",3],["vec",3]]],[[["signatureindex",3],["option",4]],[["ftype",4],["vec",3]]],[[["signatureindex",3],["option",4]],[["ftype",4],["vec",3]]],[[]],[[],["usize",15]],[[]],[[],[["exploc",3],["option",4]]],[[],[["exploc",3],["option",4]]],[[["exp",4]],["exploc",3]],[[["exp",4]],["exploc",3]],[[["u8",15]],["local",4]],[[["u8",15]],["local",4]],[[["modulehandle",3]],[["import",6],["option",4]]],[[["modulehandle",3]],[["import",6],["option",4]]],[[["bytecodeiterator",3],["usize",15],["locals",3],["imports",3]],["translator",3]],[[],[["bytecode",4],["option",4]]],[[],[["bytecode",4],["option",4]]],[[["usize",15]],["bytecode",4]],[[["usize",15]],["bytecode",4]],[[["isize",15]],["bytecode",4]],[[["isize",15]],["bytecode",4]],[[],["usize",15]],[[],["usize",15]],[[["structdefinition",3]],[["packfield",3],["vec",3]]],[[["structdefinition",3]],[["packfield",3],["vec",3]]],[[]],[[]],[[],["exploc",3]],[[],["exploc",3]],[[["usize",15]],[["exploc",3],["vec",3]]],[[["usize",15]],[["exploc",3],["vec",3]]],[[]],[[]],[[]],[[["usize",15]],[["exploc",3],["vec",3]]],[[["usize",15]],[["exploc",3],["vec",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["param",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[],["rc",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["str",15]],[[["functiondefinition",3],["generics",3],["config",3],["imports",3]],["functionsdef",3]],[[],["vec",3]],[[],["vec",3]],[[["generics",3],["imports",3]],["functionsdef",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["vec",3]],[[]],[[]],[[],[["error",3],["result",4]]],null,null,null,null,null,null,[[],["genericname",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["generics",3]],[[],["generic",3]],[[]],[[]],[[["usize",15],["kind",4]],["generic",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["generics",3]],[["generic",3],["vec",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["generics",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],[["error",3],["result",4]]],null,null,null,null,null,[[],["accountaddress",3]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15],["accountaddress",3]],[["import",6],["option",4]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["bool",15]],[[],["imports",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[]],[[],["vec",3]],[[],["usize",15]],[[]],[[],["str",15]],[[["generics",3],["imports",3],["config",3]],["module",3]],[[],["vec",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[]],[[],["functionsdef",3]],[[],["usize",15]],[[]],[[["generics",3],["config",3],["imports",3]],["script",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[],["ftype",4]],[[],["vec",3]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["bool",15]],[[],["str",15]],[[],["str",15]],[[["structdefinition",3],["generics",3],["imports",3],["config",3]],["structdef",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["vec",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["error",3],["result",4]]],[[["usize",15]],[["error",3],["result",4]]],[[["structhandleindex",3],["imports",3]],["fullstructname",3]],[[["imports",3],["signaturetoken",4]],["ftype",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["option",4]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["str",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[["addressidentifierindex",3]],["accountaddress",3]],[[["addressidentifierindex",3]],["accountaddress",3]],[[]],[[]],[[]],[[]],[[],[["string",3],["error",3],["result",4]]],[[["constantpoolindex",3]],["constant",3]],[[["constantpoolindex",3]],["constant",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["fieldhandleindex",3]],[["option",4],["fieldhandle",3]]],[[["fieldhandleindex",3]],[["option",4],["fieldhandle",3]]],[[["fieldinstantiationindex",3]],[["option",4],["fieldinstantiation",3]]],[[["fieldinstantiationindex",3]],[["option",4],["fieldinstantiation",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["functionhandleindex",3]],["functionhandle",3]],[[["functionhandleindex",3]],["functionhandle",3]],[[["functioninstantiationindex",3]],["functioninstantiation",3]],[[["functioninstantiationindex",3]],["functioninstantiation",3]],[[["identifierindex",3]],["str",15]],[[["identifierindex",3]],["str",15]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["modulehandleindex",3]],["modulehandle",3]],[[["modulehandleindex",3]],["modulehandle",3]],[[]],[[]],[[],[["error",3],["result",4],["compiledunit",4]]],[[],["option",4]],[[],["option",4]],[[],["moduleid",3]],[[],["moduleid",3]],[[],[["option",4],["modulehandleindex",3]]],[[],[["option",4],["modulehandleindex",3]]],[[["signatureindex",3]],["signature",3]],[[["signatureindex",3]],["signature",3]],[[["structdefinitionindex",3]],[["option",4],["structdefinition",3]]],[[["structdefinitionindex",3]],[["option",4],["structdefinition",3]]],[[["structdefinstantiationindex",3]],[["option",4],["structdefinstantiation",3]]],[[["structdefinstantiationindex",3]],[["option",4],["structdefinstantiation",3]]],[[]],[[]],[[["structhandleindex",3]],["structhandle",3]],[[["structhandleindex",3]],["structhandle",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[],[["error",3],["result",4]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["movetoml",3]],[[],["package",3]],[[],["layout",3]],[[]],[[]],[[]],[[],["movetoml",3]],[[],["package",3]],[[],["layout",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],[["ok",3],["error",3],["result",4]]],[[["serializer",8]],[["ok",3],["error",3],["result",4]]],[[["serializer",8]],[["ok",3],["error",3],["result",4]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],null,null,null,null,[[],["layout",3]],null,[[["path",3]],[["error",3],["result",4],["movetoml",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["path",3],["movetoml",3]],[["error",3],["result",4]]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[["str",15]],["string",3]]],"p":[[3,"Compiler"],[3,"Builder"],[3,"DefinitionUses"],[3,"BytecodeUses"],[3,"ZeroLoader"],[3,"RestBytecodeLoader"],[3,"LoaderResponse"],[3,"Response"],[3,"LoaderErrorResponse"],[3,"Loader"],[8,"BytecodeLoader"],[3,"Config"],[3,"Disassembler"],[8,"Encode"],[3,"Body"],[4,"Exp"],[3,"ExpLoc"],[8,"SourceRange"],[3,"Block"],[4,"CastType"],[3,"Cast"],[4,"BuildIn"],[4,"FnCall"],[3,"StructName"],[13,"BuildIn"],[13,"Plain"],[4,"Ld"],[4,"LocAccess"],[3,"Loc"],[3,"Let"],[4,"Op"],[3,"BinaryOp"],[3,"Abort"],[3,"Not"],[3,"PackField"],[3,"Pack"],[3,"Ret"],[3,"FieldRef"],[3,"Ref"],[3,"Deref"],[3,"WriteRef"],[3,"Unpack"],[3,"BytecodeIterator"],[4,"Local"],[3,"Locals"],[3,"Var"],[3,"Translator"],[8,"Context"],[3,"FunctionsDef"],[3,"Param"],[4,"GenericPrefix"],[3,"Generic"],[3,"GenericName"],[3,"Generics"],[4,"ImportName"],[3,"Imports"],[3,"Module"],[3,"Script"],[3,"StructDef"],[3,"Field"],[4,"FType"],[3,"FullStructName"],[4,"SourceUnit"],[4,"CompiledUnit"],[8,"UnitAccess"],[3,"Package"],[3,"MoveToml"],[3,"Layout"]]},\
"dvm_data_source":{"doc":"Interface between MoveVM <code>StateView</code> implementation and …","t":[8,3,8,8,8,8,12,0,11,11,11,11,12,12,11,11,11,11,11,11,11,10,10,10,0,11,11,11,12,0,0,0,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11],"n":["Balance","CurrencyInfo","DataSource","GetCurrencyInfo","Oracle","RemoveModule","address","blacklist","borrow","borrow_mut","clone","clone_into","decimals","denom","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","get_balance","get_currency_info","get_price","grpc","init","into","into_request","is_token","metrics","mock","module_cache","remove_module","serialize","test_only_hash","to_owned","total_supply","try_from","try_into","type_id","vzip","BlackListDataSource","add_module","add_resource","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","get_balance","get_currency_info","get_module","get_price","get_resource","init","into","into_request","new","remove_module","to_owned","try_from","try_into","type_id","vzip","GrpcDataSource","ShutdownSig","access_path_into_ds","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","get_balance","get_currency_info","get_module","get_price","get_resource","get_sv","init","into","into_request","new","to_owned","try_from","try_into","type_id","vzip","DsMeter","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","get_balance","get_currency_info","get_module","get_price","get_resource","init","into","into_request","new","remove_module","to_owned","try_from","try_into","type_id","vzip","MockDataSource","add_price","borrow","borrow_mut","clear","clone","clone_into","default","delete","deref","deref_mut","drop","fmt","from","get","get_balance","get_currency_info","get_module","get_price","get_resource","init","insert","into","into_request","merge_write_set","new","publish_module","publish_module_with_id","set_balance","set_currency_info","to_owned","to_write_set","try_from","try_into","type_id","vzip","with_write_set","BinarySize","Lru","ModuleCache","borrow","borrow","borrow_mut","borrow_mut","cache_size","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","get_balance","get_currency_info","get_module","get_price","get_resource","init","init","into","into","into_request","into_request","new","new","read_through","remove","remove_module","size","size","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["dvm_data_source","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_data_source::blacklist","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_data_source::grpc","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_data_source::metrics","","","","","","","","","","","","","","","","","","","","","","","","","dvm_data_source::mock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_data_source::module_cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Balance access.","Currency info.","Thread-safe <code>StateView</code>.","CurrencyInfo request.","Oracle access.","Trait to <code>remove_module</code> internal data structure.","Owner address.","Defines <code>BlackListDataSource</code> which provides implements …","","","","","Decimals.","Denom.","","","","","","","","Returns balance of account with <code>address</code> and <code>ticker</code>.","Returns info abort currency with <code>ticker</code>.","Results price of <code>currency_2</code> in <code>currency_1</code>.","<code>GrpcDataSource</code> to wrap all gRPC calls to <code>dnode</code>.","","","","Is token.","Defines <code>DsMeter</code> which implements <code>StateView</code> and adds …","<code>MockDataSource</code> to be used in test_kit.","Defines <code>ModuleCache</code> which implements caching for fetching …","Removes the module by its id.","","","","Total supply.","","","","","Wrapper for data source which returns blank for requests …","Add module to the blacklist.","Add resource to the blacklist.","","","","","","","","","","","","","","","","","","Create a new BlackListDataSource with DataSource.","","","","","","","Wrapper around gRPC-based interface to dnode. Used for …","Receiver for a channel that handles shutdown signals.","Convert Libra’s <code>AccessPath</code> into gRPC <code>DsAccessPath</code>.","","","","","","","","","","","","","","Returns chain data by access path.","","","","Create an instance of gRPC based data source for VM. …","","","","","","Wrapper for data source which collects metrics queries.","","","","","","","","","","","","","","","","","","Constructor","","","","","","","<code>StateView</code> implementation to be used in test_kit.","Add price.","","","Clear internal chain data.","","","","Wrapper around internal <code>HashMap.delete()</code>.","","","","","","Returns chain data by access path.","","","","","","","Wrapper around internal <code>HashMap.insert()</code>.","","","Merge <code>WriteSet</code> into internal chain state.","Proxy to default() constructor.","Add module to internal state.","Add module with <code>ModuleId</code> to internal state.","Set balance.","Set currency info.","","Extract <code>WriteSet</code> from internal state.","","","","","Create <code>MockDataSource</code> with <code>write_set</code> applied.","Provides a binary size info.","Modules lru cache.","Cached <code>DataSource</code>.","","","","","Returns the cache binary size.","","","","","","","","","","","","","","","","","","","","","","","","","","Create new cached data source with <code>cache_size</code> max cache …","Constructor.","Reads module through cache.","Remove module from cache.","","Result size of self.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,0,1,1,1,1,0,0,0,5,1,1,1,1,1,1,1,1,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,10,11,10,11,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,10,10,10,10,10,11,10,11,10,11,10,11,11,11,10,12,10,10,11,10,11,10,11,10,11,10,11],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[],["currencyinfo",3]],[[]],null,null,[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["serializer",8]],[["ok",3],["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[]],[[["accountaddress",3],["string",3]],[["error",3],["result",4],["option",4]]],[[["string",3]],[["option",4],["result",4],["error",3]]],[[["string",3]],[["error",3],["result",4],["option",4]]],null,[[],["usize",15]],[[]],[[],["request",3]],null,null,null,null,[[["moduleid",3]]],[[],["result",4]],[[],["hashvalue",3]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["moduleid",3]]],[[["structtag",3],["accountaddress",3]]],[[]],[[]],[[],["blacklistdatasource",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[["accountaddress",3],["string",3]],[["error",3],["result",4],["option",4]]],[[["string",3]],[["option",4],["result",4],["error",3]]],[[["moduleid",3]],[["option",4],["vmresult",6]]],[[["string",3]],[["error",3],["result",4],["option",4]]],[[["structtag",3],["accountaddress",3]],[["partialvmresult",6],["option",4]]],[[],["usize",15]],[[]],[[],["request",3]],[[],["blacklistdatasource",3]],[[["moduleid",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[["accesspath",3]],["dsaccesspath",3]],[[]],[[]],[[],["grpcdatasource",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["accountaddress",3],["string",3]],[["error",3],["result",4],["option",4]]],[[["string",3]],[["option",4],["result",4],["error",3]]],[[["moduleid",3]],[["option",4],["vmresult",6]]],[[["string",3]],[["error",3],["result",4],["option",4]]],[[["structtag",3],["accountaddress",3]],[["partialvmresult",6],["option",4]]],[[["accesspath",3]],[["option",4],["result",4],["error",3]]],[[],["usize",15]],[[]],[[],["request",3]],[[["option",4],["shutdownsig",6],["uri",3]],[["result",4],["error",3],["grpcdatasource",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["dsmeter",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[["accountaddress",3],["string",3]],[["error",3],["result",4],["option",4]]],[[["string",3]],[["option",4],["result",4],["error",3]]],[[["moduleid",3]],[["option",4],["vmresult",6]]],[[["string",3]],[["error",3],["result",4],["option",4]]],[[["structtag",3],["accountaddress",3]],[["partialvmresult",6],["option",4]]],[[],["usize",15]],[[]],[[],["request",3]],[[],["dsmeter",3]],[[["moduleid",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["u128",15],["str",15]]],[[]],[[]],[[]],[[],["mockdatasource",3]],[[]],[[],["mockdatasource",3]],[[["accesspath",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[["accesspath",3]],[["option",4],["vec",3]]],[[["accountaddress",3],["string",3]],[["error",3],["result",4],["option",4]]],[[["string",3]],[["option",4],["result",4],["error",3]]],[[["moduleid",3]],[["option",4],["vmresult",6]]],[[["string",3]],[["error",3],["result",4],["option",4]]],[[["structtag",3],["accountaddress",3]],[["partialvmresult",6],["option",4]]],[[],["usize",15]],[[["accesspath",3],["u8",15],["vec",3]]],[[]],[[],["request",3]],[[["writeset",3]]],[[],["mockdatasource",3]],[[["u8",15],["vec",3]],[["moduleid",3],["error",3],["result",4]]],[[["vec",3],["u8",15],["moduleid",3]],[["error",3],["result",4]]],[[["u128",15],["accountaddress",3],["str",15]]],[[["str",15],["currencyinfo",3]]],[[]],[[],[["result",4],["writeset",3],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["writeset",3]],["mockdatasource",3]],null,null,null,[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["modulecache",3]],[[],["lru",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["accountaddress",3],["string",3]],[["error",3],["result",4],["option",4]]],[[["string",3]],[["option",4],["result",4],["error",3]]],[[["moduleid",3]],[["option",4],["vmresult",6]]],[[["string",3]],[["error",3],["result",4],["option",4]]],[[["structtag",3],["accountaddress",3]],[["partialvmresult",6],["option",4]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[["usize",15]],["modulecache",3]],[[["usize",15]],["lru",3]],[[["moduleid",3]],[["option",4],["vmresult",6]]],[[["moduleid",3]]],[[["moduleid",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"CurrencyInfo"],[8,"Balance"],[8,"GetCurrencyInfo"],[8,"Oracle"],[8,"RemoveModule"],[3,"BlackListDataSource"],[3,"GrpcDataSource"],[3,"DsMeter"],[3,"MockDataSource"],[3,"ModuleCache"],[3,"Lru"],[8,"BinarySize"]]},\
"dvm_info":{"doc":"Responsible for gathering various metrics from the …","t":[0,0,0,0,0,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,11,11,11,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,12,12,12,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11],"n":["config","heartbeat","memory_check","metrics","task","web","InfoServiceConfig","MemoryOptions","augment_clap","augment_clap","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","dvm_self_check_addr","fmt","fmt","from","from","from_arg_matches","from_arg_matches","heartbeat_max_interval","heartbeat_stimulation_interval","info_service_addr","init","init","into","into","into_app","into_app","into_request","into_request","memory_check_period","metric_update_interval","module_cache","module_cache","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vm_reset_interval","vzip","vzip","HeartRateMonitor","beat","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_request","is_alive","new","time_since_last_heartbeat","to_owned","try_from","try_into","type_id","vzip","CacheSize","MemoryChecker","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","is_limit_exceeded","new","size","try_from","try_into","type_id","vzip","collector","execution","meter","metric","prometheus","MetricsCollector","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","get_metrics","init","into","into_request","new","to_owned","try_from","try_into","type_id","vzip","ExecutionData","ExecutionResult","SystemMetrics","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cpu_usage","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drain_action_metrics","drop","drop","drop","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","gas_used","get_system_metrics","hash","hash","init","init","init","into","into","into","into_request","into_request","into_request","is_success","memory","ne","ne","ne","new","new","partial_cmp","partial_cmp","process_time","result","serialize","serialize","serialize","status","store_metric","threads_count","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_result","ScopeMeter","borrow","borrow_mut","deref","deref_mut","drop","drop","from","init","into","into_request","new","set_result","try_from","try_into","type_id","vzip","Average","ExecutionMetric","Metrics","Percentiles","average","avg","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate","calculate","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","execution_metrics","executions_without_results","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","max_time","min_time","ne","ne","ne","ne","p_50","p_75","p_90","percentiles","sd","serialize","serialize","serialize","serialize","statuses","success_actions","to_owned","to_owned","to_owned","to_owned","total_executions","total_gas","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","encode_metrics","Daemon","PeriodicBackgroundTask","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","spawn","spawn","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","InfoService","ServiceMaker","borrow","borrow","borrow_mut","borrow_mut","call","call","call","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","init","init","into","into","into_request","into_request","make_service","poll_ready","poll_ready","poll_ready","poll_ready","start_info_service","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["dvm_info","","","","","","dvm_info::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_info::heartbeat","","","","","","","","","","","","","","","","","","","","","","dvm_info::memory_check","","","","","","","","","","","","","","","","","","dvm_info::metrics","","","","","dvm_info::metrics::collector","","","","","","","","","","","","","","","","","","","","dvm_info::metrics::execution","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_info::metrics::meter","","","","","","","","","","","","","","","","","dvm_info::metrics::metric","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_info::metrics::prometheus","dvm_info::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_info::web","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Defines <code>InfoServiceConfig</code> with all the configuration …","Defines <code>HeartRateMonitor</code>, that wraps an <code>AtomicU64</code> …","Defines <code>MemoryChecker</code>","Execution metrics.","Defines <code>PeriodicBackgroundTask</code> which is used to collect …","Defines <code>InfoService</code>, <code>tower</code>-based web service which …","Configuration for service that gathers metrics about VM …","Memory options.","","","","","","","","","","","","","","","","","","","Dvm self address. HOST_ADDRESS:PORT. Optional parameter. …","","","","","","","Maximum period between heartbeats. In seconds.","The interval between ping requests to dvm. In seconds.","Info service address  in the form of HOST_ADDRESS:PORT. …","","","","","","","","","Returns the number of execution between memory checks.","Metric refresh interval in seconds.","Returns the module cache size in bytes.","Module cache size in KB. Default size is 100 MB.","","","","","","","","","Number of executions between vm reset.","","","Heart rate monitor.","Records new heartbeat timestamp.","","","","","","","","","","","","","Checks whether time passed since last recorded heartbeat …","Create a new heartbeat monitor with the given maximum …","Returns <code>Duration</code> since the last heartbeat timestamp.","","","","","","Provide cache size function.","Dvm memory limits checker.","","","","","","","","","","Returns <code>true</code> if the amount of memory exceeds the limit.","Constructor.","Returns cache size.","","","","","Defines <code>MetricsCollector</code> which handles background process …","Gathers metrics for the process (like cpu usage or …","Defines <code>ScopeMeter</code> which handles metric recording.","Defines <code>Metrics</code> struct and all required aggregates.","Helper functions to work with Prometheus.","Metrics collector.","","","","","","","","","","Get current metrics.","","","","Create a <code>MetricsCollector</code> which fires once every …","","","","","","Execution data.","Result of the action.","Metrics for the running process.","","","","","","","","","","","","","","","Total CPU usage.","","","","","","","","","","","","","Drain live metrics.","","","","","","","","","","","","","","","Spent gas.","Get metrics for the CPU and memory of the node.","","","","","","","","","","","","Is action completed successfully.","Memory usage for the process (in kB).","","","","Create a new ExecutionData.","Create new action result","","","Time of processing.","Execution result. May be empty. Empty if the value is not …","","","","Status code.","Stores metric.","Number of threads in the current process.","","","","","","","","","","","","","","","","Crate execution with result data.","Scope metric.","","","","","","","","","","","Create a new scope meter.","Set action result.","","","","","Average.","Aggregate for the executions metrics.","Application metrics;","Time to process different chunks of executions.","Average.","Average.","","","","","","","","","Calculate metrics based on a list of executions.","Calculate metrics based on provided execution data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inner metrics state: (name of a metric) -> ExecutionMetric","Number of actions without results. (Actions with panic.).","","","","","","","","","","","","","","","","","","","","","Max time.","Min time.","","","","","50% percentile","75%","90%","Percentiles.","Standard deviation.","","","","","struct -> count","The number of actions completed with success.","","","","","The number of actions performed in the time interval.","Total gas used in the interval.","","","","","","","","","","","","","","","","","Encode metrics.","Background process. Code executed with <code>spawn()</code> will be …","Signal thread task executed periodically with provided …","","","","","","","","","","","","","","","","","","","","","","Spawn daemon task in a separate thread.","Spawn task.","","","","","","","","","Instruction web service.","Info service maker.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Starts a new information service.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,1,1,1,2,1,2,1,2,1,2,2,1,2,2,1,2,1,2,1,2,1,2,2,1,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,4,4,4,4,4,4,4,4,4,4,4,5,4,4,4,4,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,0,7,8,9,7,8,9,7,8,7,8,9,7,8,9,8,0,7,8,7,8,9,7,8,9,7,8,9,8,9,7,8,9,7,8,7,8,7,7,7,8,9,8,0,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,11,12,13,14,12,11,13,14,12,11,13,11,13,14,12,11,13,14,12,11,13,14,12,11,13,14,12,11,13,14,12,11,13,14,12,11,13,14,12,11,13,11,13,14,12,11,13,14,12,11,13,14,12,11,13,14,12,11,13,14,12,11,11,11,13,14,12,11,14,14,14,11,12,13,14,12,11,11,11,13,14,12,11,11,11,13,14,12,11,13,14,12,11,13,14,12,11,13,14,12,11,0,0,0,15,16,15,16,15,16,15,16,15,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,0,0,17,18,17,18,17,18,18,17,18,17,18,17,18,18,17,18,17,18,17,18,17,18,17,17,17,18,18,0,17,18,17,18,17,18,17,18],"f":[null,null,null,null,null,null,null,null,[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[]],[[]],[[]],[[]],[[],["infoserviceconfig",3]],[[],["memoryoptions",3]],[[]],[[]],[[],["infoserviceconfig",3]],[[],["memoryoptions",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],null,null,null,[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["app",3]],[[],["app",3]],[[],["request",3]],[[],["request",3]],[[],["usize",15]],null,[[],["usize",15]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,[[]],[[]],[[]],[[],["heartratemonitor",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[],["bool",15]],[[["duration",3]],["heartratemonitor",3]],[[],["duration",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[],["bool",15]],[[["memoryoptions",3]],["memorychecker",3]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[]],[[]],[[],["metricscollector",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["metrics",3]],[[],["usize",15]],[[]],[[],["request",3]],[[["duration",3]],["metricscollector",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["executiondata",3]],[[],["executionresult",3]],[[],["systemmetrics",3]],[[]],[[]],[[]],[[["executiondata",3]],["ordering",4]],[[["executionresult",3]],["ordering",4]],null,[[],["executiondata",3]],[[],["executionresult",3]],[[],["systemmetrics",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["str",15],["hashmap",3],["vec",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["executiondata",3]],["bool",15]],[[["executionresult",3]],["bool",15]],[[["systemmetrics",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[],["systemmetrics",3]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,null,[[["executiondata",3]],["bool",15]],[[["executionresult",3]],["bool",15]],[[["systemmetrics",3]],["bool",15]],[[["u64",15]],["executiondata",3]],[[["bool",15],["u64",15]],["executionresult",3]],[[["executiondata",3]],[["option",4],["ordering",4]]],[[["executionresult",3]],[["option",4],["ordering",4]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["str",15],["executiondata",3]]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[["option",4],["u64",15],["executionresult",3]],["executiondata",3]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[["str",15]],["scopemeter",3]],[[["executionresult",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15],["hashmap",3],["vec",3]],["metrics",3]],[[["executiondata",3],["vec",3]],["executionmetric",3]],[[],["metrics",3]],[[],["percentiles",3]],[[],["average",3]],[[],["executionmetric",3]],[[]],[[]],[[]],[[]],[[],["metrics",3]],[[],["percentiles",3]],[[],["average",3]],[[],["executionmetric",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["metrics",3]],["bool",15]],[[["percentiles",3]],["bool",15]],[[["average",3]],["bool",15]],[[["executionmetric",3]],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,null,[[["metrics",3]],["bool",15]],[[["percentiles",3]],["bool",15]],[[["average",3]],["bool",15]],[[["executionmetric",3]],["bool",15]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["option",4],["systemmetrics",3],["metrics",3]],["string",3]],null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["daemon",3]],[[["duration",3]],["periodicbackgroundtask",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[["request",3],["body",3]]],[[["request",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[]],[[["context",3]],[["result",4],["poll",4]]],[[["context",3]],[["result",4],["poll",4]]],[[["context",3]],[["result",4],["poll",4]]],[[["context",3]],[["result",4],["poll",4]]],[[["duration",3],["heartratemonitor",3],["socketaddr",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"InfoServiceConfig"],[3,"MemoryOptions"],[3,"HeartRateMonitor"],[3,"MemoryChecker"],[8,"CacheSize"],[3,"MetricsCollector"],[3,"ExecutionData"],[3,"ExecutionResult"],[3,"SystemMetrics"],[3,"ScopeMeter"],[3,"ExecutionMetric"],[3,"Average"],[3,"Metrics"],[3,"Percentiles"],[3,"Daemon"],[3,"PeriodicBackgroundTask"],[3,"ServiceMaker"],[3,"InfoService"]]},\
"dvm_lang":{"doc":"Stores <code>stdlib</code> export and bytecode verification procedures.","t":[0,0,0,3,3,4,13,13,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11],"n":["bytecode","metadata","verification","FieldMeta","FunctionMeta","Metadata","Module","Script","StructMeta","arguments","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extract_bytecode_metadata","f_type","fields","fmt","fmt","fmt","fmt","from","from","from","from","hash","hash","hash","hash","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_native","is_public","is_resource","name","name","name","ne","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","ret","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_params","type_params","vzip","vzip","vzip","vzip","arguments","functions","name","structs","type_parameters","WhitelistVerifier","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","validate_bytecode_instructions","verify_only_whitelisted_modules","vzip"],"q":["dvm_lang","dvm_lang::bytecode","","dvm_lang::bytecode::metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_lang::bytecode::metadata::Metadata","","","","","dvm_lang::bytecode::verification","","","","","","","","","","","","","","","",""],"d":["Procedures to work with bytecode.","Bytecode metadata.","Procedures for verification of bytecode (restricted set …","Field metadata.","Function metadata.","Bytecode metadata.","Module metadata.","Script metadata.","Struct metadata.","Function arguments.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract bytecode metadata.","Field type.","Struct fields.","","","","","","","","","","","","","","","","","","","","","","","","","Is function native.","Function visibility.","Is struct resource.","Function name.","Struct name.","Field name.","","","","","","","","","Function return types.","","","","","","","","","","","","","","","","","","","","Function type parameters.","Struct type parameters.","","","","","Script arguments.","Module functions.","Module name.","Module structs.","Script type parameters.","Restricts set of modules allowed to use in script.","","","","","","","","","","Only modules allowed to use are modules from whitelist …","","","","Validate that script contains only allowed bytecode …","Verify whether all <code>use</code> statements in script importing …",""],"i":[0,0,0,0,0,0,1,1,0,2,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,0,4,3,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,2,3,2,3,4,2,3,4,1,2,3,4,1,2,2,3,4,1,2,2,3,3,4,4,1,2,3,4,1,2,3,4,1,2,3,2,3,4,1,5,6,6,6,5,0,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,7],"f":[null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["functionmeta",3]],[[],["structmeta",3]],[[],["fieldmeta",3]],[[],["metadata",4]],[[]],[[]],[[]],[[]],[[["functionmeta",3]],["ordering",4]],[[["structmeta",3]],["ordering",4]],[[["fieldmeta",3]],["ordering",4]],[[["metadata",4]],["ordering",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["functionmeta",3]],["bool",15]],[[["structmeta",3]],["bool",15]],[[["fieldmeta",3]],["bool",15]],[[["metadata",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["result",6],["metadata",4]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,null,null,null,null,null,[[["functionmeta",3]],["bool",15]],[[["structmeta",3]],["bool",15]],[[["fieldmeta",3]],["bool",15]],[[["metadata",4]],["bool",15]],[[["functionmeta",3]],[["option",4],["ordering",4]]],[[["structmeta",3]],[["option",4],["ordering",4]]],[[["fieldmeta",3]],[["option",4],["ordering",4]]],[[["metadata",4]],[["option",4],["ordering",4]]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[["functionsdef",3]],["result",6]],[[],["result",4]],[[["structdef",3]],["result",6]],[[["fieldast",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[["vec",3],["accountaddress",3],["string",3],["hashmap",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["compiledscript",3]],["result",6]],[[["compiledscript",3]],["result",6]],[[]]],"p":[[4,"Metadata"],[3,"FunctionMeta"],[3,"StructMeta"],[3,"FieldMeta"],[13,"Script"],[13,"Module"],[3,"WhitelistVerifier"]]},\
"dvm_libra_deps":{"doc":"","t":[0,0,0,0,0,0,0,0,0,0,0,0,3,17,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,8,3,10,11,10,11,10,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,10,11,11,10,11,11,11,11,11,12,12,12,12,12,12,12,18,18,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,18,18,6,4,6,13,6,4,13,13,13,13,13,13,13,13,13,13,13,13,3,3,13,3,13,13,13,18,13,13,13,13,13,4,13,13,13,18,13,13,6,6,13,4,3,6,13,3,13,13,13,6,4,3,3,4,18,18,13,13,13,18,13,13,13,13,13,13,13,4,13,13,13,13,6,4,18,18,18,13,13,13,13,13,18,18,13,13,13,13,13,13,13,6,13,4,3,3,3,4,3,13,13,13,18,18,13,13,13,13,13,13,13,18,13,13,13,13,6,3,3,13,13,18,18,13,13,13,13,13,6,13,18,18,18,18,13,3,13,13,6,6,4,13,13,13,13,6,4,6,3,6,6,4,6,4,3,4,13,3,4,3,13,13,13,6,4,13,13,13,13,6,4,13,13,13,13,13,13,13,4,13,18,6,13,4,3,13,13,13,13,18,13,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,5,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,3,13,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,5,11,11,11,11,12,12,12,12,12,12,12,12,12,6,6,6,6,6,5,5,5,5,5,3,13,13,18,8,13,3,18,8,3,3,3,13,13,3,3,3,4,13,13,13,13,13,4,3,3,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,12,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,17,13,13,13,17,13,13,13,13,13,3,6,13,13,17,13,13,13,13,13,13,17,17,4,3,13,13,13,13,13,13,4,13,13,13,13,13,17,13,17,13,13,13,13,13,13,13,6,3,3,3,3,3,3,6,3,13,13,13,13,13,13,13,13,13,13,13,13,17,13,17,13,17,17,13,13,13,17,13,17,3,3,3,3,3,13,3,3,3,3,3,3,3,13,13,13,13,18,13,17,17,13,13,13,13,13,3,6,13,13,13,13,13,4,13,13,13,13,13,13,13,18,18,17,13,13,13,13,13,13,13,13,6,13,18,13,13,17,13,13,13,13,13,13,13,13,13,13,13,13,6,13,8,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,13,13,13,17,17,18,13,13,13,13,13,4,13,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,17,17,13,13,13,17,13,17,13,17,13,13,13,3,4,4,4,4,13,13,3,3,6,4,3,3,13,13,13,3,3,3,3,4,3,3,13,13,17,17,18,17,17,17,13,17,17,6,4,13,6,3,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,11,12,11,11,12,12,11,11,11,10,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,12,12,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,12,12,11,11,11,11,12,5,11,11,11,11,11,12,11,11,11,12,12,11,12,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,13,13,13,13,17,13,13,3,3,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,6,3,3,3,3,17,13,13,13,13,17,17,17,4,4,17,13,13,13,13,17,13,13,13,13,13,13,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,12,12,11,11,12,11,11,11,11,11,11,10,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,13,13,4,13,13,13,13,13,13,13,13,17,17,13,13,13,13,13,6,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,5,11,5,5,0,5,11,11,11,11,11,11,5,17,13,13,13,13,13,13,13,13,3,3,13,13,13,13,13,13,13,13,13,13,13,13,3,3,4,4,3,3,3,3,13,13,8,24,4,13,13,13,13,4,8,13,13,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,14,10,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,5,5,11,11,12,11,11,11,11,11,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,13,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,14,11,11,11,11,11,11,11,11,0,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,14,11,13,13,13,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,3,3,4,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,8,3,3,3,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,8,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,12,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,6,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,4,4,13,13,13,3,8,3,8,3,13,3,3,4,13,3,3,13,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11],"n":["account","bf","compiler","ds","file_format","gas","lcs","logger","module","prelude","result","vm","AccountAddress","CORE_CODE_ADDRESS","Identifier","LENGTH","ZERO","as_ident_str","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deref","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_hex_literal","from_identity_public_key","from_str","from_utf8","hash","hash","hash","init","init","into","into","into_bytes","into_string","is_self","is_valid","ne","ne","new","new","partial_cmp","partial_cmp","random","serialize","serialize","short_str","test_only_hash","test_only_hash","to_owned","to_owned","to_string","to_string","to_u8","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BlockId","ControlFlowGraph","VMControlFlowGraph","block_end","block_end","block_start","block_start","blocks","blocks","borrow","borrow_mut","deref","deref_mut","display","drop","entry_block_id","entry_block_id","from","init","instr_indexes","instr_indexes","into","new","num_blocks","num_blocks","reachable_from","successors","successors","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","ADD","AND","Abort","AbortsIf","AbortsWith","Add","Address","Address","Address","Affine","And","Annotate","Apply","Apply","Assert","Assign","Assume","BIT_AND","BIT_OR","BinOp","BinOp_","Bind","Bind","BindList","Bind_","BinopExp","BitAnd","BitOr","Block","Bool","Borrow","Break","ByteString","Call","Cast","Code","Condition","ConstPool","Constant","Constant","ConstantName","Continue","Copy","Copyable","DIV","Data","Declare","Decreases","Defined","Defined","Definition","Dereference","Div","Dot","EQ","Ensures","Eq","Errors","Exp","ExpList","Exp_","Field","FilesSourceText","Fun","Function","Function","Function","Function","FunctionBody","FunctionBody_","FunctionName","FunctionSignature","FunctionVisibility","GE","GT","Ge","Gt","HexString","IMPLIES","IfElse","Implies","Include","Index","InferredNum","Internal","Invariant","InvariantKind","InvariantModule","InvariantPack","InvariantUnpack","InvariantUpdate","Kind","Kind_","LE","LIBRA_CORE","LT","Lambda","Le","Let","Loop","Lt","MOD","MUL","Members","Mod","Modifies","Module","Module","Module","Module","ModuleAccess","ModuleAccess","ModuleAccess_","ModuleDefinition","ModuleIdent","ModuleIdent_","ModuleMember","ModuleName","Move","Mul","Multiple","NEQ","NOT","Name","Name","NamePart","Native","Native","Neq","Not","OR","Or","Pack","Pack","Pragma","PragmaProperty","PragmaProperty_","Program","Public","QualifiedModuleAccess","RANGE","RESOURCE_CONSTRAINT","Range","Ref","Requires","RequiresModule","Resource","ResourceLoc","Return","SELF_NAME","SHL","SHR","SUB","Schema","Script","Script","Seq","Sequence","SequenceItem","SequenceItem_","Shl","Shr","Spec","Spec","SpecApplyFragment","SpecApplyFragment_","SpecApplyPattern","SpecApplyPattern_","SpecBlock","SpecBlockMember","SpecBlockMember_","SpecBlockTarget","SpecBlockTarget_","SpecBlock_","SpecConditionKind","Struct","StructDefinition","StructFields","StructName","Structure","Sub","SucceedsIf","Type","Type_","U128","U64","U8","UnaryExp","UnaryOp","UnaryOp_","Unit","Unit","Unknown","Unpack","Unpack","UnresolvedError","Update","Use","Use","VALUE_CONSTRAINT","Value","Value","Value_","Var","Var","Variable","While","Wildcard","XOR","Xor","acquires","add_loc","add_loc","add_loc","add_loc","add_loc","add_loc","add_loc","address","as_ref","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_drop_loc","clone_drop_loc","clone_drop_loc","clone_drop_loc","clone_drop_loc","clone_drop_loc","clone_drop_loc","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compile_program","compiled_unit","constants","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_loc","drop_loc","drop_loc","drop_loc","drop_loc","drop_loc","drop_loc","encode_hex","encode_hex_upper","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","errors","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_pure","is_pure","is_resourceful","is_spec_only","lib_definitions","loc","loc","loc","loc","loc","loc","loc","loc","loc","loc","loc","loc","members","members","move_check","name","name","name","name","name","name","name_pattern","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","output_errors","parameters","parse_program","parse_str","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","push","resource_opt","return_type","signature","signature","source_definitions","specs","starts_with_underscore","symbol","symbol","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_u8","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_parameters","type_parameters","type_parameters","unit","uses","uses","value","value","value","value","value","value","value","value","visibility","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","additional_exps","body","def","exclusion_patterns","exp","exp","exp","is_global","kind","name","name","name","patterns","properties","properties","properties","signature","type_","type_parameters","uninterpreted","CompiledUnit","FunctionInfo","Module","Script","SpecInfo","VarInfo","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","index","init","init","init","init","into","into","into","into","name","offset","parameters","serialize","serialize_debug","serialize_source_map","spec_info","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","used_locals","verify","verify_units","vzip","vzip","vzip","vzip","function_info","function_infos","ident","key","loc","module","script","source_map","source_map","Error","ErrorSlice","Errors","FilesSourceText","HashableError","check_errors","output_errors","report_errors","report_errors_to_buffer","report_errors_to_color_buffer","AccessPath","Address","Bool","CODE_TAG","DataStore","Deletion","ModuleCache","RESOURCE_TAG","RemoteCache","RemoteStorage","ResourceKey","ScriptCache","Signer","Struct","StructTag","TransactionDataCache","TypeCache","TypeTag","U128","U64","U8","Value","Vector","WriteOp","WriteSet","WriteSetMut","access_vector","account_map","address","address","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","code_access_path","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","emit_event","emit_event","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","event_data","exists_module","exists_module","fetch_config","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get_balance","get_balance","get_module","get_module","get_resource","get_resource","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_mut","is_deletion","is_empty","is_empty","iter","load_module","load_module","load_resource","load_resource","loader","module","module_id","name","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","publish_module","publish_module","push","remote","resource_access_path","resource_access_vec","save_balance_operation","save_balance_operation","serialize","serialize","serialize","serialize","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","ABORT","ACQUIRES_COUNT_MAX","ADD","ADDRESS","ADDRESS_IDENTIFIERS","ADDRESS_INDEX_MAX","ALL","AND","Abort","Add","Address","AddressIdentifierIndex","AddressIdentifierPool","All","And","BINARY_SIZE_LIMIT","BIT_AND","BIT_OR","BOOL","BRANCH","BR_FALSE","BR_TRUE","BYTECODE_COUNT_MAX","BYTECODE_INDEX_MAX","BinaryConstants","BinaryData","BitAnd","BitOr","Bool","BrFalse","BrTrue","Branch","Bytecode","CALL","CALL_GENERIC","CAST_U128","CAST_U64","CAST_U8","CONSTANT_INDEX_MAX","CONSTANT_POOL","CONSTANT_SIZE_MAX","COPYABLE","COPY_LOC","Call","CallGeneric","CastU128","CastU64","CastU8","CodeOffset","CodeUnit","CompiledModule","CompiledModuleMut","CompiledScript","CompiledScriptMut","Constant","ConstantPool","ConstantPoolIndex","CopyLoc","Copyable","DECLARED","DIV","Declared","Div","EQ","EXISTS","EXISTS_GENERIC","Eq","Exists","ExistsGeneric","FIELD_COUNT_MAX","FIELD_HANDLE","FIELD_HANDLE_INDEX_MAX","FIELD_INST","FIELD_INST_INDEX_MAX","FIELD_OFFSET_MAX","FREEZE_REF","FUNCTION_DEFS","FUNCTION_HANDLES","FUNCTION_HANDLE_INDEX_MAX","FUNCTION_INST","FUNCTION_INST_INDEX_MAX","FieldDefinition","FieldHandle","FieldHandleIndex","FieldInstantiation","FieldInstantiationIndex","FreezeRef","FunctionDefinition","FunctionDefinitionIndex","FunctionHandle","FunctionHandleIndex","FunctionInstantiation","FunctionInstantiationIndex","FunctionSignature","GE","GT","Ge","Gt","HEADER_SIZE","IDENTIFIERS","IDENTIFIER_INDEX_MAX","IDENTIFIER_SIZE_MAX","IMM_BORROW_FIELD","IMM_BORROW_FIELD_GENERIC","IMM_BORROW_GLOBAL","IMM_BORROW_GLOBAL_GENERIC","IMM_BORROW_LOC","IdentifierIndex","IdentifierPool","ImmBorrowField","ImmBorrowFieldGeneric","ImmBorrowGlobal","ImmBorrowGlobalGeneric","ImmBorrowLoc","Kind","LD_CONST","LD_FALSE","LD_TRUE","LD_U128","LD_U64","LD_U8","LE","LIBRA_MAGIC","LIBRA_MAGIC_SIZE","LOCAL_INDEX_MAX","LT","LdConst","LdFalse","LdTrue","LdU128","LdU64","LdU8","Le","LocalIndex","Lt","MAIN_INDEX","MOD","MODULE_HANDLES","MODULE_HANDLE_INDEX_MAX","MOVE_FROM","MOVE_FROM_GENERIC","MOVE_LOC","MOVE_TO","MOVE_TO_GENERIC","MUL","MUTABLE_REFERENCE","MUT_BORROW_FIELD","MUT_BORROW_FIELD_GENERIC","MUT_BORROW_GLOBAL","MUT_BORROW_GLOBAL_GENERIC","MUT_BORROW_LOC","MemberCount","Mod","ModuleAccess","ModuleHandle","ModuleHandleIndex","MoveFrom","MoveFromGeneric","MoveLoc","MoveTo","MoveToGeneric","Mul","MutBorrowField","MutBorrowFieldGeneric","MutBorrowGlobal","MutBorrowGlobalGeneric","MutBorrowLoc","MutableReference","NATIVE","NATIVE","NEQ","NOMINAL_RESOURCE","NOP","NORMAL_STRUCT","NOT","NO_TYPE_ARGUMENTS","NUMBER_OF_NATIVE_FUNCTIONS","NUM_INSTRUCTIONS","Native","Neq","Nop","Not","OR","Opcodes","Or","PACK","PACK_GENERIC","POP","PUBLIC","Pack","PackGeneric","Pop","READ_REF","REFERENCE","RESOURCE","RET","ReadRef","Reference","Resource","Ret","SHL","SHR","SIGNATURES","SIGNATURE_INDEX_MAX","SIGNATURE_SIZE_MAX","SIGNATURE_TOKEN_DEPTH_MAX","SIGNER","STRUCT","STRUCT_DEFS","STRUCT_DEF_INDEX_MAX","STRUCT_DEF_INST","STRUCT_DEF_INST_INDEX_MAX","STRUCT_HANDLES","STRUCT_HANDLE_INDEX_MAX","STRUCT_INST","ST_LOC","SUB","ScriptConversionInfo","SerializedKind","SerializedNativeStructFlag","SerializedNominalResourceFlag","SerializedType","Shl","Shr","Signature","SignatureIndex","SignaturePool","SignatureToken","SignatureTokenPreorderTraversalIter","SignatureTokenPreorderTraversalIterWithDepth","Signer","StLoc","Struct","StructDefInstantiation","StructDefInstantiationIndex","StructDefinition","StructDefinitionIndex","StructFieldInformation","StructHandle","StructHandleIndex","StructInstantiation","Sub","TABLE_CONTENT_SIZE_MAX","TABLE_COUNT_MAX","TABLE_HEADER_SIZE","TABLE_INDEX_MAX","TABLE_OFFSET_MAX","TABLE_SIZE_MAX","TYPE_PARAMETER","TYPE_PARAMETER_COUNT_MAX","TYPE_PARAMETER_INDEX_MAX","TableIndex","TableType","TypeParameter","TypeParameterIndex","TypeSignature","TypeSignaturePool","U128","U128","U64","U64","U8","U8","UNPACK","UNPACK_GENERIC","Unpack","UnpackGeneric","VECTOR","Vector","WRITE_REF","WriteRef","XOR","Xor","acquires_global_resources","address","address","address_identifier_at","address_identifiers","address_identifiers","address_identifiers","as_inner","as_inner","as_inner","as_module","as_module","as_script","basic_test_module","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","code","code","code","constant_at","constant_pool","constant_pool","constant_pool","data","debug_set_sh_idx","declared_field_count","def","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_constant","deserialize_no_check_bounds","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy_procedure_module","empty_module","empty_script","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","field","field_handle_at","field_handles","field_handles","field_information","field_instantiation_at","field_instantiations","field_instantiations","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze","freeze","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function","function_def_at","function_defs","function_defs","function_handle_at","function_handles","function_handles","function_handles","function_instantiation_at","function_instantiations","function_instantiations","function_instantiations","get_successors","handle","handle","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","identifier_at","identifiers","identifiers","identifiers","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","instruction_key","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_index","into_index","into_index","into_index","into_index","into_index","into_index","into_index","into_index","into_index","into_index","into_index","into_index","into_inner","into_inner","into_inner","into_iter","into_iter","into_module","into_module","into_script","is_branch","is_conditional_branch","is_empty","is_empty","is_integer","is_mutable_reference","is_native","is_nominal_resource","is_public","is_public","is_reference","is_signer","is_sub_kind_of","is_unconditional_branch","is_valid_for_constant","join","kind_count","kind_count","len","len","locals","module","module","module_handle_at","module_handles","module_handles","module_handles","module_id_for_handle","module_id_for_handle","name","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","next","offset","owner","parameters","parameters","parameters","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","preorder_traversal","preorder_traversal_with_depth","push","read_u32","read_u8","read_uleb128_as_u64","return_","return_","self_handle","self_handle_idx","self_id","self_id","self_module_handle_idx","self_module_name","serialize","serialize","serialize","serialize","serialize_constant","signature","signature_at","signature_token_kind","signatures","signatures","signatures","struct_def_at","struct_def_instantiations","struct_defs","struct_defs","struct_handle","struct_handle_at","struct_handles","struct_handles","struct_handles","struct_instantiation_at","struct_instantiations","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_parameters","type_parameters","type_parameters","type_parameters","type_parameters","type_parameters","type_parameters","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_u64_as_uleb128","AbstractMemorySize","BORROW","BORROW","BORROW_MUT","BORROW_MUT","CONST_SIZE","CREATE_SIGNER","CREATE_SIGNER","CostStrategy","CostTable","DEFAULT_ACCOUNT_SIZE","DEPOSIT","DEPOSIT","DESTROY_EMPTY","DESTROY_EMPTY","DESTROY_SIGNER","DESTROY_SIGNER","ED25519_THRESHOLD_VERIFY","ED25519_THRESHOLD_VERIFY","ED25519_VALIDATE_KEY","ED25519_VALIDATE_KEY","ED25519_VERIFY","ED25519_VERIFY","EMIT_EVENT","EMIT_EVENT","EMPTY","EMPTY","GET_BALANCE","GET_BALANCE","GasAlgebra","GasCarrier","GasConstants","GasCost","GasPrice","GasUnits","LARGE_TRANSACTION_CUTOFF","LCS_TO_BYTES","LCS_TO_BYTES","LENGTH","LENGTH","MAX_ABSTRACT_MEMORY_SIZE","MAX_TRANSACTION_SIZE_IN_BYTES","MIN_EXISTS_DATA_SIZE","N","NativeCostIndex","ONE_GAS_UNIT","POP_BACK","POP_BACK","PUSH_BACK","PUSH_BACK","REFERENCE_SIZE","SHA2_256","SHA2_256","SHA3_256","SHA3_256","SIGNER_BORROW","SIGNER_BORROW","STRUCT_SIZE","SWAP","SWAP","U256_ADD","U256_ADD","U256_AS_U128","U256_AS_U128","U256_AS_U64","U256_AS_U64","U256_AS_U8","U256_AS_U8","U256_DIV","U256_DIV","U256_FROM_U128","U256_FROM_U128","U256_FROM_U64","U256_FROM_U64","U256_FROM_U8","U256_FROM_U8","U256_MUL","U256_MUL","U256_SUB","U256_SUB","WITHDRAW","WITHDRAW","add","app","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_intrinsic_gas","charge_instr","charge_instr_with_size","charge_intrinsic_gas","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cost_table","deduct_gas","default","default_account_size","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disable_metering","div","drop","drop","drop","drop","drop","drop","drop","drop","enable_metering","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","gas_constants","gas_unit_scaling_factor","get","get","get","get","global_memory_per_byte_cost","global_memory_per_byte_write_cost","hash","hash","hash","hash","init","init","init","init","init","init","init","init","instruction_cost","instruction_gas","instruction_table","into","into","into","into","into","into","into","into","intrinsic_gas_per_byte","large_transaction_cutoff","map","map2","max_price_per_gas_unit","max_transaction_size_in_bytes","maximum_number_of_gas_units","memory_gas","min_price_per_gas_unit","min_transaction_gas_units","mul","native_cost","native_table","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new_from_instructions","partial_cmp","remaining_gas","serialize","serialize","serialize","serialize","serialize","serialize","sub","system","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unitary_cast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zero_cost_schedule","Custom","Eof","Error","ExceededContainerDepthLimit","ExceededMaxLen","ExpectedBoolean","ExpectedMapKey","ExpectedMapValue","ExpectedOption","IntegerOverflowDuringUleb128Decoding","Io","MAX_CONTAINER_DEPTH","MAX_SEQUENCE_LENGTH","MissingLen","NonCanonicalMap","NonCanonicalUleb128Encoding","NotSupported","RemainingInput","Result","Utf8","borrow","borrow_mut","clone","clone_into","custom","custom","deref","deref_mut","drop","eq","fmt","fmt","from","from","from_bytes","from_bytes_seed","init","into","is_human_readable","ne","serialize_into","serialized_size","test_helpers","to_bytes","to_owned","to_string","try_from","try_into","type_id","vzip","assert_canonical_encode_decode","CHANNEL_SIZE","ConsensusEquivocatingVote","ConsensusInvalidMessage","Debug","Debug","Debug","Display","Error","Error","Event","Filter","Info","Info","InvalidBlock","InvalidConsensusProposal","InvalidConsensusRound","InvalidHealthCheckerMsg","InvalidNetworkEvent","InvalidNetworkEventHC","InvalidNetworkEventMempool","InvalidRetrievedBlock","InvalidSyncInfoMsg","InvalidTransactionMempool","Key","KeyValue","Level","LevelFilter","LibraLogger","LibraLoggerBuilder","Logger","Metadata","NoiseHandshake","Off","Schema","Schema","SecurityEvent","Serde","StateSyncInvalidChunk","Trace","Trace","Value","Visitor","Warn","Warn","Writer","address","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","builder","channel_size","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","debug","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","dispatch","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enabled","enabled","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","error","event","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_debug","from_display","from_serde","from_str","from_str","hash","hash","info","init","init","init","init","init","init","init","init","init","init","init","init","init_for_testing","into","into","into","into","into","into","into","into","into","into","into","is_async","json_log","keys_and_values","level","level","line","location","log","max","message","metadata","module_path","ne","new","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","prelude","printer","read_env","remote_level","sample","serialize","serialize","serialize","serialize","set_filter","set_remote_filter","target","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit","visit","visit","visit_pair","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warn","write","JsonLogEntry","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","erased_serialize","from","init","into","json","name","new","pop_last_entries","send_json_log","serialize","test_only_hash","timestamp","to_owned","try_from","try_into","type_id","vzip","Always","ConsensusEquivocatingVote","ConsensusInvalidMessage","Duration","FileWriter","Frequency","InvalidBlock","InvalidConsensusProposal","InvalidConsensusRound","InvalidHealthCheckerMsg","InvalidNetworkEvent","InvalidNetworkEventHC","InvalidNetworkEventMempool","InvalidRetrievedBlock","InvalidSyncInfoMsg","InvalidTransactionMempool","NoiseHandshake","SampleRate","Sampling","SecurityEvent","StateSyncInvalidChunk","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","debug","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","error","event","fmt","from","from","from","info","init","init","init","into","into","into","new","new","sample","sample","sample","trace","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","warn","write","Always","Duration","Frequency","SampleRate","Sampling","Abort","Add","Address","Address","Address","And","BitAnd","BitOr","Bool","Bool","BrFalse","BrTrue","Branch","Bytecode","Call","CallGeneric","CastU128","CastU64","CastU8","CompiledModule","CompiledScript","CompiledUnit","CopyLoc","Definition","Div","Eq","Exists","ExistsGeneric","FreezeRef","Ge","Gt","ImmBorrowField","ImmBorrowFieldGeneric","ImmBorrowGlobal","ImmBorrowGlobalGeneric","ImmBorrowLoc","LdConst","LdFalse","LdTrue","LdU128","LdU64","LdU8","Le","Lt","Mod","Module","Module","Module","ModuleAccess","ModuleDefinition","ModuleHandle","ModuleId","MoveFrom","MoveFromGeneric","MoveLoc","MoveTo","MoveToGeneric","MoveValue","Mul","MutBorrowField","MutBorrowFieldGeneric","MutBorrowGlobal","MutBorrowGlobalGeneric","MutBorrowLoc","MutableReference","Neq","Nop","Not","Or","Pack","PackGeneric","Pop","ReadRef","Reference","Ret","Script","Script","Script","ScriptAccess","Shl","Shr","SignatureToken","Signer","Signer","StLoc","Struct","Struct","StructInstantiation","Sub","TypeParameter","U128","U128","U64","U64","U8","U8","Unpack","UnpackGeneric","Vector","Vector","WriteRef","Xor","access_vector","address","address","address","address_identifier_at","address_identifier_at","address_identifiers","address_identifiers","as_module","as_script","ast_debug","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","code","code","code","constant_at","constant_at","constant_pool","constant_pool","constants","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","field_handle_at","field_handles","field_instantiation_at","field_instantiations","fmt","fmt","fmt","fmt","from","from","from","function","function_def_at","function_defs","function_handle_at","function_handle_at","function_handles","function_handles","function_instantiation_at","function_instantiation_at","function_instantiations","function_instantiations","hash","hash","hash","identifier_at","identifier_at","identifiers","identifiers","init","init","init","into","into","into","loc","loc","members","module_handle_at","module_handle_at","module_handles","module_handles","module_id_for_handle","name","name","name","name","ne","ne","ne","new","new","partial_cmp","self_handle","self_handle_idx","self_id","serialize","serialize","serialize","signature_at","signature_at","signatures","signatures","simple_deserialize","simple_serialize","specs","struct_def_at","struct_defs","struct_handle_at","struct_handle_at","struct_handles","struct_handles","struct_instantiation_at","struct_instantiations","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uses","vector_u8","vzip","vzip","vzip","function_info","function_infos","ident","key","loc","module","script","source_map","source_map","ABORTED","ABORT_TYPE_MISMATCH_ERROR","ARITHMETIC_ERROR","AbortLoc","BAD_CHAIN_ID","BAD_HEADER_TABLE","BAD_MAGIC","BAD_U128","BAD_U64","BOOLEAN_OP_TYPE_MISMATCH_ERROR","BORROWFIELD_BAD_FIELD_ERROR","BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR","BORROWFIELD_TYPE_MISMATCH_ERROR","BORROWGLOBAL_NO_RESOURCE_ERROR","BORROWGLOBAL_TYPE_MISMATCH_ERROR","BORROWLOC_EXISTS_BORROW_ERROR","BORROWLOC_REFERENCE_ERROR","BORROWLOC_UNAVAILABLE_ERROR","BR_TYPE_MISMATCH_ERROR","CALL_BORROWED_MUTABLE_REFERENCE_ERROR","CALL_STACK_OVERFLOW","CALL_TYPE_MISMATCH_ERROR","CODE_DESERIALIZATION_ERROR","CONSTRAINT_KIND_MISMATCH","COPYLOC_EXISTS_BORROW_ERROR","COPYLOC_RESOURCE_ERROR","COPYLOC_UNAVAILABLE_ERROR","CURRENCY_INFO_DOES_NOT_EXIST","DATA_FORMAT_ERROR","DUPLICATE_ACQUIRES_RESOURCE_ANNOTATION_ERROR","DUPLICATE_ELEMENT","DUPLICATE_MODULE_NAME","DUPLICATE_TABLE","DiscardedVMStatus","EMPTY_CODE_UNIT","EMPTY_VALUE_STACK","EQUALITY_OP_TYPE_MISMATCH_ERROR","EVENT_KEY_MISMATCH","EXCEEDED_MAX_TRANSACTION_SIZE","EXECUTED","EXECUTION_STACK_OVERFLOW","EXISTS_RESOURCE_TYPE_MISMATCH_ERROR","EXTRANEOUS_ACQUIRES_RESOURCE_ANNOTATION_ERROR","Error","Executed","Executed","ExecutionFailure","ExecutionFailure","FAILED_TO_DESERIALIZE_RESOURCE","FAILED_TO_SERIALIZE_WRITE_SET_CHANGES","FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR","FREEZEREF_TYPE_MISMATCH_ERROR","FUNCTION_RESOLUTION_FAILURE","GAS_UNIT_PRICE_ABOVE_MAX_BOUND","GAS_UNIT_PRICE_BELOW_MIN_BOUND","GENERIC_MEMBER_OPCODE_MISMATCH","GLOBAL_REFERENCE_ERROR","INDEX_OUT_OF_BOUNDS","INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE","INTEGER_OP_TYPE_MISMATCH_ERROR","INTERNAL_TYPE_ERROR","INVALID_ACQUIRES_RESOURCE_ANNOTATION_ERROR","INVALID_AUTH_KEY","INVALID_CONSTANT_TYPE","INVALID_FALL_THROUGH","INVALID_GAS_SPECIFIER","INVALID_LOOP_BREAK","INVALID_LOOP_CONTINUE","INVALID_LOOP_SPLIT","INVALID_MAIN_FUNCTION_SIGNATURE","INVALID_MODULE_HANDLE","INVALID_MODULE_PUBLISHER","INVALID_OPERATION_IN_SCRIPT","INVALID_RESOURCE_FIELD","INVALID_SIGNATURE","INVALID_SIGNATURE_TOKEN","INVALID_WRITE_SET","KeptVMStatus","LINKER_ERROR","LOOKUP_FAILED","LOOP_IN_INSTANTIATION_GRAPH","Location","MALFORMED","MALFORMED_CONSTANT_DATA","MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS","MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND","MISSING_ACQUIRES_RESOURCE_ANNOTATION_ERROR","MISSING_DATA","MISSING_DEPENDENCY","MODULE_ADDRESS_DOES_NOT_MATCH_SENDER","MOVEFROM_NO_RESOURCE_ERROR","MOVEFROM_TYPE_MISMATCH_ERROR","MOVELOC_EXISTS_BORROW_ERROR","MOVELOC_UNAVAILABLE_ERROR","MOVETO_NO_RESOURCE_ERROR","MOVETO_TYPE_MISMATCH_ERROR","MiscellaneousError","Module","Module","MoveAbort","MoveAbort","NEGATIVE_STACK_SIZE_WITHIN_BLOCK","NO_ACCOUNT_ROLE","NO_MODULE_HANDLES","NUMBER_OF_TYPE_ARGUMENTS_MISMATCH","OUT_OF_GAS","OutOfGas","PACK_TYPE_MISMATCH_ERROR","PC_OVERFLOW","POP_RESOURCE_ERROR","POSITIVE_STACK_SIZE_AT_BLOCK_END","PartialVMError","PartialVMResult","READREF_EXISTS_MUTABLE_BORROW_ERROR","READREF_RESOURCE_ERROR","READREF_TYPE_MISMATCH_ERROR","RECURSIVE_STRUCT_DEFINITION","REJECTED_WRITE_SET","RESOURCE_ALREADY_EXISTS","RESOURCE_DOES_NOT_EXIST","RET_BORROWED_MUTABLE_REFERENCE_ERROR","RET_TYPE_MISMATCH_ERROR","SENDING_ACCOUNT_DOES_NOT_EXIST","SENDING_ACCOUNT_FROZEN","SEQUENCE_NUMBER_TOO_NEW","SEQUENCE_NUMBER_TOO_OLD","STLOC_TYPE_MISMATCH_ERROR","STLOC_UNSAFE_TO_DESTROY_ERROR","STORAGE_ERROR","Script","Script","StatusCode","TOO_MANY_LOCALS","TRANSACTION_EXPIRED","TYPE_MISMATCH","TYPE_RESOLUTION_FAILURE","UNABLE_TO_DESERIALIZE_ACCOUNT","UNEXPECTED_DESERIALIZATION_ERROR","UNEXPECTED_ERROR_FROM_KNOWN_MOVE_FUNCTION","UNEXPECTED_SIGNATURE_TYPE","UNEXPECTED_VERIFIER_ERROR","UNIMPLEMENTED_HANDLE","UNKNOWN_BINARY_ERROR","UNKNOWN_INVARIANT_VIOLATION_ERROR","UNKNOWN_KIND","UNKNOWN_MODULE","UNKNOWN_NATIVE_STRUCT_FLAG","UNKNOWN_NOMINAL_RESOURCE","UNKNOWN_OPCODE","UNKNOWN_RUNTIME_STATUS","UNKNOWN_SCRIPT","UNKNOWN_SERIALIZED_TYPE","UNKNOWN_SIGNATURE_TYPE","UNKNOWN_STATUS","UNKNOWN_TABLE_TYPE","UNKNOWN_VALIDATION_STATUS","UNKNOWN_VERIFICATION_ERROR","UNKNOWN_VERSION","UNPACK_TYPE_MISMATCH_ERROR","UNREACHABLE","UNSAFE_RET_LOCAL_OR_RESOURCE_STILL_BORROWED","UNSAFE_RET_UNUSED_RESOURCES","Undefined","VALUE_DESERIALIZATION_ERROR","VALUE_SERIALIZATION_ERROR","VERIFICATION_ERROR","VERIFIER_INVARIANT_VIOLATION","VMError","VMResult","VMStatus","VM_MAX_TYPE_DEPTH_REACHED","VM_MAX_VALUE_DEPTH_REACHED","VM_STARTUP_FAILURE","WRITEREF_EXISTS_BORROW_ERROR","WRITEREF_NO_MUTABLE_REFERENCE_ERROR","WRITEREF_RESOURCE_ERROR","WRITEREF_TYPE_MISMATCH_ERROR","ZERO_SIZED_STRUCT","all_data","all_data","append_message_with_separator","at_code_offset","at_code_offsets","at_index","at_indices","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hash","hash","indices","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_enum_iter","into_vm_status","keep_or_discard","location","major_status","major_status","message","move_abort_code","ne","ne","ne","ne","ne","new","offsets","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","status_code","status_type","status_type","status_type","sub_status","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_message","with_sub_status","code_offset","function","location","code_offset","function","location","status_code","0","BalanceOperation","ContractEvent","Deposit","Discard","Keep","Loader","LogContext","MoveVM","NativeBalance","NoContextLog","Retry","Session","TransactionEffects","TransactionStatus","V0","Value","WalletId","Withdraw","address","address","alert","alert","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","constant_vector_generic","copy_value","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_constant","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","eq","eq","eq","eq","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","events","execute_function","execute_script","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_balance","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","is_constant_or_signer_ref","is_discarded","is_valid_arg","merge","module_cache","modules","name","ne","ne","ne","ne","new","new","new","new","new","new_session","num_mutated_accounts","partial_cmp","publish_module","resources","runtime","scripts","serialize","serialize","signer","simple_deserialize","simple_serialize","size","status","struct_","tag","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","transaction_argument_signer_reference","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txn_effects_to_writeset_and_events_cached","type_cache","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128","u64","u8","value_as","vector_address","vector_bool","vector_resource_for_testing_only","vector_u128","vector_u64","vector_u8","visit","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet_ops","with_caller"],"q":["dvm_libra_deps","","","","","","","","","","","","dvm_libra_deps::account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_libra_deps::bf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_libra_deps::compilerdvm_libra_deps::compiler::SpecBlockMember_","","","","","","","","","","","","","","","","","","","","dvm_libra_deps::compiler::compiled_unit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_libra_deps::compiler::compiled_unit::CompiledUnit","","","","","","","","","dvm_libra_deps::compiler::errors","","","","","","","","","","dvm_libra_deps::dsdvm_libra_deps::file_formatdvm_libra_deps::gasdvm_libra_deps::lcs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_libra_deps::lcs::test_helpers","dvm_libra_deps::loggerdvm_libra_deps::logger::json_log","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_libra_deps::logger::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_libra_deps::logger::prelude::sample","","","","","dvm_libra_deps::moduledvm_libra_deps::module::CompiledUnit","","","","","","","","","dvm_libra_deps::resultdvm_libra_deps::result::KeptVMStatus","","","dvm_libra_deps::result::VMStatus","","","","dvm_libra_deps::vmd":["","","","","","","","","","","","","A struct that represents an account address.","","An owned identifier.","The number of bytes in an address.","Hex address: 0x0","Creates a borrowed version of <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a vector of bytes to an <code>Identifier</code>.","","","","","","","","Converts this <code>Identifier</code> into a UTF-8-encoded byte …","Converts this <code>Identifier</code> into a <code>String</code>.","Returns if this identifier is “”. TODO: remove once …","Returns true if this string is a valid identifier.","","","","Creates a new <code>Identifier</code> instance.","","","","","","","","","","","","","","","Tries to convert the provided byte array into Address.","Tries to convert the provided byte array into Address.","","Tries to convert the provided byte buffer into Address.","","","","","","","","","","A trait that specifies the basic requirements for a CFG","The control flow graph that we build from the bytecode.","End index of the block ID in the bytecode vector","","Start index of the block ID in the bytecode vector","","Return an iterator over the blocks of the CFG","","","","","","","","Return the id of the entry block for this control-flow …","","","","Iterator over the indexes of instructions in this block","","","","Return the number of blocks (vertices) in the control …","","","Successors of the block ID in the bytecode vectoriven a set of targets and a set of dependenciesrovide an implementation for bytecodes related to data …","","","","Trait for the Move VM to abstract storage operations.","","Represents the intitial key into global storage where we …","","","","","Transaction data cache. Keep updates within a transaction …","","","","","","","","","<code>WriteSet</code> contains all access paths that one transaction …","A mutable version of <code>WriteSet</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Emit an event to the EventStore","","","","","","","","","","","","","","","","","","","","","","","","Check if this module exists.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the balance by balance id.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the serialized format of a <code>CompiledModule</code> given a …","","Try to load a resource from remote storage and create a …","","","","","","","","","","","","","","","","Create a <code>TransactionDataCache</code> with a <code>RemoteCache</code> that …","","","","","","","","","","Publish a module.","","","","Convert Accesses into a byte offset which would be used …","","Save balance operation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Abort execution with errorcode","Add the 2 u64 at the top of the stack and pushes the …","Address, a 16 bytes immutable type.","Index into the <code>AddressIdentifier</code> table.","The pool of address identifiers (addresses used in …","Represents the super set of all types. The type might …","Logical AND the 2 bool at the top of the stack and pushes …","Upper limit on the binary size","","","","","","","","","Constant values for the binary format header.","A wrapper for the binary vector","Bitwise AND the 2 u64 at the top of the stack and pushes …","Bitwise OR the 2 u64 at the top of the stack and pushes …","Boolean, <code>true</code> or <code>false</code>.","Branch to the instruction at position <code>CodeOffset</code> if the …","Branch to the instruction at position <code>CodeOffset</code> if the …","Branch unconditionally to the instruction at position …","<code>Bytecode</code> is a VM instruction of variable size. The type …","","","","","","","","","","","Call a function. The stack has the arguments pushed first …","","Convert the value at the top of the stack into u128.","Convert the value at the top of the stack into u64.","Convert the value at the top of the stack into u8.","Index into the code stream for a jump. The offset is …","A <code>CodeUnit</code> is the body of a function. It has the function …","A <code>CompiledModule</code> defines the structure of a module which …","A mutable version of <code>CompiledModule</code>. Converting to a …","Contains the main function to execute and its …","A mutable version of <code>CompiledScript</code>. Converting to a …","A <code>Constant</code> is a serialized value along with it’s type. …","The pool of <code>Constant</code> values","Index into the <code>ConstantPool</code> table.","Push the local identified by <code>LocalIndex</code> onto the stack. …","<code>Copyable</code> types do not need to follow the <code>Resource</code> rules.","","","","Divide the 2 u64 at the top of the stack and pushes the …","","","","Compare for equality the 2 value at the top of the stack …","Returns whether or not a given address has an object of …","","","","","","","","","","","","","","A <code>FieldDefinition</code> is the definition of a field: its name …","A field access info (owner type and offset)","Index into the <code>FieldHandle</code> table.","A complete or partial instantiation of a field (or the …","Index into the <code>FieldInstantiation</code> table.","Convert a mutable reference to an immutable reference.","A <code>FunctionDefinition</code> is the implementation of a function. …","Index into the <code>FunctionDefinition</code> table.","A <code>FunctionHandle</code> is a reference to a function. It is …","Index into the <code>FunctionHandle</code> table.","A complete or partial instantiation of a function","Index into the <code>FunctionInstantiation</code> table.","A <code>FunctionSignature</code> in internally used to create a unique …","","","Perform a “greater than or equal” than operation of …","Perform a “greater than” operation of the 2 u64 at …","The <code>LIBRA_MAGIC</code> size, 4 byte for major version and 1 byte …","","","","","","","","","Index into the <code>Identifier</code> table.","The pool of identifiers.","Load an immutable reference to a field identified by …","Load an immutable reference to a field identified by …","Return an immutable reference to an instance of type …","","Load an immutable reference to a local identified by …","A <code>Kind</code> classifies types into sets with rules each set …","","","","","","","","","The blob that must start a binary.","","","Push a <code>Constant</code> onto the stack. The value is loaded and …","Push <code>false</code> onto the stack.","Push <code>true</code> onto the stack.","Push a U128 constant onto the stack.","Push a U64 constant onto the stack.","Push a U8 constant onto the stack.","Perform a “less than or equal” operation of the 2 u64 …","Index of a local variable in a function.","Perform a “less than” operation of the 2 u64 at the …","Returns the index of <code>main</code> in case a script is converted …","","","","","","","","","","","","","","","","Max number of fields in a <code>StructDefinition</code>.","Perform a modulo operation on the 2 u64 at the top of the …","Represents accessors for a compiled module.","A <code>ModuleHandle</code> is a reference to a MOVE module. It is …","Index into the <code>ModuleHandle</code> table.","Move the instance of type StructDefinitionIndex, at the …","","Push the local identified by <code>LocalIndex</code> onto the stack. …","Move the instance at the top of the stack to the address …","","Multiply the 2 u64 at the top of the stack and pushes the …","Load a mutable reference to a field identified by …","Load a mutable reference to a field identified by …","Return a mutable reference to an instance of type …","","Load a mutable reference to a local identified by …","Mutable reference to a type.","","A native function implemented in Rust.","","","","","","Index 0 into the LocalsSignaturePool, which is guaranteed …","","The number of variants in this enum.","","Compare for inequality the 2 value at the top of the …","No operation.","Logical NOT the bool at the top of the stack and pushes …","","List of opcodes constants.","Logical OR the 2 bool at the top of the stack and pushes …","","","","Function can be invoked outside of its declaring module.","Create an instance of the type specified via …","","Pop and discard the value at the top of the stack. The …","","","","","Read a reference. The reference is on the stack, it is …","Reference to a type.","<code>Resource</code> types must follow move semantics and various …","Return from function, possibly with values according to …","","","","","","","","","","","","","","","","","","","","","","Constants for signature blob values.","Shift the (second top value) left (top value) bits and …","Shift the (second top value) right (top value) bits and …","A <code>Signature</code> is the list of locals used by a function.","Index into the <code>Signature</code> table.","The pool of <code>Signature</code> instances. Every function …","A <code>SignatureToken</code> is a type declaration for a location.","An iterator to help traverse the <code>SignatureToken</code> in a …","Alternative preorder traversal iterator for …","Signer, a 16 bytes immutable type representing the …","Pop value from the top of the stack and store it into the …","MOVE user type, resource or copyable","A complete or partial instantiation of a generic struct","Index into the <code>StructInstantiation</code> table.","A <code>StructDefinition</code> is a type definition. It either …","Index into the <code>StructDefinition</code> table.","<code>StructFieldInformation</code> indicates whether a struct is …","A <code>StructHandle</code> is a reference to a user defined type. It …","Index into the <code>StructHandle</code> table.","","Subtract the 2 u64 at the top of the stack and pushes the …","","","A (Table Type, Start Offset, Byte Count) size, which is 1 …","","","","","","","Generic index into one of the tables in the binary format.","Constants for table types in the binary.","Type parameter.","Type parameters are encoded as indices. This index can …","A type definition. <code>SignatureToken</code> allows the definition …","The pool of <code>TypeSignature</code> instances. Those are system and …","Unsigned integers, 128 bits length.","","Unsigned integers, 64 bits length.","","Unsigned integers, 8 bits length.","","","","Destroy an instance of a type and push the values bound …","","","Vector","","Write to a reference. The reference and the value are on …","","Bitwise XOR the 2 u64 at the top of the stack and pushes …","List of nominal resources (declared in this module) that …","Returns the address of the module.","Index into the <code>AddressIdentifierIndex</code>. Identifies …","","","All address identifiers used in this transaction.","All address identifiers used in this module.","Returns a reference to the inner <code>CompiledScriptMut</code>.","Returns a reference to the inner <code>CompiledModuleMut</code>.","","Returns the <code>CompiledModule</code> that will be used for accesses.","","","Create the following module which is convenient in tests: …ode for this function.","Code stream, function body.","","","","Constant pool. The constant values used in the …","Constant pool. The constant values used in the module.","","Set the index to this one. Useful for random testing.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deserializes a &[u8] slice into a <code>CompiledScript</code> instance.","Deserialize a &[u8] slice into a <code>CompiledModule</code> instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a dummy module to wrap the bytecode program in …","Return the simplest module that will pass the bounds …","Return a simple script that contains only a return in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handles to fields.","Contains either","","","Field instantiations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this instance into <code>CompiledScript</code> after …","Converts this instance into <code>CompiledModule</code> after …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The prototype of the function (module, name, signature).","","","Function defined in this module.","","","Handles to external/imported functions.","Handles to external and internal functions.","","","Function instantiations.","Function instantiations.","Return the successor offsets of this bytecode instruction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All identifiers used in this transaction.","All identifiers used in this module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The encoding of the instruction is the serialized form of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this instance into the inner <code>CompiledScriptMut</code>. …","Converts this instance into the inner <code>CompiledModuleMut</code>. …","","","","Converts a <code>CompiledScript</code> into a <code>CompiledModule</code> for code …","Converts a <code>CompiledScriptMut</code> to a <code>CompiledModule</code> for code …","This function should only be called on an instance of …","Returns true if this bytecode instruction is either a …","Return true if the branching behavior of this bytecode …","Whether the function has no locals (both arguments or …","","","Returns true if the <code>SignatureToken</code> is a mutable reference.","Returns whether the FunctionDefinition is native.","There are two ways for a type to have the Kind resource","Returns whether the FunctionDefinition is public.","Flag to indicate if this function is public.","Returns true if the <code>SignatureToken</code> is any kind of …","Returns true if the <code>SignatureToken</code> is a signer","Checks if the given kind is a sub-kind of another.","Return true if this bytecode instruction always branches","Returns true if the <code>SignatureToken</code> can represent a …","Helper function to determine the kind of a struct …","Returns the number of items of a specific <code>IndexKind</code>.","Returns the count of a specific <code>IndexKind</code>","Length of the <code>Signature</code>.","","List of locals type. All locals are typed.","The module that defines the type.","The module that defines the function.","","","Handles to all modules referenced.","Handles to external modules and self.","","Returns the code key of <code>module_handle</code>","Returns the name of the module.","The name of the module published in the code section for …","The name of the type.","The name of the function.","The name of the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the offset that this bytecode instruction …","","The list of arguments to the function.","The list of arguments to the function.","","","","","","","","","","","","","","","","","","","","","","","","","The list of return types.","The list of return types.","Returns the <code>ModuleHandle</code> for <code>self</code>.","","","Returns the code key of <code>self</code>","Handle to self.","","Serializes a <code>CompiledScript</code> into a binary. The mutable …","Serializes this into a binary format.","Serializes a <code>CompiledModule</code> into a binary. The mutable …","Serializes this into a binary format.","","The type of the field.","","Returns the “value kind” for the <code>SignatureToken</code>","","","Locals signature pool. The signature for all locals of …","","Struct instantiations.","","Types defined in this module.","The <code>StructHandle</code> for this <code>StructDefinition</code>. This has the …","","","Handles to external/imported types.","Handles to external and internal typeshe type formals (identified by their index into the vec) …","The type formals (identified by their index into the vec) …","","","","The type formals (identified by their index into the vec) …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A newtype wrapper that represents the (abstract) memory …","","","","","The size in bytes for a non-string or address constant on …","","","The Move VM implementation for gas charging.","The cost tables, keyed by the serialized form of the …","For V1 all accounts will be ~800 bytes","","","","","","","","","","","","","","","","","","","A trait encoding the operations permitted on the …","The underlying carrier for gas-related units and costs. …","","The  <code>GasCost</code> tracks:","A newtype wrapper around the gas price for each unit of …","A newtype wrapper around the underlying carrier for the …","Any transaction over this size will be charged …","","","","","The maximum size representable by AbstractMemorySize","","For exists checks on data that doesn’t exists this is …","","","One unit of gas","","","","","The size in bytes for a reference on the stack","","","","","","","The size of a struct in bytes","","","","","","","","","","","","","","","","","","","","","","","","","Add the two <code>GasAlgebra</code>s together.","Apply a function <code>f</code> of two arguments to the carrier. Since …","","","","","","","","","","","","","","","","","Calculate the intrinsic gas for the transaction based …","Charge an instruction and fail if not enough gas units …","Charge an instruction over data with a given size and …","Charge gas related to the overall size of a transaction …","","","","","","","","","","","","","","","","Return the <code>CostTable</code> behind this <code>CostStrategy</code>.","Charge a given amount of gas and fail if not enough gas …","","","","","","","","","","","","","","","","","","","","","","","","","","Divide one <code>GasAlgebra</code> by the other.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the carrier.","","","","The cost per-byte read from global storage.","The cost per-byte written to storage.","","","","","","","","","","","","","","","","","","","","","","","","The units of gas that to be charged per byte over the …","Any transaction over this size will be charged an …","Map a function <code>f</code> of one argument over the underlying data.","Map a function <code>f</code> of two arguments over the underlying …","The maximum gas unit price that a transaction can be …","","~5 microseconds should equal one unit of computational …","","The minimum gas price that a transaction can be submitted …","The flat minimum amount of gas required for any …","Multiply two <code>GasAlgebra</code>s together.","","","","","","","","","Project a value into the gas algebra.","","","","","","","Return the gas left.","","","","","","","Subtract one <code>GasAlgebra</code> from the other.","A system <code>CostStrategy</code> does not charge for operations.","","","","","","","","","","","","","","Take a GasCost from our gas schedule and convert it to a …","A transaction <code>CostStrategy</code>. Charge for every operation …","","","","","","","","","","","","","","","","","","","","","","","","","We allow casting between GasAlgebras as long as they have …","","","","","","","","","","","","","","","","","","","","","Maximal allowed depth of LCS data, counting only structs …","Variable length sequences in LCS are limited to max …","","","","","","","","","","","","","","","","","","","","","","Deserializes a <code>&[u8]</code> into a type.","Perform a stateful deserialization from a <code>&[u8]</code> using the …","","","","","Same as <code>to_bytes</code> but write directly into an <code>std::io::Write</code>…","Same as <code>to_bytes</code> but only return the size of the …","","Serialize the given data structure as a <code>Vec<u8></code> of LCS.","","","","","","","","","Consensus received an equivocating vote","Consensus received an invalid message (not well-formed, …","","","The “debug” level.","","","The “error” level.","","","","The “info” level.","A block being committed or executed is invalid","Consensus received an invalid proposal","Consensus received an invalid new round message","HealthChecker received an invalid message","Network received an invalid message from a remote peer","HealthChecker received an invalid network event","Mempool received an invalid network event","A received block is invalid","Consensus received an invalid sync info message","Mempool received a transaction from another peer with an …","","","","","","","","","A failed noise handshake that’s either a clear bug or …","","A schema of key-value pairs.","","","","Invalid chunk of transactions received","","The “trace” level.","","A visitor for the key-value pairs in a <code>Schema</code>.","","The “warn” level.","An trait encapsulating the operations required for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes event to event stream Example: event!(“committed…","","","","","","","","","","","","","","","","","","","","","","","","Get a value from a debuggable type.","Get a value from a displayable type.","Get a value from a debuggable type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the most verbose logging level filter.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Visit key-value pairs.","","","Visit a key-value pair.","","","","","","","","","","","","","Write the log.","","","","","","","","","","","","","","","","","Get up to MAX_EVENTS_IN_QUEUE last events and clears the …","Sends event to event stream.","","","","","","","","","Always Sample","Consensus received an equivocating vote","Consensus received an invalid message (not well-formed, …","Only sample a single time during a window of time. This …","A struct for writing logs to a file","Sample based on the frequency of the event. The provided …","A block being committed or executed is invalid","Consensus received an invalid proposal","Consensus received an invalid new round message","HealthChecker received an invalid message","Network received an invalid message from a remote peer","HealthChecker received an invalid network event","Mempool received an invalid network event","A received block is invalid","Consensus received an invalid sync info message","Mempool received a transaction from another peer with an …","A failed noise handshake that’s either a clear bug or …","","","","Invalid chunk of transactions received","","","","","","","","","","","","","","","","","","Writes event to event stream Example: event!(“committed…","","","","","","","","","","","","","","Implement periodic sampling for logs","","","","","","","","","","","","","","","","","Write to file","Always Sample","Only sample a single time during a window of time. This …","Sample based on the frequency of the event. The provided …","","","Abort execution with errorcode","Add the 2 u64 at the top of the stack and pushes the …","Address, a 16 bytes immutable type.","","","Logical AND the 2 bool at the top of the stack and pushes …","Bitwise AND the 2 u64 at the top of the stack and pushes …","Bitwise OR the 2 u64 at the top of the stack and pushes …","Boolean, <code>true</code> or <code>false</code>.","","Branch to the instruction at position <code>CodeOffset</code> if the …","Branch to the instruction at position <code>CodeOffset</code> if the …","Branch unconditionally to the instruction at position …","<code>Bytecode</code> is a VM instruction of variable size. The type …","Call a function. The stack has the arguments pushed first …","","Convert the value at the top of the stack into u128.","Convert the value at the top of the stack into u64.","Convert the value at the top of the stack into u8.","A <code>CompiledModule</code> defines the structure of a module which …","Contains the main function to execute and its …","","Push the local identified by <code>LocalIndex</code> onto the stack. …","","Divide the 2 u64 at the top of the stack and pushes the …","Compare for equality the 2 value at the top of the stack …","Returns whether or not a given address has an object of …","","Convert a mutable reference to an immutable reference.","Perform a “greater than or equal” than operation of …","Perform a “greater than” operation of the 2 u64 at …","Load an immutable reference to a field identified by …","Load an immutable reference to a field identified by …","Return an immutable reference to an instance of type …","","Load an immutable reference to a local identified by …","Push a <code>Constant</code> onto the stack. The value is loaded and …","Push <code>false</code> onto the stack.","Push <code>true</code> onto the stack.","Push a U128 constant onto the stack.","Push a U64 constant onto the stack.","Push a U8 constant onto the stack.","Perform a “less than or equal” operation of the 2 u64 …","Perform a “less than” operation of the 2 u64 at the …","Perform a modulo operation on the 2 u64 at the top of the …","","","","Represents accessors for a compiled module.","","A <code>ModuleHandle</code> is a reference to a MOVE module. It is …","Represents the initial key into global storage where we …","Move the instance of type StructDefinitionIndex, at the …","","Push the local identified by <code>LocalIndex</code> onto the stack. …","Move the instance at the top of the stack to the address …","","","Multiply the 2 u64 at the top of the stack and pushes the …","Load a mutable reference to a field identified by …","Load a mutable reference to a field identified by …","Return a mutable reference to an instance of type …","","Load a mutable reference to a local identified by …","Mutable reference to a type.","Compare for inequality the 2 value at the top of the …","No operation.","Logical NOT the bool at the top of the stack and pushes …","Logical OR the 2 bool at the top of the stack and pushes …","Create an instance of the type specified via …","","Pop and discard the value at the top of the stack. The …","Read a reference. The reference is on the stack, it is …","Reference to a type.","Return from function, possibly with values according to …","","","","Represents accessors for a compiled script.","Shift the (second top value) left (top value) bits and …","Shift the (second top value) right (top value) bits and …","A <code>SignatureToken</code> is a type declaration for a location.","Signer, a 16 bytes immutable type representing the …","","Pop value from the top of the stack and store it into the …","MOVE user type, resource or copyable","","","Subtract the 2 u64 at the top of the stack and pushes the …","Type parameter.","Unsigned integers, 128 bits length.","","Unsigned integers, 64 bits length.","","Unsigned integers, 8 bits length.","","Destroy an instance of a type and push the values bound …","","Vector","","Write to a reference. The reference and the value are on …","Bitwise XOR the 2 u64 at the top of the stack and pushes …","","Returns the address of the module.","","Index into the <code>AddressIdentifierIndex</code>. Identifies …","","","","","Returns the <code>CompiledModule</code> that will be used for accesses.","Returns the <code>CompiledScript</code> that will be used for accesses.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the name of the module.","","The name of the module published in the code section for …","","","","","","","","Returns the <code>ModuleHandle</code> for <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An <code>AbortLocation</code> specifies where a Move program <code>abort</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates an error from the VM, e.g. OUT_OF_GAS, …","The VM status corresponding to an EXECUTED status code","","Indicates an failure from inside Move code, where the VM …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates <code>abort</code> occurred in the specified module","Indicates an <code>abort</code> from inside Move code. Contains the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the <code>abort</code> occurred in a script","We don’t derive Arbitrary on this enum because it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>VMStatus</code> is represented as either","","","","","","","","","","","Append the message <code>message</code> to the message field of the VM …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>Ok</code> with a recorded status if it should be kept, …","","","","","Returns the Move abort code if the status is <code>MoveAbort</code>, …","","","","","","","","","","","","","","","","","","Return the status code for the <code>VMStatus</code>","","Return the status type for this <code>VMStatus</code>. This is solely …","Return the status type for this status code","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Support versioning of the data structure.","","Discard the transaction output","Keep the transaction output","","","","","","Retry the transaction because it is after a …","","Collection of side effects produced by a Session.","The status of executing a transaction. The VM decides …","","A Move value – a wrapper around <code>ValueImpl</code> which can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute a Move function with the given arguments. This is …","Execute a transaction script.","Finish up the session and produce the side effects.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new Session backed by the given storage.","","","Publish the given module.","","","","","","","","","","","","","","","","","","","","","","","Create a “unowned” reference to a signer value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,1,1,2,1,2,1,2,1,1,1,1,2,2,1,2,2,1,1,1,2,1,1,2,1,2,1,2,2,2,2,2,1,2,1,2,1,2,1,1,2,1,1,2,1,2,1,2,1,1,1,1,1,1,1,2,1,2,1,2,1,2,0,0,0,3,4,3,4,3,4,4,4,4,4,4,4,3,4,4,4,3,4,4,4,3,4,4,3,4,4,4,4,4,5,6,7,8,9,10,11,12,12,13,14,14,12,0,15,16,17,12,13,18,19,14,13,14,12,12,0,0,0,20,0,0,13,12,12,13,16,13,13,16,13,13,21,18,0,0,22,0,13,13,17,12,23,20,14,24,25,0,13,12,13,12,14,12,0,0,13,0,0,0,19,0,22,21,18,0,0,0,0,0,12,12,12,12,16,12,13,12,18,13,13,26,14,0,14,14,14,14,0,0,12,27,12,13,12,18,13,12,12,12,28,12,14,15,28,21,23,0,29,0,0,0,0,0,0,13,12,19,12,30,29,13,31,24,25,12,30,12,12,23,13,18,0,0,0,26,29,12,17,12,19,14,14,17,0,13,5,12,12,12,21,0,15,20,0,0,0,12,12,22,13,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,21,12,14,0,0,16,16,16,13,0,0,19,13,17,23,32,13,23,0,22,17,0,13,0,0,32,18,13,31,12,12,33,5,6,7,8,9,10,11,34,27,35,15,36,28,37,22,38,39,26,33,40,41,21,42,43,31,18,14,29,17,19,32,16,30,12,13,20,33,44,35,15,36,28,5,34,6,37,22,7,8,38,24,9,39,26,25,33,10,40,41,21,42,43,31,18,14,23,29,17,19,11,32,16,30,12,13,20,27,44,35,15,36,28,5,34,6,37,22,7,8,38,24,9,39,26,25,33,10,40,41,21,42,43,31,18,14,23,29,17,19,11,32,16,30,12,13,20,27,5,34,6,7,8,9,26,10,17,11,30,12,27,5,6,7,8,9,10,11,5,34,6,7,8,9,26,10,17,11,30,12,27,5,34,6,7,8,9,10,17,11,27,0,0,36,44,27,44,35,15,36,28,5,34,6,37,22,7,8,38,24,9,39,26,25,33,10,40,41,21,42,43,31,18,14,23,29,17,19,11,32,16,30,12,13,20,27,44,35,15,36,28,5,34,6,37,22,7,8,38,24,9,39,26,25,33,10,40,41,21,42,43,31,18,14,23,29,17,19,11,32,16,30,12,13,20,27,44,44,35,15,36,28,5,34,6,37,22,7,8,38,24,9,39,26,25,33,10,40,41,21,42,43,31,18,14,23,29,17,19,11,32,16,30,12,13,20,27,5,6,7,8,9,10,11,27,27,28,5,34,6,7,8,38,24,9,39,26,25,33,10,40,41,21,42,43,31,18,14,23,29,17,19,11,32,16,30,12,13,20,27,28,5,34,6,7,8,9,10,17,11,27,0,38,44,35,15,36,28,5,5,34,6,6,37,22,7,7,8,8,38,24,9,9,39,26,25,33,10,10,40,41,21,42,43,31,18,14,23,29,17,19,11,11,32,16,30,30,12,12,13,20,27,27,27,27,44,35,15,36,28,5,34,6,37,22,7,8,38,24,9,39,26,25,33,10,40,41,21,42,43,31,18,14,23,29,17,19,11,32,16,30,12,13,20,27,36,5,34,6,7,8,9,10,17,11,27,44,35,15,36,28,5,34,6,37,22,7,8,38,24,9,39,26,25,33,10,40,41,21,42,43,31,18,14,23,29,17,19,11,32,16,30,12,13,20,27,44,35,15,36,28,5,34,6,37,22,7,8,38,24,9,39,26,25,33,10,40,41,21,42,43,31,18,14,23,29,17,19,11,32,16,30,12,13,20,27,30,12,17,12,35,5,6,7,8,9,10,11,36,37,38,33,40,37,41,0,34,37,38,33,40,42,43,28,5,34,6,7,8,38,24,9,39,26,25,33,10,40,41,21,42,43,31,18,29,19,11,32,16,13,20,27,44,27,0,39,0,27,5,34,6,7,8,9,10,17,11,27,44,38,39,33,40,35,36,11,30,12,41,5,34,6,7,8,9,26,10,17,11,30,12,27,5,6,7,8,9,10,11,30,12,27,27,44,35,15,36,28,5,34,6,37,22,7,8,38,24,9,39,26,25,33,10,40,41,21,42,43,31,18,14,23,29,17,19,11,32,16,30,12,13,20,27,27,44,35,15,36,28,5,34,6,37,22,7,8,38,24,9,39,26,25,33,10,40,41,21,42,43,31,18,14,23,29,17,19,11,32,16,30,12,13,20,27,44,35,15,36,28,5,34,6,37,22,7,8,38,24,9,39,26,25,33,10,40,41,21,42,43,31,18,14,23,29,17,19,11,32,16,30,12,13,20,27,38,39,43,19,36,41,5,7,8,9,10,11,40,42,33,43,44,35,15,36,28,5,34,6,37,22,7,8,38,24,9,39,26,25,33,10,40,41,21,42,43,31,18,14,23,29,17,19,11,32,16,30,12,13,20,27,45,46,47,48,45,49,48,50,45,46,50,47,48,45,49,51,46,50,50,46,0,0,52,52,0,0,53,54,55,52,53,54,55,52,53,54,55,52,53,54,55,52,53,54,55,52,53,54,55,52,53,54,55,52,53,53,54,55,52,53,54,55,52,52,54,55,52,52,52,55,53,54,55,52,53,54,55,52,53,53,54,55,52,54,52,0,53,54,55,52,56,57,57,56,56,57,56,57,56,0,0,0,0,0,0,0,0,0,0,0,58,58,59,0,60,0,59,0,0,0,0,58,58,0,0,0,0,58,58,58,60,58,0,0,0,61,62,63,61,59,58,61,63,59,60,64,65,62,66,67,68,69,58,61,63,59,60,64,65,62,66,67,68,69,58,61,63,59,60,64,65,58,61,63,59,60,64,65,58,61,63,59,59,64,65,58,61,63,59,60,64,65,62,66,67,68,69,58,61,63,59,60,64,65,62,66,67,68,69,58,61,63,59,60,64,65,58,61,63,59,60,64,65,62,66,67,68,69,70,62,58,61,63,59,60,64,65,58,61,63,59,60,64,65,58,61,63,59,60,64,65,62,70,62,69,58,58,61,61,63,59,59,60,64,65,65,58,61,63,59,59,60,64,65,62,66,67,68,69,65,69,70,62,71,69,71,69,58,61,61,63,59,60,64,65,58,61,63,59,60,64,65,62,66,67,68,69,58,61,63,59,60,64,65,62,66,67,68,69,64,64,60,64,65,64,70,62,70,62,62,61,61,61,58,61,63,59,60,64,65,63,59,65,62,66,67,68,69,58,61,63,59,59,70,62,65,62,59,59,70,62,58,61,63,59,60,64,65,58,61,63,59,60,64,65,58,61,63,59,60,64,65,58,61,59,58,61,63,59,60,64,65,62,66,67,68,69,58,61,63,59,60,64,65,62,66,67,68,69,63,58,61,63,59,60,64,65,62,66,67,68,69,61,58,61,63,59,60,64,65,62,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,0,87,88,89,0,90,87,91,91,92,0,0,93,91,0,87,87,88,87,87,87,0,0,0,0,91,91,92,91,91,91,0,87,87,87,87,87,0,89,0,90,87,91,91,91,91,91,0,0,0,0,0,0,0,0,0,91,93,94,87,95,91,87,87,87,91,91,91,0,89,0,89,0,0,87,89,89,0,89,0,0,0,0,0,0,91,0,0,0,0,0,0,0,87,87,91,91,96,89,0,0,87,87,87,87,87,0,0,91,91,91,91,91,0,87,87,87,87,87,87,87,96,96,0,87,91,91,91,91,91,91,91,0,91,97,87,89,0,87,87,87,87,87,87,88,87,87,87,87,87,0,91,0,0,0,91,91,91,91,91,91,91,91,91,91,91,92,94,98,87,99,87,99,87,0,0,91,95,91,91,91,87,0,91,87,87,87,98,91,91,91,87,88,90,87,91,92,93,91,87,87,89,0,0,0,88,88,89,0,89,0,89,0,88,87,87,0,0,0,0,0,91,91,0,0,0,0,0,0,92,91,92,0,0,0,0,0,0,0,92,91,0,0,96,0,0,0,88,0,0,0,0,92,0,0,0,92,88,92,88,92,88,87,87,91,91,88,92,87,91,87,91,98,100,101,100,100,102,103,97,104,105,100,104,97,0,106,107,108,96,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,105,106,107,108,96,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,105,105,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,93,92,98,119,102,100,100,102,103,118,92,115,112,72,73,74,75,76,77,78,79,80,81,82,83,84,98,86,119,102,103,105,106,107,108,96,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,105,106,107,108,96,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,105,97,104,118,103,106,107,108,96,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,105,0,0,0,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,105,111,100,100,103,115,100,100,103,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,105,102,103,106,107,108,96,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,105,105,98,100,100,103,100,100,102,103,100,100,102,103,91,113,114,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,112,113,114,85,117,86,93,92,118,91,89,100,100,102,103,106,107,108,96,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,105,0,106,107,108,96,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,105,72,73,74,75,76,77,78,79,80,81,82,83,84,97,104,105,106,107,97,102,104,91,91,86,105,92,92,98,109,98,98,92,92,93,91,92,93,104,103,86,105,119,109,110,100,100,102,103,100,104,100,101,109,110,116,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,92,118,119,91,97,102,104,103,72,73,74,75,76,77,78,79,80,81,82,83,84,105,106,107,91,111,110,117,102,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,93,92,92,92,105,0,0,0,110,117,100,100,100,104,103,0,97,102,104,103,118,116,100,92,100,102,103,100,103,100,103,115,100,100,102,103,100,100,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,72,73,74,75,76,77,78,79,80,81,82,83,84,106,107,108,96,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,105,106,107,108,96,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,105,118,106,107,108,96,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,105,109,110,112,113,114,117,102,106,107,108,96,72,73,74,75,76,77,78,79,80,81,82,83,84,101,109,110,111,95,112,113,114,115,116,98,85,117,86,93,92,118,119,91,97,102,104,103,89,88,99,90,94,87,105,0,0,120,120,120,120,0,120,120,0,0,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0,0,0,120,120,120,120,0,0,0,0,0,0,120,120,120,120,0,120,120,120,120,120,120,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,121,121,122,123,124,125,126,127,128,120,122,123,124,125,126,127,128,120,0,128,128,128,122,123,124,125,126,127,120,122,123,124,125,126,127,120,120,128,128,125,125,122,123,124,125,126,127,128,120,122,123,124,125,126,127,128,120,122,123,124,125,126,127,128,121,122,123,124,125,126,127,128,120,128,122,123,124,125,126,127,120,122,123,124,120,122,123,124,125,126,127,122,123,124,125,126,127,120,122,123,124,125,126,127,128,120,126,125,121,122,123,124,125,125,122,123,124,120,122,123,124,125,126,127,128,120,126,127,126,122,123,124,125,126,127,128,120,125,125,121,121,125,125,125,127,125,125,121,126,126,122,123,124,125,126,127,121,122,123,124,127,0,120,128,122,123,124,125,126,127,121,128,122,123,124,125,126,127,122,123,124,125,126,127,120,127,128,122,123,124,125,126,127,128,120,122,123,124,125,126,127,128,120,122,123,124,125,126,127,128,120,121,122,123,124,125,126,127,128,120,0,129,129,0,129,129,129,129,129,129,129,129,0,0,129,129,129,129,129,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,0,129,129,0,129,0,0,0,0,129,129,129,129,129,129,0,0,130,130,131,132,133,132,131,133,0,0,131,133,130,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,0,0,130,131,0,0,0,132,130,131,133,0,0,131,133,0,134,135,134,136,137,131,138,135,132,139,140,133,130,134,136,137,131,138,135,132,139,140,133,130,134,136,138,134,131,135,132,139,140,133,130,131,135,132,139,140,133,130,131,135,133,0,134,136,137,131,138,135,132,139,140,133,130,134,136,137,131,138,135,132,139,140,133,130,140,133,130,137,134,136,137,131,138,135,132,139,140,133,130,138,140,131,135,133,131,135,133,135,140,133,130,0,0,140,137,131,138,135,132,139,140,133,133,130,134,136,137,131,131,138,135,132,139,140,133,130,132,132,132,131,133,135,133,0,134,134,136,137,131,138,135,132,139,140,133,130,136,134,136,137,131,138,135,132,139,140,133,130,134,0,137,134,140,140,140,0,131,137,137,140,135,134,136,135,139,140,131,135,133,0,134,134,134,0,135,140,133,130,136,136,140,135,140,133,130,131,135,132,139,140,133,130,133,0,134,136,137,131,138,135,132,139,140,133,130,134,136,137,131,138,135,132,139,140,133,130,134,136,137,131,138,135,132,139,140,133,130,141,139,130,142,134,136,137,131,138,135,132,139,140,133,130,0,143,0,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,0,0,144,144,144,144,144,144,144,144,145,130,130,145,0,145,130,130,130,130,130,130,130,130,130,130,130,0,0,0,130,146,147,145,146,147,145,0,146,147,145,146,147,145,146,147,145,0,0,145,146,147,145,0,146,147,145,146,147,145,146,147,0,147,0,0,146,147,145,146,147,145,146,147,145,146,147,145,0,146,145,145,145,0,0,91,91,92,148,15,91,91,91,92,148,91,91,91,0,91,91,91,91,91,0,0,0,91,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,52,15,0,0,0,0,91,91,91,91,91,0,91,91,91,91,91,91,92,91,91,91,91,91,91,91,91,92,91,0,52,15,0,91,91,0,92,148,91,92,148,92,91,92,92,148,92,148,92,148,91,91,92,148,91,91,149,100,149,101,100,150,100,150,100,150,148,149,148,151,149,148,151,149,148,151,149,148,151,149,150,151,151,100,150,100,150,36,149,148,151,149,148,151,149,151,149,148,151,149,148,151,149,148,151,149,148,151,100,100,100,100,149,149,148,151,149,148,151,36,100,100,100,150,100,150,100,150,100,150,149,149,151,100,150,100,150,149,148,151,149,148,151,36,37,37,100,150,100,150,100,100,149,101,37,149,148,151,149,151,149,100,100,100,149,148,151,100,150,100,150,148,148,36,100,100,100,150,100,150,100,100,149,148,151,149,148,151,149,149,148,151,149,148,151,149,148,151,36,148,149,148,151,56,57,57,56,56,57,56,57,56,152,152,152,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,152,152,152,152,152,152,152,152,152,153,153,154,153,154,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,152,152,152,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,154,155,156,153,154,152,152,152,152,152,154,152,152,152,152,0,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,155,156,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,155,152,152,152,152,0,0,0,152,152,152,152,152,152,152,152,157,158,158,158,158,158,158,155,157,158,153,154,156,152,155,157,158,153,154,156,152,155,157,158,153,154,156,152,155,157,158,153,154,156,152,155,157,153,154,156,152,155,157,158,153,154,156,152,155,157,158,153,154,156,152,153,154,156,152,155,157,158,153,154,156,152,155,157,153,154,156,152,155,157,153,154,156,152,153,154,156,152,158,155,155,157,157,158,158,153,153,154,154,156,156,152,155,157,158,153,154,156,152,153,154,156,152,157,155,157,158,153,154,156,152,155,157,157,158,153,154,156,152,152,157,153,157,157,158,157,153,155,157,153,154,156,158,157,155,157,153,154,156,152,153,154,156,152,153,157,153,152,157,153,154,156,152,155,157,158,153,154,156,152,155,157,158,153,154,156,155,157,158,153,154,156,152,152,155,157,158,153,154,156,152,155,157,158,153,154,156,152,155,157,158,153,154,156,152,158,158,159,159,159,160,160,160,160,161,0,0,162,163,163,0,0,0,0,0,163,0,0,0,164,0,0,162,161,165,166,167,161,164,163,168,169,170,171,167,165,162,161,164,163,168,169,170,171,167,165,162,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,164,163,167,165,162,164,163,167,165,162,165,161,161,164,164,163,168,169,170,171,167,165,162,161,164,163,168,169,170,171,167,165,162,161,164,163,161,164,163,168,169,170,171,167,165,162,161,162,164,163,165,162,161,164,163,165,162,164,163,168,171,171,171,164,164,163,165,165,162,161,161,164,163,163,168,169,170,171,167,165,162,161,172,164,164,165,164,163,168,169,170,171,167,165,162,161,164,163,168,169,170,171,167,165,162,161,161,163,161,162,169,168,167,164,163,165,162,164,169,170,167,165,170,171,165,171,168,170,169,164,163,161,161,161,161,163,161,165,164,163,164,163,167,165,162,164,165,161,161,164,163,168,169,170,171,167,165,162,161,164,163,168,169,170,171,167,165,162,161,0,169,164,163,168,169,170,171,167,165,162,161,161,161,161,161,161,161,161,161,161,161,167,164,163,168,169,170,171,167,165,162,161,168,164],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["identstr",3]],[[]],[[],["identstr",3]],[[]],[[]],[[],["identstr",3]],[[]],[[]],[[],["accountaddress",3]],[[],["identifier",3]],[[]],[[]],[[["accountaddress",3]],["ordering",4]],[[["identifier",3]],["ordering",4]],[[["usize",15]]],[[["usize",15]]],[[],["identstr",3]],[[["usize",15]]],[[["usize",15]]],[[],[["result",4],["accountaddress",3]]],[[],[["identifier",3],["result",4]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["accountaddress",3]],["bool",15]],[[["identifier",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[["identstr",3]],["identifier",3]],[[["str",15]],[["error",3],["accountaddress",3],["result",4]]],[[["publickey",3]],["accountaddress",3]],[[["str",15]],[["error",3],["accountaddress",3],["result",4]]],[[["global",3],["vec",3],["u8",15]],[["identifier",3],["error",3],["result",4]]],[[]],[[],["hashvalue",3]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],[["global",3],["vec",3],["u8",15]]],[[],["string",3]],[[],["bool",15]],[[],["bool",15]],[[["accountaddress",3]],["bool",15]],[[["identifier",3]],["bool",15]],[[],["accountaddress",3]],[[],[["identifier",3],["error",3],["result",4]]],[[["accountaddress",3]],[["option",4],["ordering",4]]],[[["identifier",3]],[["option",4],["ordering",4]]],[[],["accountaddress",3]],[[],["result",4]],[[],["result",4]],[[],["shorthexstr",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[]],[[],[["global",3],["vec",3],["u8",15]]],[[],[["error",3],["accountaddress",3],["result",4]]],[[],[["error",3],["accountaddress",3],["result",4]]],[[["string",3]],[["error",3],["accountaddress",3],["result",4]]],[[["global",3],["vec",3],["u8",15]],[["error",3],["accountaddress",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[["u16",15]],["u16",15]],[[["u16",15]],["u16",15]],[[["u16",15]],["u16",15]],[[["u16",15]],["u16",15]],[[],[["global",3],["vec",3],["u16",15]]],[[],[["global",3],["vec",3],["u16",15]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[],["u16",15]],[[],["u16",15]],[[]],[[],["usize",15]],[[["u16",15]],[["box",3],["global",3],["iterator",8]]],[[["u16",15]],[["box",3],["global",3],["iterator",8]]],[[]],[[],["vmcontrolflowgraph",3]],[[],["u16",15]],[[],["u16",15]],[[["u16",15]],[["global",3],["vec",3],["u16",15]]],[[["u16",15]],["vec",3]],[[["u16",15]],["vec",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["string",3],["loc",3]],["modulename",3]],[[],["moduleident",3]],[[["string",3],["loc",3]],["field",3]],[[["string",3],["loc",3]],["structname",3]],[[["string",3],["loc",3]],["functionname",3]],[[["string",3],["loc",3]],["constantname",3]],[[["string",3],["loc",3]],["var",3]],null,[[]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["modulename",3]],[[],["moduleident_",3]],[[],["moduleident",3]],[[],["field",3]],[[],["structname",3]],[[],["functionname",3]],[[],["functionvisibility",4]],[[],["constantname",3]],[[],["kind_",4]],[[],["var",3]],[[],["unaryop_",4]],[[],["binop_",4]],[[],["address",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["modulename",3]],["ordering",4]],[[["moduleident_",3]],["ordering",4]],[[["moduleident",3]],["ordering",4]],[[["field",3]],["ordering",4]],[[["structname",3]],["ordering",4]],[[["functionname",3]],["ordering",4]],[[["constantname",3]],["ordering",4]],[[["kind_",4]],["ordering",4]],[[["var",3]],["ordering",4]],[[["address",3]],["ordering",4]],[[["option",4],["vec",3],["result",4],["address",3],["program",3]],[["vec",3],["result",4],["vec",3]]],null,null,[[],["constpool",3]],[[],["address",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["use",4]],["bool",15]],[[["modulename",3]],["bool",15]],[[["moduleident_",3]],["bool",15]],[[["moduleident",3]],["bool",15]],[[["field",3]],["bool",15]],[[["structname",3]],["bool",15]],[[["structdefinition",3]],["bool",15]],[[["structfields",4]],["bool",15]],[[["functionname",3]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["functionvisibility",4]],["bool",15]],[[["functionbody_",4]],["bool",15]],[[["function",3]],["bool",15]],[[["constantname",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["specblock_",3]],["bool",15]],[[["specblocktarget_",4]],["bool",15]],[[["pragmaproperty_",3]],["bool",15]],[[["specapplypattern_",3]],["bool",15]],[[["specapplyfragment_",4]],["bool",15]],[[["specblockmember_",4]],["bool",15]],[[["specconditionkind",4]],["bool",15]],[[["invariantkind",4]],["bool",15]],[[["moduleaccess_",4]],["bool",15]],[[["kind_",4]],["bool",15]],[[["type_",4]],["bool",15]],[[["var",3]],["bool",15]],[[["bind_",4]],["bool",15]],[[["value_",4]],["bool",15]],[[["unaryop_",4]],["bool",15]],[[["binop_",4]],["bool",15]],[[["exp_",4]],["bool",15]],[[["sequenceitem_",4]],["bool",15]],[[["address",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["loc",3]],[[],["loc",3]],[[],["loc",3]],[[],["loc",3]],[[],["loc",3]],[[],["loc",3]],[[],["loc",3]],null,null,null,null,null,null,null,[[["option",4],["string",3],["address",3],["option",4]],[["result",4],["error",3]]],null,null,null,null,null,null,null,[[["use",4]],["bool",15]],[[["modulename",3]],["bool",15]],[[["moduleident_",3]],["bool",15]],[[["moduleident",3]],["bool",15]],[[["field",3]],["bool",15]],[[["structname",3]],["bool",15]],[[["structdefinition",3]],["bool",15]],[[["structfields",4]],["bool",15]],[[["functionname",3]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["functionvisibility",4]],["bool",15]],[[["functionbody_",4]],["bool",15]],[[["function",3]],["bool",15]],[[["constantname",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["specblock_",3]],["bool",15]],[[["specblocktarget_",4]],["bool",15]],[[["pragmaproperty_",3]],["bool",15]],[[["specapplypattern_",3]],["bool",15]],[[["specapplyfragment_",4]],["bool",15]],[[["specblockmember_",4]],["bool",15]],[[["moduleaccess_",4]],["bool",15]],[[["type_",4]],["bool",15]],[[["var",3]],["bool",15]],[[["bind_",4]],["bool",15]],[[["value_",4]],["bool",15]],[[["exp_",4]],["bool",15]],[[["sequenceitem_",4]],["bool",15]],[[["address",3]],["bool",15]],[[],["constpool",3]],[[],["address",3]],[[["str",15],["global",3],["hashmap",3],["randomstate",3],["string",3],["vec",3],["vec",3]]],null,[[],[["error",3],["result",4]]],[[["str",15]],[["result",4],["address",3],["string",3]]],[[["modulename",3]],[["option",4],["ordering",4]]],[[["moduleident_",3]],[["option",4],["ordering",4]]],[[["moduleident",3]],[["option",4],["ordering",4]]],[[["field",3]],[["option",4],["ordering",4]]],[[["structname",3]],[["option",4],["ordering",4]]],[[["functionname",3]],[["option",4],["ordering",4]]],[[["constantname",3]],[["option",4],["ordering",4]]],[[["kind_",4]],[["option",4],["ordering",4]]],[[["var",3]],[["option",4],["ordering",4]]],[[["address",3]],[["option",4],["ordering",4]]],[[["str",15]],["str",15]],null,null,null,null,null,null,[[],["bool",15]],[[],["str",15]],[[],["str",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4],["address",3],["string",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[["loc",3]],[["type_",4],["spanned",3]]],null,null,[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["string",3]],null,null,[[],[["global",3],["vec",3],["u8",15]]],[[],[["global",3],["vec",3],["u8",15]]],[[],[["global",3],["vec",3],["u8",15]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[["global",3],["compiledunit",4],["vec",3]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["global",3],["vec",3],["vec",3]],[["vec",3],["result",4]]],[[["str",15],["global",3],["hashmap",3],["randomstate",3],["string",3],["vec",3],["vec",3]]],[[["str",15],["global",3],["hashmap",3],["randomstate",3],["string",3],["vec",3],["vec",3]]],[[["str",15],["global",3],["hashmap",3],["randomstate",3],["string",3],["vec",3],["vec",3]],[["global",3],["vec",3],["u8",15]]],[[["str",15],["global",3],["hashmap",3],["randomstate",3],["string",3],["vec",3],["vec",3]],[["global",3],["vec",3],["u8",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["global",3],["vec",3],["u8",15]]],null,[[],["accountaddress",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["typetag",4]],[[],["structtag",3]],[[],["resourcekey",3]],[[],["accesspath",3]],[[],["writeop",4]],[[],["writeset",3]],[[],["writesetmut",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typetag",4]],["ordering",4]],[[["structtag",3]],["ordering",4]],[[["resourcekey",3]],["ordering",4]],[[["accesspath",3]],["ordering",4]],[[["moduleid",3]],["accesspath",3]],[[],["writeset",3]],[[],["writesetmut",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["result",4],["typetag",4]]],[[],[["result",4],["structtag",3]]],[[],[["resourcekey",3],["result",4]]],[[],[["accesspath",3],["result",4]]],[[],[["result",4],["writeop",4]]],[[],[["result",4],["writeset",3]]],[[],[["result",4],["writesetmut",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["vec",3],["option",4],["u8",15],["moduleid",3],["global",3],["value",3],["u64",15],["type",4]],[["partialvmerror",3],["result",4]]],[[["vec",3],["option",4],["u8",15],["moduleid",3],["global",3],["value",3],["u64",15],["type",4]],[["partialvmerror",3],["result",4]]],[[["typetag",4]],["bool",15]],[[["structtag",3]],["bool",15]],[[["resourcekey",3]],["bool",15]],[[["accesspath",3]],["bool",15]],[[["writeop",4]],["bool",15]],[[["writeset",3]],["bool",15]],[[["writesetmut",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],null,[[["moduleid",3]],[["result",4],["bool",15],["vmerror",3]]],[[["moduleid",3]],[["result",4],["bool",15],["vmerror",3]]],[[["accesspath",3]],[["option",4],["vec",3]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[],[["result",4],["writeset",3],["error",3]]],[[]],[[]],[[]],[[]],[[["moduleid",3]],["accesspath",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["writesetmut",3]],[[["accesspath",3]],[["partialvmerror",3],["option",4],["result",4]]],[[["walletid",3]],[["u128",15],["option",4]]],[[["walletid",3]],[["u128",15],["option",4]]],[[["moduleid",3]],[["vmerror",3],["result",4],["option",4]]],[[["moduleid",3]],[["vmerror",3],["result",4],["option",4]]],[[["accountaddress",3],["structtag",3]],[["partialvmerror",3],["option",4],["result",4]]],[[["accountaddress",3],["structtag",3]],[["partialvmerror",3],["option",4],["result",4]]],[[]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["writesetmut",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[["moduleid",3]],[["vmerror",3],["result",4],["vec",3]]],[[["moduleid",3]],[["vmerror",3],["result",4],["vec",3]]],[[["type",4],["accountaddress",3]],[["globalvalue",3],["partialvmerror",3],["result",4]]],[[["type",4],["accountaddress",3]],[["globalvalue",3],["partialvmerror",3],["result",4]]],null,null,[[],["moduleid",3]],null,[[["typetag",4]],["bool",15]],[[["structtag",3]],["bool",15]],[[["resourcekey",3]],["bool",15]],[[["accesspath",3]],["bool",15]],[[["writeop",4]],["bool",15]],[[["writeset",3]],["bool",15]],[[["writesetmut",3]],["bool",15]],[[["accountaddress",3],["structtag",3]],["resourcekey",3]],[[["global",3],["accountaddress",3],["vec",3],["u8",15]],["accesspath",3]],[[["global",3],["vec",3]],["writesetmut",3]],[[["global",3],["loader",3],["nativebalance",8],["box",3]],["transactiondatacache",3]],[[],["scriptcache",3]],[[],["modulecache",3]],[[],["typecache",3]],[[],["remotestorage",3]],[[["typetag",4]],[["option",4],["ordering",4]]],[[["structtag",3]],[["option",4],["ordering",4]]],[[["resourcekey",3]],[["option",4],["ordering",4]]],[[["accesspath",3]],[["option",4],["ordering",4]]],null,[[["global",3],["u8",15],["moduleid",3],["vec",3]],[["result",4],["vmerror",3]]],[[["global",3],["u8",15],["moduleid",3],["vec",3]],[["result",4],["vmerror",3]]],[[]],null,[[["resourcekey",3]],["accesspath",3]],[[["structtag",3]],[["global",3],["vec",3],["u8",15]]],[[["balanceoperation",4],["walletid",3]]],[[["balanceoperation",4],["walletid",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["structtag",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["accountaddress",3]],null,[[["addressidentifierindex",3]],["accountaddress",3]],[[]],null,null,[[],["compiledscriptmut",3]],[[],["compiledmodulemut",3]],[[]],[[],["compiledmodule",3]],[[],["compiledmodule",3]],[[],["compiledscript",3]],[[],["compiledmodulemut",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["modulehandleindex",3]],[[],["structhandleindex",3]],[[],["functionhandleindex",3]],[[],["fieldhandleindex",3]],[[],["structdefinstantiationindex",3]],[[],["functioninstantiationindex",3]],[[],["fieldinstantiationindex",3]],[[],["identifierindex",3]],[[],["addressidentifierindex",3]],[[],["constantpoolindex",3]],[[],["signatureindex",3]],[[],["structdefinitionindex",3]],[[],["functiondefinitionindex",3]],[[],["modulehandle",3]],[[],["structhandle",3]],[[],["functionhandle",3]],[[],["fieldhandle",3]],[[],["structfieldinformation",4]],[[],["structdefinstantiation",3]],[[],["functioninstantiation",3]],[[],["fieldinstantiation",3]],[[],["structdefinition",3]],[[],["fielddefinition",3]],[[],["functiondefinition",3]],[[],["typesignature",3]],[[],["functionsignature",3]],[[],["signature",3]],[[],["kind",4]],[[],["signaturetoken",4]],[[],["constant",3]],[[],["codeunit",3]],[[],["bytecode",4]],[[],["compiledscript",3]],[[],["compiledscriptmut",3]],[[],["compiledmodule",3]],[[],["compiledmodulemut",3]],[[],["tabletype",4]],[[],["serializedtype",4]],[[],["serializednominalresourceflag",4]],[[],["serializedkind",4]],[[],["serializednativestructflag",4]],[[],["opcodes",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["modulehandleindex",3]],["ordering",4]],[[["structhandleindex",3]],["ordering",4]],[[["functionhandleindex",3]],["ordering",4]],[[["fieldhandleindex",3]],["ordering",4]],[[["structdefinstantiationindex",3]],["ordering",4]],[[["functioninstantiationindex",3]],["ordering",4]],[[["fieldinstantiationindex",3]],["ordering",4]],[[["identifierindex",3]],["ordering",4]],[[["addressidentifierindex",3]],["ordering",4]],[[["constantpoolindex",3]],["ordering",4]],[[["signatureindex",3]],["ordering",4]],[[["structdefinitionindex",3]],["ordering",4]],[[["functiondefinitionindex",3]],["ordering",4]],[[["modulehandle",3]],["ordering",4]],[[["structhandle",3]],["ordering",4]],[[["kind",4]],["ordering",4]],[[["signaturetoken",4]],["ordering",4]],null,null,null,[[["constantpoolindex",3]],["constant",3]],[[]],null,null,null,[[["structhandleindex",3]]],[[],[["result",4],["partialvmerror",3],["u16",15]]],null,[[],["modulehandleindex",3]],[[],["structhandleindex",3]],[[],["functionhandleindex",3]],[[],["fieldhandleindex",3]],[[],["structdefinstantiationindex",3]],[[],["functioninstantiationindex",3]],[[],["fieldinstantiationindex",3]],[[],["identifierindex",3]],[[],["addressidentifierindex",3]],[[],["constantpoolindex",3]],[[],["signatureindex",3]],[[],["structdefinitionindex",3]],[[],["functiondefinitionindex",3]],[[],["functiondefinition",3]],[[],["signature",3]],[[],["codeunit",3]],[[],["compiledscriptmut",3]],[[],["compiledmodulemut",3]],[[],["binarydata",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["partialvmerror",3],["compiledscript",3],["result",4]]],[[],[["result",4],["partialvmerror",3],["compiledmodule",3]]],[[],[["option",4],["movevalue",4]]],[[],[["partialvmerror",3],["compiledmodulemut",3],["result",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["bytecode",4],["global",3],["vec",3]],["compiledmodule",3]],[[],["compiledmodulemut",3]],[[],["compiledscriptmut",3]],[[["modulehandleindex",3]],["bool",15]],[[["structhandleindex",3]],["bool",15]],[[["functionhandleindex",3]],["bool",15]],[[["fieldhandleindex",3]],["bool",15]],[[["structdefinstantiationindex",3]],["bool",15]],[[["functioninstantiationindex",3]],["bool",15]],[[["fieldinstantiationindex",3]],["bool",15]],[[["identifierindex",3]],["bool",15]],[[["addressidentifierindex",3]],["bool",15]],[[["constantpoolindex",3]],["bool",15]],[[["signatureindex",3]],["bool",15]],[[["structdefinitionindex",3]],["bool",15]],[[["functiondefinitionindex",3]],["bool",15]],[[["modulehandle",3]],["bool",15]],[[["structhandle",3]],["bool",15]],[[["functionhandle",3]],["bool",15]],[[["fieldhandle",3]],["bool",15]],[[["structfieldinformation",4]],["bool",15]],[[["structdefinstantiation",3]],["bool",15]],[[["functioninstantiation",3]],["bool",15]],[[["fieldinstantiation",3]],["bool",15]],[[["structdefinition",3]],["bool",15]],[[["fielddefinition",3]],["bool",15]],[[["functiondefinition",3]],["bool",15]],[[["typesignature",3]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["kind",4]],["bool",15]],[[["signaturetoken",4]],["bool",15]],[[["constant",3]],["bool",15]],[[["codeunit",3]],["bool",15]],[[["bytecode",4]],["bool",15]],[[["compiledscript",3]],["bool",15]],[[["compiledscriptmut",3]],["bool",15]],[[["compiledmodule",3]],["bool",15]],[[["compiledmodulemut",3]],["bool",15]],[[["tabletype",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["result",4],["error",3]]],null,[[["fieldhandleindex",3]],["fieldhandle",3]],[[]],null,null,[[["fieldinstantiationindex",3]],["fieldinstantiation",3]],[[]],null,[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[],[["partialvmerror",3],["compiledscript",3],["result",4]]],[[],[["result",4],["partialvmerror",3],["compiledmodule",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["vec",3],["u8",15]],["binarydata",3]],[[]],null,[[["functiondefinitionindex",3]],["functiondefinition",3]],[[]],null,[[["functionhandleindex",3]],["functionhandle",3]],[[]],null,null,[[["functioninstantiationindex",3]],["functioninstantiation",3]],[[]],null,null,[[["u16",15]],[["global",3],["vec",3],["u16",15]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["identifierindex",3]],["identstr",3]],[[]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["bytecode",4]],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["compiledscriptmut",3]],[[],["compiledmodulemut",3]],[[],[["global",3],["vec",3],["u8",15]]],[[]],[[]],[[]],[[]],[[["scriptconversioninfo",3]],["compiledscript",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],[[["kind",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["kind",4]],["kind",4]],[[["indexkind",4]],["usize",15]],[[["indexkind",4]],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,null,null,[[["modulehandleindex",3]],["modulehandle",3]],[[]],null,null,[[["modulehandle",3]],["moduleid",3]],[[["modulehandle",3]],["moduleid",3]],[[],["identstr",3]],null,null,null,null,[[["modulehandleindex",3]],["bool",15]],[[["structhandleindex",3]],["bool",15]],[[["functionhandleindex",3]],["bool",15]],[[["fieldhandleindex",3]],["bool",15]],[[["structdefinstantiationindex",3]],["bool",15]],[[["functioninstantiationindex",3]],["bool",15]],[[["fieldinstantiationindex",3]],["bool",15]],[[["identifierindex",3]],["bool",15]],[[["addressidentifierindex",3]],["bool",15]],[[["constantpoolindex",3]],["bool",15]],[[["signatureindex",3]],["bool",15]],[[["structdefinitionindex",3]],["bool",15]],[[["functiondefinitionindex",3]],["bool",15]],[[["modulehandle",3]],["bool",15]],[[["structhandle",3]],["bool",15]],[[["functionhandle",3]],["bool",15]],[[["fieldhandle",3]],["bool",15]],[[["structfieldinformation",4]],["bool",15]],[[["structdefinstantiation",3]],["bool",15]],[[["functioninstantiation",3]],["bool",15]],[[["fieldinstantiation",3]],["bool",15]],[[["structdefinition",3]],["bool",15]],[[["fielddefinition",3]],["bool",15]],[[["functiondefinition",3]],["bool",15]],[[["typesignature",3]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["signaturetoken",4]],["bool",15]],[[["constant",3]],["bool",15]],[[["codeunit",3]],["bool",15]],[[["bytecode",4]],["bool",15]],[[["compiledscript",3]],["bool",15]],[[["compiledscriptmut",3]],["bool",15]],[[["compiledmodule",3]],["bool",15]],[[["compiledmodulemut",3]],["bool",15]],[[["u16",15]],["modulehandleindex",3]],[[["u16",15]],["structhandleindex",3]],[[["u16",15]],["functionhandleindex",3]],[[["u16",15]],["fieldhandleindex",3]],[[["u16",15]],["structdefinstantiationindex",3]],[[["u16",15]],["functioninstantiationindex",3]],[[["u16",15]],["fieldinstantiationindex",3]],[[["u16",15]],["identifierindex",3]],[[["u16",15]],["addressidentifierindex",3]],[[["u16",15]],["constantpoolindex",3]],[[["u16",15]],["signatureindex",3]],[[["u16",15]],["structdefinitionindex",3]],[[["u16",15]],["functiondefinitionindex",3]],[[],["binarydata",3]],[[],["option",4]],[[],["option",4]],[[],[["option",4],["u16",15]]],null,null,null,null,[[["modulehandleindex",3]],[["option",4],["ordering",4]]],[[["structhandleindex",3]],[["option",4],["ordering",4]]],[[["functionhandleindex",3]],[["option",4],["ordering",4]]],[[["fieldhandleindex",3]],[["option",4],["ordering",4]]],[[["structdefinstantiationindex",3]],[["option",4],["ordering",4]]],[[["functioninstantiationindex",3]],[["option",4],["ordering",4]]],[[["fieldinstantiationindex",3]],[["option",4],["ordering",4]]],[[["identifierindex",3]],[["option",4],["ordering",4]]],[[["addressidentifierindex",3]],[["option",4],["ordering",4]]],[[["constantpoolindex",3]],[["option",4],["ordering",4]]],[[["signatureindex",3]],[["option",4],["ordering",4]]],[[["structdefinitionindex",3]],[["option",4],["ordering",4]]],[[["functiondefinitionindex",3]],[["option",4],["ordering",4]]],[[["modulehandle",3]],[["option",4],["ordering",4]]],[[["structhandle",3]],[["option",4],["ordering",4]]],[[["kind",4]],[["option",4],["ordering",4]]],[[["signaturetoken",4]],[["option",4],["ordering",4]]],[[],["signaturetokenpreordertraversaliter",3]],[[],["signaturetokenpreordertraversaliterwithdepth",3]],[[["u8",15]],[["result",4],["error",3]]],[[["cursor",3]],[["u32",15],["result",4],["error",3]]],[[["cursor",3]],[["error",3],["result",4],["u8",15]]],[[["cursor",3]],[["error",3],["u64",15],["result",4]]],null,null,[[],["modulehandle",3]],[[],["modulehandleindex",3]],[[],["moduleid",3]],[[],["moduleid",3]],null,[[],["identstr",3]],[[["vec",3]],[["result",4],["error",3]]],[[["vec",3]],[["result",4],["error",3]]],[[["vec",3]],[["result",4],["error",3]]],[[["vec",3]],[["result",4],["error",3]]],[[["movetypelayout",4],["movevalue",4]],[["option",4],["constant",3]]],null,[[["signatureindex",3]],["signature",3]],[[],["signaturetokenkind",4]],[[]],null,null,[[["structdefinitionindex",3]],["structdefinition",3]],null,[[]],null,null,[[["structhandleindex",3]],["structhandle",3]],[[]],null,null,[[["structdefinstantiationindex",3]],["structdefinstantiation",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["binarydata",3],["u64",15]],[["result",4],["error",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["gasconstants",3],["abstractmemorysize",3],["u64",15]],[["gasunits",3],["u64",15]]],[[["opcodes",4]],[["partialvmerror",3],["result",4]]],[[["u64",15],["opcodes",4],["abstractmemorysize",3]],[["partialvmerror",3],["result",4]]],[[["abstractmemorysize",3],["u64",15]],[["result",4],["vmerror",3]]],[[],["abstractmemorysize",3]],[[],["gasunits",3]],[[],["gasprice",3]],[[],["gasconstants",3]],[[],["costtable",3]],[[],["gascost",3]],[[],["nativecostindex",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["nativecostindex",4]],["ordering",4]],[[],["costtable",3]],[[["gasunits",3],["u64",15]],[["partialvmerror",3],["result",4]]],[[],["gasconstants",3]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["result",4],["abstractmemorysize",3]]],[[],[["gasunits",3],["result",4]]],[[],[["result",4],["gasprice",3]]],[[],[["result",4],["gasconstants",3]]],[[],[["result",4],["costtable",3]]],[[],[["gascost",3],["result",4]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["abstractmemorysize",3]],["bool",15]],[[["gasunits",3]],["bool",15]],[[["gasprice",3]],["bool",15]],[[["gasconstants",3]],["bool",15]],[[["costtable",3]],["bool",15]],[[["gascost",3]],["bool",15]],[[["nativecostindex",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],null,null,[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["u8",15]],["gascost",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],null,null,null,null,null,null,[[]],[[["u8",15]],["gascost",3]],null,[[["abstractmemorysize",3]],["bool",15]],[[["gasunits",3]],["bool",15]],[[["gasprice",3]],["bool",15]],[[["gasconstants",3]],["bool",15]],[[["costtable",3]],["bool",15]],[[["gascost",3]],["bool",15]],[[]],[[["u64",15]],[["abstractmemorysize",3],["u64",15]]],[[["u64",15]],[["gasunits",3],["u64",15]]],[[["u64",15]],[["gasprice",3],["u64",15]]],[[["u64",15]],["gascost",3]],[[["global",3],["vec",3],["vec",3],["gascost",3]],["costtable",3]],[[["nativecostindex",4]],[["option",4],["ordering",4]]],[[],[["gasunits",3],["u64",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[["u64",15],["gasunits",3],["costtable",3]],["coststrategy",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["gasunits",3],["u64",15]]],[[["u64",15],["gasunits",3],["costtable",3]],["coststrategy",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["costtable",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["error",4]],[[]],[[],["error",4]],[[],["error",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["error",4]],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["error",3]],["error",4]],[[]],[[],[["result",4],["error",4]]],[[],[["result",4],["error",4]]],[[],["usize",15]],[[]],[[],["bool",15]],[[["error",4]],["bool",15]],[[],[["error",4],["result",4]]],[[],[["result",4],["usize",15],["error",4]]],null,[[],[["error",4],["vec",3],["result",4]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["string",3]],["libraloggerbuilder",3]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["libralogger",3],["arc",3]]],[[],["libraloggerbuilder",3]],[[],["builder",3]],[[["usize",15]],["libraloggerbuilder",3]],[[],["levelfilter",4]],[[],["key",3]],[[],["value",4]],[[],["keyvalue",3]],[[],["metadata",3]],[[],["level",4]],[[],["securityevent",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["levelfilter",4]],["ordering",4]],[[["key",3]],["ordering",4]],[[["level",4]],["ordering",4]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["metadata",3],["result",4]]],[[],[["level",4],["result",4]]],[[],[["securityevent",4],["result",4]]],[[["metadata",3],["arguments",3],["option",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["metadata",3]],["bool",15]],[[],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["key",3]],["bool",15]],[[["level",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],null,null,[[],["str",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[["level",4]],["levelfilter",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["value",4]],[[],["value",4]],[[],["value",4]],[[["str",15]],[["result",4],["levelfilter",4]]],[[["str",15]],[["level",4],["result",4]]],[[]],[[]],null,[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]],["libraloggerbuilder",3]],null,[[]],[[["level",4]],["libraloggerbuilder",3]],[[],["level",4]],[[],["u32",15]],[[],["str",15]],null,[[],["levelfilter",4]],[[],[["arguments",3],["option",4]]],[[],["metadata",3]],[[],["str",15]],[[["key",3]],["bool",15]],[[],["libraloggerbuilder",3]],[[],["libraloggerbuilder",3]],[[["str",15]],["key",3]],[[["str",15],["value",4]],["keyvalue",3]],[[["str",15],["level",4],["u32",15]],["metadata",3]],[[["levelfilter",4]],[["option",4],["ordering",4]]],[[["key",3]],[["option",4],["ordering",4]]],[[["level",4]],[["option",4],["ordering",4]]],null,[[["box",3],["writer",8],["global",3]],["libraloggerbuilder",3]],[[],["libraloggerbuilder",3]],[[["level",4]],["libraloggerbuilder",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["filter",3]]],[[["filter",3]]],[[],["str",15]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["visitor",8]]],[[["visitor",8]]],[[["visitor",8]]],[[["value",4],["key",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["string",3]]],null,[[]],[[]],[[],["jsonlogentry",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[],[["jsonlogentry",3],["result",4]]],[[["usize",15]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[],["usize",15]],[[]],null,null,[[["str",15],["value",4]],["jsonlogentry",3]],[[],[["vec",3],["jsonlogentry",3],["global",3]]],[[["jsonlogentry",3]]],[[],["result",4]],[[],["hashvalue",3]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,null,[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["pathbuf",3]],["filewriter",3]],[[["samplerate",4]],["sampling",3]],null,[[],["bool",15]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,[[["string",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["global",3],["vec",3],["u8",15]]],[[],["accountaddress",3]],[[],["accountaddress",3]],null,[[["addressidentifierindex",3]],["accountaddress",3]],[[["addressidentifierindex",3]],["accountaddress",3]],[[]],[[]],[[],["compiledmodule",3]],[[],["compiledscript",3]],[[["astwriter",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["moduleid",3]],[[],["movevalue",4]],[[],["module",3]],[[]],[[]],[[]],[[["moduleid",3]],["ordering",4]],[[],["codeunit",3]],[[]],null,[[["constantpoolindex",3]],["constant",3]],[[["constantpoolindex",3]],["constant",3]],[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["result",4],["moduleid",3]]],[[],[["result",4],["module",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["moduleid",3]],["bool",15]],[[["movevalue",4]],["bool",15]],[[["module",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["fieldhandleindex",3]],["fieldhandle",3]],[[]],[[["fieldinstantiationindex",3]],["fieldinstantiation",3]],[[]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],null,[[["functiondefinitionindex",3]],["functiondefinition",3]],[[]],[[["functionhandleindex",3]],["functionhandle",3]],[[["functionhandleindex",3]],["functionhandle",3]],[[]],[[]],[[["functioninstantiationindex",3]],["functioninstantiation",3]],[[["functioninstantiationindex",3]],["functioninstantiation",3]],[[]],[[]],[[]],[[],["hashvalue",3]],[[]],[[["identifierindex",3]],["identstr",3]],[[["identifierindex",3]],["identstr",3]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],null,null,null,[[["modulehandleindex",3]],["modulehandle",3]],[[["modulehandleindex",3]],["modulehandle",3]],[[]],[[]],[[["modulehandle",3]],["moduleid",3]],[[],["identstr",3]],[[],["identstr",3]],null,null,[[["moduleid",3]],["bool",15]],[[["movevalue",4]],["bool",15]],[[["module",3]],["bool",15]],[[["identifier",3],["accountaddress",3]],["moduleid",3]],[[["global",3],["vec",3],["u8",15]],["module",3]],[[["moduleid",3]],[["option",4],["ordering",4]]],[[],["modulehandle",3]],[[],["modulehandleindex",3]],[[],["moduleid",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["signatureindex",3]],["signature",3]],[[["signatureindex",3]],["signature",3]],[[]],[[]],[[["movetypelayout",4]],[["movevalue",4],["result",4],["error",3]]],[[],[["option",4],["vec",3]]],null,[[["structdefinitionindex",3]],["structdefinition",3]],[[]],[[["structhandleindex",3]],["structhandle",3]],[[["structhandleindex",3]],["structhandle",3]],[[]],[[]],[[["structdefinstantiationindex",3]],["structdefinstantiation",3]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["global",3],["vec",3],["u8",15]],["movevalue",4]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["string",3],["char",15]],["partialvmerror",3]],[[["u16",15],["functiondefinitionindex",3]],["partialvmerror",3]],[[["vec",3],["global",3]],["partialvmerror",3]],[[["indexkind",4],["u16",15]],["partialvmerror",3]],[[["global",3],["vec",3]],["partialvmerror",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["location",4]],[[],["vmerror",3]],[[],["partialvmerror",3]],[[],["vmstatus",4]],[[],["keptvmstatus",4]],[[],["abortlocation",4]],[[],["statuscode",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["location",4]],["ordering",4]],[[["vmerror",3]],["ordering",4]],[[["vmstatus",4]],["ordering",4]],[[["keptvmstatus",4]],["ordering",4]],[[["abortlocation",4]],["ordering",4]],[[["statuscode",4]],["ordering",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["vmstatus",4],["result",4]]],[[],[["result",4],["keptvmstatus",4]]],[[],[["result",4],["abortlocation",4]]],[[],[["statuscode",4],["result",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["location",4]],["bool",15]],[[["vmerror",3]],["bool",15]],[[["vmstatus",4]],["bool",15]],[[["keptvmstatus",4]],["bool",15]],[[["abortlocation",4]],["bool",15]],[[["statuscode",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["location",4]],["vmerror",3]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vec",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["vmstatus",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vmstatus",4]],[[],[["keptvmstatus",4],["statuscode",4],["result",4]]],[[],["location",4]],[[],["statuscode",4]],[[],["statuscode",4]],[[],[["string",3],["option",4]]],[[],[["option",4],["u64",15]]],[[["location",4]],["bool",15]],[[["vmerror",3]],["bool",15]],[[["vmstatus",4]],["bool",15]],[[["keptvmstatus",4]],["bool",15]],[[["abortlocation",4]],["bool",15]],[[["statuscode",4]],["partialvmerror",3]],[[],["vec",3]],[[["location",4]],[["option",4],["ordering",4]]],[[["vmerror",3]],[["option",4],["ordering",4]]],[[["vmstatus",4]],[["option",4],["ordering",4]]],[[["keptvmstatus",4]],[["option",4],["ordering",4]]],[[["abortlocation",4]],[["option",4],["ordering",4]]],[[["statuscode",4]],[["option",4],["ordering",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["statuscode",4]],[[],["statustype",4]],[[],["statustype",4]],[[],["statustype",4]],[[],[["option",4],["u64",15]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]],[["statuscode",4],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["string",3]],["partialvmerror",3]],[[["u64",15]],["partialvmerror",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["accountaddress",3]],["value",3]],null,[[]],[[]],[[["bool",15]],["value",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["partialvmerror",3],["struct",3],["result",4]]],[[],[["partialvmerror",3],["result",4],["signerref",3]]],[[],[["result",4],["bool",15],["partialvmerror",3]]],[[],[["partialvmerror",3],["result",4],["integervalue",4]]],[[],[["result",4],["partialvmerror",3],["accountaddress",3]]],[[],[["partialvmerror",3],["structref",3],["result",4]]],[[],[["reference",3],["partialvmerror",3],["result",4]]],[[],[["partialvmerror",3],["result",4],["containerref",4]]],[[],[["partialvmerror",3],["result",4],["vec",3]]],[[],[["result",4],["indexedref",3],["partialvmerror",3]]],[[],[["u128",15],["result",4],["partialvmerror",3]]],[[],[["result",4],["partialvmerror",3],["container",4]]],[[],[["partialvmerror",3],["u64",15],["result",4]]],[[],[["partialvmerror",3],["result",4],["u8",15]]],[[],[["partialvmerror",3],["vector",3],["result",4]]],[[],[["partialvmerror",3],["result",4],["vectorref",3]]],[[],["contractevent",4]],[[],["transactionstatus",4]],[[],["nocontextlog",3]],[[],["walletid",3]],[[],["balanceoperation",4]],[[]],[[]],[[]],[[]],[[]],[[["walletid",3]],["ordering",4]],[[["signaturetoken",4]],[["result",4],["value",3],["partialvmerror",3]]],[[],[["result",4],["value",3],["partialvmerror",3]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["contractevent",4],["result",4]]],[[],[["result",4],["transactionstatus",4]]],[[["constant",3]],[["value",3],["option",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["balanceoperation",4]],[[["contractevent",4]],["bool",15]],[[["transactionstatus",4]],["bool",15]],[[["walletid",3]],["bool",15]],[[["balanceoperation",4]],["bool",15]],[[["value",3]],[["result",4],["bool",15],["partialvmerror",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],null,[[["identstr",3],["vec",3],["moduleid",3],["global",3],["coststrategy",3],["accountaddress",3],["vec",3],["value",3],["typetag",4]],[["result",4],["vmerror",3]]],[[["u8",15],["vec",3],["global",3],["coststrategy",3],["accountaddress",3],["vec",3],["vec",3],["value",3],["vec",3],["typetag",4]],[["result",4],["vmerror",3]]],[[],[["result",4],["vmerror",3],["transactioneffects",3]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[["vmstatus",4]],["transactionstatus",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["walletid",3]],[["u128",15],["option",4]]],[[],["hashvalue",3]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["signaturetoken",4]],["bool",15]],[[["balanceoperation",4]]],null,null,[[["string",3]],["nocontextlog",3]],[[["contractevent",4]],["bool",15]],[[["transactionstatus",4]],["bool",15]],[[["walletid",3]],["bool",15]],[[["balanceoperation",4]],["bool",15]],[[["global",3],["eventkey",3],["vec",3],["u8",15],["u64",15],["typetag",4]],["contractevent",4]],[[],["loader",3]],[[],["movevm",3]],[[],["nocontextlog",3]],[[["accountaddress",3],["structtag",3]],["walletid",3]],[[["global",3],["box",3],["nativebalance",8]],["session",3]],[[],["u64",15]],[[["walletid",3]],[["option",4],["ordering",4]]],[[["global",3],["coststrategy",3],["accountaddress",3],["vec",3],["u8",15]],[["result",4],["vmerror",3]]],null,null,null,[[],["result",4]],[[],["result",4]],[[["accountaddress",3]],["value",3]],[[["movetypelayout",4],["movekindinfo",4]],[["value",3],["option",4]]],[[["movetypelayout",4]],[["option",4],["vec",3]]],[[],[["abstractmemorysize",3],["u64",15]]],[[],[["keptvmstatus",4],["statuscode",4],["result",4]]],[[["struct",3]],["value",3]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["accountaddress",3]],["value",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["transactioneffects",3]],[["result",4],["vmstatus",4]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u128",15]],["value",3]],[[["u64",15]],["value",3]],[[["u8",15]],["value",3]],[[],[["partialvmerror",3],["result",4]]],[[],["value",3]],[[],["value",3]],[[],["value",3]],[[],["value",3]],[[],["value",3]],[[],["value",3]],[[["visitor",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["u64",15],["eventkey",3],["option",4],["typetag",4],["moduleid",3],["global",3],["vec",3],["u8",15]],["contractevent",4]]],"p":[[3,"AccountAddress"],[3,"Identifier"],[8,"ControlFlowGraph"],[3,"VMControlFlowGraph"],[3,"ModuleName"],[3,"ModuleIdent"],[3,"Field"],[3,"StructName"],[3,"FunctionName"],[3,"ConstantName"],[3,"Var"],[4,"BinOp_"],[4,"Exp_"],[4,"SpecConditionKind"],[4,"Definition"],[4,"Value_"],[4,"Kind_"],[4,"SpecBlockMember_"],[4,"Type_"],[4,"SequenceItem_"],[4,"SpecBlockTarget_"],[4,"ModuleMember"],[4,"InvariantKind"],[4,"StructFields"],[4,"FunctionBody_"],[4,"FunctionVisibility"],[3,"Address"],[4,"Use"],[4,"ModuleAccess_"],[4,"UnaryOp_"],[4,"SpecApplyFragment_"],[4,"Bind_"],[3,"Function"],[3,"ModuleIdent_"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"StructDefinition"],[3,"FunctionSignature"],[3,"Constant"],[3,"SpecBlock_"],[3,"PragmaProperty_"],[3,"SpecApplyPattern_"],[3,"ConstPool"],[13,"Condition"],[13,"Function"],[13,"Let"],[13,"Apply"],[13,"Include"],[13,"Variable"],[13,"Pragma"],[4,"CompiledUnit"],[3,"VarInfo"],[3,"SpecInfo"],[3,"FunctionInfo"],[13,"Script"],[13,"Module"],[4,"TypeTag"],[3,"AccessPath"],[4,"WriteOp"],[3,"StructTag"],[3,"TransactionDataCache"],[3,"ResourceKey"],[3,"WriteSet"],[3,"WriteSetMut"],[3,"ScriptCache"],[3,"ModuleCache"],[3,"TypeCache"],[3,"RemoteStorage"],[8,"DataStore"],[8,"RemoteCache"],[3,"ModuleHandleIndex"],[3,"StructHandleIndex"],[3,"FunctionHandleIndex"],[3,"FieldHandleIndex"],[3,"StructDefInstantiationIndex"],[3,"FunctionInstantiationIndex"],[3,"FieldInstantiationIndex"],[3,"IdentifierIndex"],[3,"AddressIdentifierIndex"],[3,"ConstantPoolIndex"],[3,"SignatureIndex"],[3,"StructDefinitionIndex"],[3,"FunctionDefinitionIndex"],[3,"TypeSignature"],[3,"Signature"],[4,"Opcodes"],[4,"SerializedType"],[4,"TableType"],[4,"SerializedKind"],[4,"Bytecode"],[4,"SignatureToken"],[4,"Kind"],[4,"SerializedNativeStructFlag"],[4,"StructFieldInformation"],[4,"BinaryConstants"],[3,"CompiledScript"],[3,"FunctionDefinition"],[4,"SerializedNominalResourceFlag"],[8,"ModuleAccess"],[3,"ModuleHandle"],[3,"CompiledScriptMut"],[3,"CompiledModuleMut"],[3,"CompiledModule"],[3,"BinaryData"],[3,"SignatureTokenPreorderTraversalIter"],[3,"SignatureTokenPreorderTraversalIterWithDepth"],[3,"ScriptConversionInfo"],[3,"StructHandle"],[3,"FunctionHandle"],[3,"FieldHandle"],[3,"StructDefInstantiation"],[3,"FunctionInstantiation"],[3,"FieldInstantiation"],[3,"StructDefinition"],[3,"FieldDefinition"],[3,"FunctionSignature"],[3,"Constant"],[3,"CodeUnit"],[4,"N"],[8,"GasAlgebra"],[3,"AbstractMemorySize"],[3,"GasUnits"],[3,"GasPrice"],[3,"GasConstants"],[3,"CostTable"],[3,"GasCost"],[3,"CostStrategy"],[4,"Error"],[4,"SecurityEvent"],[4,"LevelFilter"],[4,"Value"],[4,"Level"],[3,"LibraLoggerBuilder"],[3,"Key"],[3,"Logger"],[3,"Event"],[3,"Filter"],[3,"KeyValue"],[3,"Metadata"],[8,"Schema"],[8,"Visitor"],[8,"Writer"],[3,"JsonLogEntry"],[4,"SampleRate"],[3,"FileWriter"],[3,"Sampling"],[4,"MoveValue"],[3,"ModuleId"],[8,"ScriptAccess"],[3,"Module"],[4,"StatusCode"],[4,"VMStatus"],[4,"KeptVMStatus"],[4,"Location"],[4,"AbortLoc"],[3,"VMError"],[3,"PartialVMError"],[13,"ExecutionFailure"],[13,"ExecutionFailure"],[3,"Value"],[4,"BalanceOperation"],[4,"TransactionStatus"],[4,"ContractEvent"],[3,"WalletId"],[8,"LogContext"],[3,"NoContextLog"],[3,"TransactionEffects"],[3,"Loader"],[3,"MoveVM"],[3,"Session"],[8,"NativeBalance"]]},\
"dvm_net":{"doc":"","t":[6,0,0,0,0,4,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,8,8,10,10,8,10,10,5,5,3,6,3,3,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11],"n":["StdError","endpoint","prelude","serve","transport","Endpoint","Http","Http","Ipc","Ipc","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","connect","connect","connect","fmt","fmt","fmt","fmt","from","from","from","from_str","from_uri","into","into","into","into_request","into_request","into_request","is_http","is_ipc","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Error","Error","TryFrom","TryInto","try_from","try_into","ServeWith","serve_ext","serve_ext_with_shutdown","serve_with_drop","serve_with_shutdown","FdGuard","Guard","Listener","Stream","bind","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","close_uds","connect","disable","drop","fmt","fmt","fmt","from","from","from","guard","guarded","incoming","into","into","into","into_incoming","into_request","into_request","into_request","new","poll_flush","poll_read","poll_shutdown","poll_write","set_guard","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unlink_uds","vzip","vzip","vzip"],"q":["dvm_net","","","","","dvm_net::endpoint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_net::prelude","","","","","","dvm_net::serve","","","","","dvm_net::transport","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","The DVM-NET Prelude","","","","Create Endpoint with inner URI. Supports http and https. …","","","","","","","","","","","","","","","","","","Connect using default transport (http2).","Connect using UDS transport.","","","","","","","","Create Endpoint from URI. Supports http and ipc schemes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type returned in the event of a conversion error.","The type returned in the event of a conversion error.","Simple and safe type conversions that may fail in a …","An attempted conversion that consumes <code>self</code>, which may or …","Performs the conversion.","Performs the conversion.","","","","","","","","","","","","","","","","","","","","","","","","","","","Take and return the guard. Return <code>None</code> if already taken.","Builder-pattern-like enable or disable inner fd-guard. If …","","","","","","","","","","","","","","Enable or disable inner fd-guard. If disable prevent …","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,0,1,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,1,3,2,1,3,2,1,0,1,3,2,1,3,2,1,1,1,3,2,1,3,1,1,3,2,1,1,1,3,3,2,1,3,2,1,3,2,4,5,0,0,5,4,0,6,6,0,0,0,0,0,0,7,8,7,9,8,7,9,0,8,9,9,8,7,9,8,7,9,7,7,7,8,7,9,8,8,7,9,8,8,8,8,8,7,8,7,9,8,7,9,8,7,9,0,8,7,9],"f":[null,null,null,null,null,null,null,null,null,null,[[],[["option",4],["str",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["endpoint",4]],[[],["http",3]],[[],["ipc",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["uri",3]],[["endpoint",4],["result",4],["stderror",6]]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[["uri",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["socketaddr",4],["result",4]]],[[],["result",4]],[[],[["result",4],["uri",3]]],[[],[["socketaddr",4],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,[[],["result",4]],[[],["result",4]],null,[[["endpoint",4]],[["pin",3],["box",3]]],[[["endpoint",4],["future",8],["send",8]],[["pin",3],["box",3]]],[[["router",3],["endpoint",4],["bool",15]]],[[["router",3],["endpoint",4]]],null,null,null,null,[[["asref",8],["path",3]],[["result",4],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["asref",8],["path",3]],[["error",3],["result",4]]],[[["asref",8],["path",3]]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["fdguard",3],["option",4]]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["unixstream",3]]],[[["pin",3],["context",3]],[["result",6],["poll",4]]],[[["pin",3],["context",3]],[["poll",4],["result",6]]],[[["pin",3],["context",3]],[["result",6],["poll",4]]],[[["pin",3],["context",3]],[["poll",4],["result",6]]],[[["bool",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["asref",8],["path",3]],[["error",3],["result",4]]],[[]],[[]],[[]]],"p":[[4,"Endpoint"],[3,"Ipc"],[3,"Http"],[8,"TryInto"],[8,"TryFrom"],[8,"ServeWith"],[3,"Listener"],[3,"Stream"],[3,"FdGuard"]]},\
"dvm_runtime":{"doc":"Integration with MoveVM.","t":[0,0,0,5,3,3,3,3,3,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,3,3,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["gas_schedule","resources","vm","cost_table","AddressStore","BlockMetadata","CurrentTimestamp","Price","U64Store","VectorU8Store","block_metadata","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","height","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","ne","ne","ne","ne","ne","ne","oracle_metadata","price","seconds","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","time_metadata","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","val","val","val","vzip","vzip","vzip","vzip","vzip","vzip","dvm","session","types","Dvm","borrow","borrow_mut","deref","deref_mut","drop","execute_script","fmt","from","init","into","into_request","new","publish_module","try_from","try_into","type_id","vzip","StateViewSession","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","get_module","get_resource","init","into","into_request","session","ticker","to_owned","try_from","try_into","type_id","vzip","ExecutionResult","Gas","ModuleTx","ScriptTx","VmResult","args","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code","code","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","equivalent","events","fmt","fmt","fmt","fmt","from","from","from","from","gas_unit_price","gas_used","init","init","init","init","into","into","into","into","into_inner","into_inner","into_request","into_request","into_request","into_request","max_gas_amount","ne","new","new","new","new","status","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wallet_ops","write_set"],"q":["dvm_runtime","","","dvm_runtime::gas_schedule","dvm_runtime::resources","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_runtime::vm","","","dvm_runtime::vm::dvm","","","","","","","","","","","","","","","","","","dvm_runtime::vm::session","","","","","","","","","","","","","","","","","","","","","dvm_runtime::vm::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Defines dvm <code>CostTable</code>.","Chain resources.","Defines structures for script execution inside VM.","Specific gas per instruction configuration for dvm. …","Deserializable <code>AccountAddress</code> for lcs.","Height of the current block.","A singleton resource holding the current Unix time in …","Currency price.","Deserializable <code>u64</code> for lcs.","Deserializable <code>Vec<u8></code> for lcs.","Returns block metadata struct tag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block height.","","","","","","","","","","","","","","","","","","","","","","","","","Returns oracle metadata struct tag.","Currency price.","Unix time stamp in seconds","","","","","","","Returns time metadata struct tag.","","","","","","","","","","","","","","","","","","","Internal value.","Internal value.","Internal value.","","","","","","","Dfinance virtual machine.","State view session.","Vm types.","Dfinance virtual machine.","","","","","","Executes passed script on the chain.","","","","","","Create a new virtual machine with the given data source.","Publishes module to the chain.","","","","","Execution session.","","","","","","","","","","","","","","Create new execution session.","Returns balance ticker.","","","","","","Result of transaction execution.","Stores gas metadata for vm execution.","Module transaction.","Script bytecode + passed arguments and type parameters.","Result enum for ExecutionResult","Parameters passed to main() function.","","","","","","","","","","","","","Script bytecode.","Returns module bytecode.","","","","","","","","","","","","","","","Emitted events.","","","","","","","","","Returns price in <code>DFI</code> coins per unit of gas.","Number of gas units used for execution.","","","","","","","","","Convert into internal data.","Convert into internal data.","","","","","Returns max gas units to be used in transaction execution.","","Constructor.","Constructor.","Creates <code>ExecutionResult</code> out of resulting chain data cache …","Constructor.","Status of execution.","","","","","","","","","","","","","","","","","","","Native balance operation.","Changes to the chain."],"i":[0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,1,2,3,4,5,6,1,2,3,4,5,6,1,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,0,3,2,1,2,3,1,2,3,0,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,4,5,6,1,2,3,4,5,6,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,8,8,8,8,8,0,0,0,0,0,9,9,10,11,12,9,10,11,12,11,12,11,12,9,12,9,10,11,12,9,10,11,12,9,10,11,12,11,11,11,9,10,11,12,9,10,11,12,10,11,9,10,11,12,9,10,11,12,9,12,9,10,11,12,10,11,9,10,11,12,11,11,12,9,10,11,12,9,10,11,12,9,10,11,12,9,10,11,12,11,11],"f":[null,null,null,[[],["costtable",3]],null,null,null,null,null,null,[[],["structtag",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["blockmetadata",3]],["bool",15]],[[["currenttimestamp",3]],["bool",15]],[[["price",3]],["bool",15]],[[["u64store",3]],["bool",15]],[[["addressstore",3]],["bool",15]],[[["vectoru8store",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["ok",3],["error",3],["result",4]]],[[["serializer",8]],[["ok",3],["error",3],["result",4]]],[[["serializer",8]],[["ok",3],["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["blockmetadata",3]],["bool",15]],[[["currenttimestamp",3]],["bool",15]],[[["price",3]],["bool",15]],[[["u64store",3]],["bool",15]],[[["addressstore",3]],["bool",15]],[[["vectoru8store",3]],["bool",15]],[[["str",15]],["structtag",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["structtag",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["gas",3],["scripttx",3]],["vmresult",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[["memorychecker",3],["option",4]],["dvm",3]],[[["moduletx",3],["gas",3]],["vmresult",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["stateviewsession",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["moduleid",3]],[["vmresult",6],["option",4]]],[[["structtag",3],["accountaddress",3]],[["option",4],["partialvmresult",6]]],[[],["usize",15]],[[]],[[],["request",3]],[[["u64",15]]],[[["walletid",3]],[["option",4],["string",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["executionresult",3]],[[],["moduletx",3]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["executionresult",3]],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["u64",15]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["u64",15]],[[["executionresult",3]],["bool",15]],[[["u64",15],["vec",3],["value",3],["typetag",4],["vec",3],["vec",3],["accountaddress",3],["u8",15],["vec",3]],["result",6]],[[["u64",15]],[["gas",3],["result",6]]],[[["coststrategy",3],["transactioneffects",3],["gas",3],["vmresult",6]],["executionresult",3]],[[["accountaddress",3],["u8",15],["vec",3]],["moduletx",3]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null],"p":[[3,"BlockMetadata"],[3,"CurrentTimestamp"],[3,"Price"],[3,"U64Store"],[3,"AddressStore"],[3,"VectorU8Store"],[3,"Dvm"],[3,"StateViewSession"],[3,"ScriptTx"],[3,"Gas"],[3,"ExecutionResult"],[3,"ModuleTx"]]},\
"dvm_services":{"doc":"gRPC services definitions.","t":[0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["compiler","metadata","vm","CompilerService","borrow","borrow_mut","clone","clone_into","compile","compile","deref","deref_mut","drop","from","init","into","into_request","new","to_owned","try_from","try_into","type_id","vzip","MetadataService","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","from","get_metadata","init","into","into_request","to_owned","try_from","try_into","type_id","vzip","VmService","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","execute_script","from","init","into","into_request","new","publish_module","to_owned","try_from","try_into","type_id","vzip"],"q":["dvm_services","","","dvm_services::compiler","","","","","","","","","","","","","","","","","","","","dvm_services::metadata","","","","","","","","","","","","","","","","","","","dvm_services::vm","","","","","","","","","","","","","","","","","","",""],"d":["gRPC service for compiler.","gRPC service for script signature parameters.","gRPC service for vm script execution.","Compilation service.","","","","","Compiler source codes.","Compiler source codes.","","","","","","","","Create a new compiler service with the given compiler.","","","","","","Metadata service. Provides a function to retrieve …","","","","","","","","","","","","","","","","","","","Virtual machine service.","","","","","","","","","","","","","Creates a new virtual machine service with the given …","","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[null,null,null,null,[[]],[[]],[[],["compilerservice",3]],[[]],[[["request",3],["sourcefiles",3]],[["box",3],["pin",3]]],[[["request",3],["sourcefiles",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[["compiler",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["metadataservice",3]],[[]],[[],["metadataservice",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["bytecode",3],["request",3]],[["pin",3],["box",3]]],[[],["usize",15]],[[]],[[],["request",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["vmservice",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["request",3],["vmexecutescript",3]],[["pin",3],["box",3]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[["dvm",3],["option",4],["heartratemonitor",3]],["vmservice",3]],[[["request",3],["vmpublishmodule",3]],[["pin",3],["box",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"CompilerService"],[3,"MetadataService"],[3,"VmService"]]},\
"dvm_test_kit":{"doc":"test-kit","t":[6,17,3,3,3,5,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,13,13,13,3,3,3,3,3,3,3,13,3,3,3,3,4,3,3,3,3,13,13,13,13,3,4,13,13,13,13,3,3,3,3,3,3,3,3,13,13,3,3,3,3,3,3,3,13,13,13,13,13,3,3,3,3,3,3,3,3,3,4,3,4,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,11,12,12,12,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,13,13,13,3,3,3,3,3,3,3,13,3,3,3,3,4,3,3,3,3,13,13,13,13,3,4,13,13,13,13,3,3,3,3,3,3,3,3,13,13,3,3,3,3,3,3,3,13,13,13,13,13,3,3,3,3,3,3,3,3,3,4,3,4,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,10,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["ArcMut","PORT_RANGE","Server","Signal","TestKit","account","add_std_module","assert_success","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compile","compiled_protos","data_source","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","empty","ensure_run","execute_script","from","from","from","gas_meta","genesis_write_set","get_balance","init","init","init","into","into","into","into_future","into_request","into_request","into_request","merge_result","new","new","new","poll","port","publish_module","publish_module_raw","set_balance","set_currency_info","shutdown","test_suite","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_genesis","Abort","AbortLocation","Address","BadRequest","Bool","Bytecode","CompilationResult","CompilationUnit","CompiledUnit","CurrencyInfo","CurrencyInfoRequest","CurrencyInfoResponse","Deletion","DsAccessPath","DsAccessPaths","DsRawResponse","DsRawResponses","ErrorCode","Failure","Field","Function","FunctionLoc","LcsAddress","LcsBool","LcsSigner","LcsStruct","LcsTag","LcsType","LcsU128","LcsU64","LcsU8","LcsVector","Message","Metadata","ModuleIdent","ModuleMeta","MoveError","MultipleCompilationResult","NativeBalanceRequest","NativeBalanceResponse","NoData","None","OraclePriceRequest","OraclePriceResponse","ScriptMeta","SourceFiles","Struct","StructIdent","U128","U128","U64","U8","Value","Vector","VmAccessPath","VmArgs","VmBalanceChange","VmBalanceChangeSet","VmEvent","VmExecuteResponse","VmExecuteScript","VmPublishModule","VmStatus","VmTypeTag","VmValue","VmWriteOp","abort_code","abort_location","abort_location","address","address","address","address","address","address","address","address","address","args","arguments","arguments","arguments","balance","balance_change_set","blob","blobs","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","bytecode","change_set","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","code","code","code","code_offset","currency_1","currency_2","decimals","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","denom","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dfinance_dvm","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","error","error_code","error_code","error_code","error_code","error_code","error_code","error_code","error_code","error_message","error_message","error_message","error_message","errors","errors","event_data","event_type","events","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","from_i32","from_i32","function","function_loc","functions","gas_unit_price","gas_unit_price","gas_used","hash","hash","hash","hash","info","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_native","is_public","is_resource","is_token","is_valid","is_valid","is_valid","is_valid","max_gas_amount","max_gas_amount","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","message","meta","module","module","name","name","name","name","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","op","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path","path","paths","price","push_arguments","returns","sender","sender_address","sender_module","senders","set_error_code","set_error_code","set_error_code","set_error_code","set_type","set_type","set_type_tag","signers_count","status","status_code","status_code","struct_ident","text","text","ticker","ticker","ticker","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_supply","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_parameters","type_parameters","type_parameters","type_params","type_params","type_tag","type_tag","types","units","units","units","value","value","vector_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_blob","with_error","write_set","Abort","AbortLocation","Address","BadRequest","Bool","Bytecode","CompilationResult","CompilationUnit","CompiledUnit","CurrencyInfo","CurrencyInfoRequest","CurrencyInfoResponse","Deletion","DsAccessPath","DsAccessPaths","DsRawResponse","DsRawResponses","ErrorCode","Failure","Field","Function","FunctionLoc","LcsAddress","LcsBool","LcsSigner","LcsStruct","LcsTag","LcsType","LcsU128","LcsU64","LcsU8","LcsVector","Message","Metadata","ModuleIdent","ModuleMeta","MoveError","MultipleCompilationResult","NativeBalanceRequest","NativeBalanceResponse","NoData","None","OraclePriceRequest","OraclePriceResponse","ScriptMeta","SourceFiles","Struct","StructIdent","U128","U128","U64","U8","Value","Vector","VmAccessPath","VmArgs","VmBalanceChange","VmBalanceChangeSet","VmEvent","VmExecuteResponse","VmExecuteScript","VmPublishModule","VmStatus","VmTypeTag","VmValue","VmWriteOp","abort_code","abort_location","abort_location","address","address","address","address","address","address","address","address","address","args","arguments","arguments","balance","balance_change_set","blob","blobs","block","buf","bytecode","change_set","code","code","code","code_offset","currency_1","currency_2","decimals","denom","ds_service_client","ds_service_server","dvm_bytecode_metadata_client","dvm_bytecode_metadata_server","dvm_compiler_client","dvm_compiler_server","error","error_code","error_code","error_code","error_code","error_message","error_message","error_message","error_message","errors","errors","event_data","event_type","events","field","function","function_loc","functions","gas_unit_price","gas_unit_price","gas_used","info","is_native","is_public","is_resource","is_token","max_gas_amount","max_gas_amount","message","meta","metadata","module","module","name","name","name","name","name","name","name","name","op","path","path","path","paths","price","returns","sender","sender_address","sender_module","senders","signers_count","status","status_code","status_code","struct_ident","text","text","ticker","ticker","ticker","timestamp","total_supply","type","type","type","type_parameters","type_parameters","type_parameters","type_params","type_params","type_tag","types","units","units","units","value","value","vector_type","vm_balance_change","vm_module_publisher_client","vm_module_publisher_server","vm_script_executor_client","vm_script_executor_server","vm_status","write_set","DsServiceClient","borrow","borrow_mut","clone","clone_into","connect","deref","deref_mut","drop","fmt","from","get_currency_info","get_native_balance","get_oracle_price","get_raw","init","into","into_request","multi_get_raw","new","to_owned","try_from","try_into","type_id","vzip","with_interceptor","DsService","DsServiceServer","borrow","borrow_mut","call","call","clone","clone_into","deref","deref_mut","drop","fmt","from","get_currency_info","get_native_balance","get_oracle_price","get_raw","init","into","into_request","multi_get_raw","new","poll_ready","poll_ready","to_owned","try_from","try_into","type_id","vzip","with_interceptor","DvmBytecodeMetadataClient","borrow","borrow_mut","clone","clone_into","connect","deref","deref_mut","drop","fmt","from","get_metadata","init","into","into_request","new","to_owned","try_from","try_into","type_id","vzip","with_interceptor","DvmBytecodeMetadata","DvmBytecodeMetadataServer","borrow","borrow_mut","call","call","clone","clone_into","deref","deref_mut","drop","fmt","from","get_metadata","init","into","into_request","new","poll_ready","poll_ready","to_owned","try_from","try_into","type_id","vzip","with_interceptor","DvmCompilerClient","borrow","borrow_mut","clone","clone_into","compile","connect","deref","deref_mut","drop","fmt","from","init","into","into_request","new","to_owned","try_from","try_into","type_id","vzip","with_interceptor","DvmCompiler","DvmCompilerServer","borrow","borrow_mut","call","call","clone","clone_into","compile","deref","deref_mut","drop","fmt","from","init","into","into_request","new","poll_ready","poll_ready","to_owned","try_from","try_into","type_id","vzip","with_interceptor","Meta","Module","Script","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","encode","encoded_len","eq","fmt","from","init","into","into_request","merge","ne","to_owned","try_from","try_into","type_id","vzip","Deposit","Op","Withdraw","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","encode","encoded_len","eq","fmt","from","init","into","into_request","merge","ne","to_owned","try_from","try_into","type_id","vzip","VmModulePublisherClient","borrow","borrow_mut","clone","clone_into","connect","deref","deref_mut","drop","fmt","from","init","into","into_request","new","publish_module","to_owned","try_from","try_into","type_id","vzip","with_interceptor","VmModulePublisher","VmModulePublisherServer","borrow","borrow_mut","call","call","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_request","new","poll_ready","poll_ready","publish_module","to_owned","try_from","try_into","type_id","vzip","with_interceptor","VmScriptExecutorClient","borrow","borrow_mut","clone","clone_into","connect","deref","deref_mut","drop","execute_script","fmt","from","init","into","into_request","new","to_owned","try_from","try_into","type_id","vzip","with_interceptor","VmScriptExecutor","VmScriptExecutorServer","borrow","borrow_mut","call","call","clone","clone_into","deref","deref_mut","drop","execute_script","fmt","from","init","into","into_request","new","poll_ready","poll_ready","to_owned","try_from","try_into","type_id","vzip","with_interceptor","Abort","Error","ExecutionFailure","MoveError","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","encode","encoded_len","eq","fmt","from","init","into","into_request","merge","ne","to_owned","try_from","try_into","type_id","vzip","run_test_suite"],"q":["dvm_test_kit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_test_kit::compiled_protosdvm_test_kit::compiled_protos::dfinance_dvm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_test_kit::compiled_protos::dfinance_dvm::ds_service_client","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_test_kit::compiled_protos::dfinance_dvm::ds_service_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_test_kit::compiled_protos::dfinance_dvm::dvm_bytecode_metadata_client","","","","","","","","","","","","","","","","","","","","","","dvm_test_kit::compiled_protos::dfinance_dvm::dvm_bytecode_metadata_server","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_test_kit::compiled_protos::dfinance_dvm::dvm_compiler_client","","","","","","","","","","","","","","","","","","","","","","dvm_test_kit::compiled_protos::dfinance_dvm::dvm_compiler_server","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_test_kit::compiled_protos::dfinance_dvm::metadata","","","","","","","","","","","","","","","","","","","","","","","","","dvm_test_kit::compiled_protos::dfinance_dvm::vm_balance_change","","","","","","","","","","","","","","","","","","","","","","","","","dvm_test_kit::compiled_protos::dfinance_dvm::vm_module_publisher_client","","","","","","","","","","","","","","","","","","","","","","dvm_test_kit::compiled_protos::dfinance_dvm::vm_module_publisher_server","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_test_kit::compiled_protos::dfinance_dvm::vm_script_executor_client","","","","","","","","","","","","","","","","","","","","","","dvm_test_kit::compiled_protos::dfinance_dvm::vm_script_executor_server","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_test_kit::compiled_protos::dfinance_dvm::vm_status","","","","","","","","","","","","","","","","","","","","","","","","","","dvm_test_kit::test_suite"],"d":["Arc<Mutex<>> type alias.","gRPC server ports pool.","Grps VM service.","Vm servcie signal handler.","DVM test kit;","Create a new account address from hex string.","Add std module to data source.","Asserts that a response is success.","","","","","","","","","Compiler source codes.","gRPC protocol API.","Returns mock data source.","","","","","","","","","","","","","Creates a new test kit without stdlib.","Returns true if the service is running, false otherwise.","Execute script.","","","","Returns gas meta.","Returns genesis write set.","Get balance.","","","","","","","","","","","Merge execution result.","Create a new VM service with the given data source.","Creates a new test kit with stdlib.","Create a new signal handler.","","Returns the service port.","Publish module.","Publish module.","Set balance.","Set currency info.","Send shutdown signal.","Move test framework.","","","","","","","","","","","","","","Creates a new test kit with given write set.","VmStatus <code>MoveAbort</code> case.","An <code>AbortLocation</code> specifies where a Move program <code>abort</code> …","Address, in bech32 form. 20 bytes.","crash of compilation, logs will show stacktrace","Bool 0x0 - false, 0x1 - true.","Bytecode.","","Compilation unit.","Compiled source.","","","","Delete.","","","","","","VmStatus <code>ExecutionFailure</code> case.","Struct field.","","Function location.","Address, in bech32 form","Bool","Signer.","Struct.","","","U128","Uint64","U8","Vector of bytes.","","Bytecode metadata.","","Module metadata.","VmStatus <code>Error</code> case.","","","","no such module","no error","","","Script metadata.","Compiler API","","","","U128 Little-endian unsigned 128 bits integer.","Uint64. Little-endian unsigned 64 bits integer.","U8","Insert or update value","Vector of bytes.","Storage path","Contract arguments.","","","VM event returns after contract execution.","Response from VM contains write_set, events, gas used and …","VM contract object to process.","Publish module.","A <code>VMStatus</code> is represented as either","Type of contract argument.","VM value should be passed before execution and return …","Write set operation type.","Abort code.","Abort location. (optional). Null if abort occurred in the …","Abort location. (optional). Null if abort occurred in the …","address of the sender, in bech32 form","AccountAddress","","","Indicates <code>abort</code> occurred in the specified module.","address of module owner","module address.","account address.","","Contract arguments.","Returns an iterator which yields the valid enum values …","","","","list of native balance updates.","","","block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Little-endian unsigned 128.","bytecode of the compiled module/script","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode of script","compiled contract code.","compiled contract code.","Code offseteturns the enum value of <code>error_code</code>, or the default if …","Returns the enum value of <code>error_code</code>, or the default if …","Returns the enum value of <code>error_code</code>, or the default if …","Returns the enum value of <code>error_code</code>, or the default if …","","","","","error message from libra, empty if ErrorCode::None","error message from libra, empty if ErrorCode::None","error message from libra, empty if ErrorCode::None","error message from libra, empty if ErrorCode::None","list of error messages, empty if successful","list of error messages, empty if successful","Event data in bytes to parse.","Type of value inside event.","list of events executed during contract execution","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>i32</code> to a <code>VmTypeTag</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>ErrorCode</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>LcsType</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>VmWriteOp</code>, or <code>None</code> if <code>value</code> is not a …","Function index.","Function location.","Functions defined in a module.","maximal price can be paid per gas.","maximal price can be paid per gas.","Gas used during execution.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>VmTypeTag</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>ErrorCode</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>LcsType</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>VmWriteOp</code>.","maximal total gas specified by wallet to spend for this …","maximal total gas specified by wallet to spend for this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Message with error details if needed (optional).","","Indicates the <code>abort</code> occurred in a script.","module name.","name of the unit.","name of the module/script.","","","","module name.","name of structure.","module name.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","storage path.","Access path.","","","Appends the provided enum value to <code>arguments</code>.","","owner of contract.","Event sender address.","sender module.","owners of contract.","Sets <code>error_code</code> to the provided enum value.","Sets <code>error_code</code> to the provided enum value.","Sets <code>error_code</code> to the provided enum value.","Sets <code>error_code</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type_tag</code> to the provided enum value.","","Main status of execution, might contain an error.","Status code.","Status code.","struct identifier. Has a non-null value if the type_tag …","utf8 encoded source code with libra/bech32 addresses","Message with error details if needed.","","","","timestamp.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","","Type of operation","Argument type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Structure type parameters.","type parameters.","Returns the enum value of <code>type_tag</code>, or the default if the …","type tag.","Types defined in a module.","Compilation units.","","","Value returns from vm.","Argument value.","vector type. Has a non-null value if the type_tag is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","using string instead of bytes for now, as map support …","VmStatus <code>MoveAbort</code> case.","An <code>AbortLocation</code> specifies where a Move program <code>abort</code> …","Address, in bech32 form. 20 bytes.","crash of compilation, logs will show stacktrace","Bool 0x0 - false, 0x1 - true.","Bytecode.","","Compilation unit.","Compiled source.","","","","Delete.","","","","","","VmStatus <code>ExecutionFailure</code> case.","Struct field.","","Function location.","Address, in bech32 form","Bool","Signer.","Struct.","","","U128","Uint64","U8","Vector of bytes.","","Bytecode metadata.","","Module metadata.","VmStatus <code>Error</code> case.","","","","no such module","no error","","","Script metadata.","Compiler API","","","","U128 Little-endian unsigned 128 bits integer.","Uint64. Little-endian unsigned 64 bits integer.","U8","Insert or update value","Vector of bytes.","Storage path","Contract arguments.","","","VM event returns after contract execution.","Response from VM contains write_set, events, gas used and …","VM contract object to process.","Publish module.","A <code>VMStatus</code> is represented as either","Type of contract argument.","VM value should be passed before execution and return …","Write set operation type.","Abort code.","Abort location. (optional). Null if abort occurred in the …","Abort location. (optional). Null if abort occurred in the …","address of the sender, in bech32 form","AccountAddress","","","Indicates <code>abort</code> occurred in the specified module.","address of module owner","module address.","account address.","","Contract arguments.","","","","list of native balance updates.","","","block.","Little-endian unsigned 128.","bytecode of the compiled module/script","","bytecode of script","compiled contract code.","compiled contract code.","Code offset.","","","","","Generated client implementations.","Generated server implementations.","Generated client implementations.","Generated server implementations.","Generated client implementations.","Generated server implementations.","","","","","","error message from libra, empty if ErrorCode::None","error message from libra, empty if ErrorCode::None","error message from libra, empty if ErrorCode::None","error message from libra, empty if ErrorCode::None","list of error messages, empty if successful","list of error messages, empty if successful","Event data in bytes to parse.","Type of value inside event.","list of events executed during contract execution","","Function index.","Function location.","Functions defined in a module.","maximal price can be paid per gas.","maximal price can be paid per gas.","Gas used during execution.","","","","","","maximal total gas specified by wallet to spend for this …","maximal total gas specified by wallet to spend for this …","Message with error details if needed (optional).","","","Indicates the <code>abort</code> occurred in a script.","module name.","name of the unit.","name of the module/script.","","","","module name.","name of structure.","module name.","","","storage path.","Access path.","","","","owner of contract.","Event sender address.","sender module.","owners of contract.","","Main status of execution, might contain an error.","Status code.","Status code.","struct identifier. Has a non-null value if the type_tag …","utf8 encoded source code with libra/bech32 addresses","Message with error details if needed.","","","","timestamp.","","","Type of operation","Argument type.","","","","Structure type parameters.","type parameters.","type tag.","Types defined in a module.","Compilation units.","","","Value returns from vm.","Argument value.","vector type. Has a non-null value if the type_tag is …","","Generated client implementations.","Generated server implementations.","Generated client implementations.","Generated server implementations.","","using string instead of bytes for now, as map support …","GRPC service","","","","","Attempt to create a new client by connecting to a given …","","","","","","","","","","","","","","","","","","","","","Generated trait containing gRPC methods that should be …","GRPC service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns bytecode metadata.","","","","","Attempt to create a new client by connecting to a given …","","","","","","","","","","","","","","","","","Generated trait containing gRPC methods that should be …","Returns bytecode metadata.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to create a new client by connecting to a given …","","","","","","","","","","","","","","","","Generated trait containing gRPC methods that should be …","","","","","","","","","","","","","","","","","","","","","","","","","","","In case the provided bytecode is a module.","In case the provided bytecode is a script.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","GRPC service","","","","","Attempt to create a new client by connecting to a given …","","","","","","","","","","","","","","","","","Generated trait containing gRPC methods that should be …","GRPC service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to create a new client by connecting to a given …","","","","","","","","","","","","","","","","","Generated trait containing gRPC methods that should be …","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates an error from the VM, e.g. OUT_OF_GAS, …","","Indicates an failure from inside Move code, where the VM …","Indicates an error from the VM, e.g. OUT_OF_GAS, …","","","","","","","","","","","","","","","","","","","","","","","Runs move test suite."],"i":[0,0,0,0,0,0,1,1,2,1,3,2,1,3,3,3,1,0,1,1,3,2,1,3,2,1,3,2,2,1,3,1,3,1,2,1,3,0,0,1,2,1,3,2,1,3,3,2,1,3,1,2,1,3,3,2,1,1,1,1,3,0,3,2,1,3,2,1,3,2,1,3,2,1,3,1,0,0,4,5,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,7,7,7,7,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,4,4,4,6,4,0,0,0,0,0,0,0,0,0,0,0,0,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,20,22,23,24,25,19,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,26,28,49,26,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,4,5,7,6,35,48,19,40,31,31,13,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,13,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,0,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,26,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,26,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,4,5,7,6,43,24,32,22,34,24,32,22,34,24,32,22,34,29,50,45,45,23,37,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,26,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,4,5,7,6,40,9,38,48,19,23,4,5,7,6,34,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,21,21,37,13,4,5,7,6,48,19,26,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,43,39,14,15,27,28,36,37,21,38,15,16,26,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,11,18,4,5,7,6,11,17,46,30,32,20,21,48,45,45,19,24,32,22,34,46,47,44,20,23,41,9,44,27,42,12,33,18,19,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,13,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,46,47,36,46,47,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,37,21,20,15,19,44,44,38,10,29,50,46,47,44,26,4,27,10,28,29,11,24,30,25,31,32,12,22,33,13,34,5,35,36,37,21,20,38,39,14,40,41,8,9,42,43,15,44,16,45,17,46,47,48,19,18,49,23,50,7,6,24,24,23,0,0,4,5,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,7,7,7,7,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,4,4,4,6,4,0,0,0,0,0,0,0,0,0,0,0,0,8,8,9,10,11,12,13,14,15,16,17,18,19,21,20,22,23,24,25,19,26,28,49,35,48,19,40,31,31,13,13,0,0,0,0,0,0,43,24,32,22,34,24,32,22,34,29,50,45,45,23,37,40,9,38,48,19,23,34,21,21,37,13,48,19,43,39,0,14,15,27,28,36,37,21,38,15,16,18,11,17,46,30,32,21,48,45,45,19,20,23,41,9,44,27,42,12,33,18,19,13,36,46,47,37,21,20,15,19,44,38,10,29,50,46,47,44,0,0,0,0,0,0,23,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,52,52,52,52,52,52,52,52,52,52,52,53,53,53,53,52,52,52,53,52,52,52,52,52,52,52,52,52,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,55,55,55,55,55,55,55,55,55,55,55,56,55,55,55,55,55,55,55,55,55,55,55,55,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,0,58,58,58,58,58,58,59,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,61,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,64,63,63,63,63,63,63,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,0,66,66,66,66,66,66,66,66,66,67,66,66,66,66,66,66,66,66,66,66,66,66,66,66,68,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,0],"f":[null,null,null,null,null,[[["str",15]],["accountaddress",3]],[[["str",15]]],[[["vmexecuteresponse",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["signal",3]],[[]],[[["accountaddress",3],["str",15],["option",4]],[["result",6],["vec",3]]],null,[[],["mockdatasource",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["vec",3],["vec",3],["str",15],["gas",3],["vmargs",3],["vec",3],["structident",3],["accountaddress",3],["u64",15]],["vmexecuteresponse",3]],[[]],[[]],[[]],[[],["gas",3]],[[],["writeset",3]],[[["str",15],["accountaddress",3]],[["u128",15],["option",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["vmexecuteresponse",3]]],[[["mockdatasource",3]],["server",3]],[[],["testkit",3]],[[],["signal",3]],[[["pin",3],["context",3]],["poll",4]],[[],["u32",15]],[[["accountaddress",3],["str",15],["gas",3]],["vmexecuteresponse",3]],[[["vec",3],["u64",15],["u8",15]],["vmexecuteresponse",3]],[[["u128",15],["accountaddress",3],["str",15]]],[[["currencyinfo",3],["str",15]]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[["writeset",3]],["testkit",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["filtermap",3],["cloned",3]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u128",3]],[[],["vmtypetag",4]],[[],["compilationunit",3]],[[],["sourcefiles",3]],[[],["compiledunit",3]],[[],["compilationresult",3]],[[],["dsaccesspath",3]],[[],["dsrawresponse",3]],[[],["dsaccesspaths",3]],[[],["dsrawresponses",3]],[[],["oraclepricerequest",3]],[[],["oraclepriceresponse",3]],[[],["nativebalancerequest",3]],[[],["nativebalanceresponse",3]],[[],["currencyinforequest",3]],[[],["currencyinfo",3]],[[],["currencyinforesponse",3]],[[],["errorcode",4]],[[],["bytecode",3]],[[],["field",3]],[[],["struct",3]],[[],["function",3]],[[],["scriptmeta",3]],[[],["modulemeta",3]],[[],["metadata",3]],[[],["abortlocation",3]],[[],["functionloc",3]],[[],["moveerror",3]],[[],["abort",3]],[[],["failure",3]],[[],["message",3]],[[],["vmstatus",3]],[[],["structident",3]],[[],["lcstag",3]],[[],["moduleident",3]],[[],["vmevent",3]],[[],["vmaccesspath",3]],[[],["vmvalue",3]],[[],["vmargs",3]],[[],["vmpublishmodule",3]],[[],["vmexecutescript",3]],[[],["vmbalancechange",3]],[[],["vmbalancechangeset",3]],[[],["vmexecuteresponse",3]],[[],["multiplecompilationresult",3]],[[],["lcstype",4]],[[],["vmwriteop",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vmtypetag",4]],["ordering",4]],[[["errorcode",4]],["ordering",4]],[[["lcstype",4]],["ordering",4]],[[["vmwriteop",4]],["ordering",4]],null,null,null,null,null,null,null,[[],["u128",3]],[[],["vmtypetag",4]],[[],["compilationunit",3]],[[],["sourcefiles",3]],[[],["compiledunit",3]],[[],["compilationresult",3]],[[],["dsaccesspath",3]],[[],["dsrawresponse",3]],[[],["dsaccesspaths",3]],[[],["dsrawresponses",3]],[[],["oraclepricerequest",3]],[[],["oraclepriceresponse",3]],[[],["nativebalancerequest",3]],[[],["nativebalanceresponse",3]],[[],["currencyinforequest",3]],[[],["currencyinfo",3]],[[],["currencyinforesponse",3]],[[],["errorcode",4]],[[],["bytecode",3]],[[],["field",3]],[[],["struct",3]],[[],["function",3]],[[],["scriptmeta",3]],[[],["modulemeta",3]],[[],["metadata",3]],[[],["abortlocation",3]],[[],["functionloc",3]],[[],["moveerror",3]],[[],["abort",3]],[[],["failure",3]],[[],["message",3]],[[],["vmstatus",3]],[[],["structident",3]],[[],["lcstag",3]],[[],["moduleident",3]],[[],["vmevent",3]],[[],["vmaccesspath",3]],[[],["vmvalue",3]],[[],["vmargs",3]],[[],["vmpublishmodule",3]],[[],["vmexecutescript",3]],[[],["vmbalancechange",3]],[[],["vmbalancechangeset",3]],[[],["vmexecuteresponse",3]],[[],["multiplecompilationresult",3]],[[],["lcstype",4]],[[],["vmwriteop",4]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["u128",3]],["bool",15]],[[["vmtypetag",4]],["bool",15]],[[["compilationunit",3]],["bool",15]],[[["sourcefiles",3]],["bool",15]],[[["compiledunit",3]],["bool",15]],[[["compilationresult",3]],["bool",15]],[[["dsaccesspath",3]],["bool",15]],[[["dsrawresponse",3]],["bool",15]],[[["dsaccesspaths",3]],["bool",15]],[[["dsrawresponses",3]],["bool",15]],[[["oraclepricerequest",3]],["bool",15]],[[["oraclepriceresponse",3]],["bool",15]],[[["nativebalancerequest",3]],["bool",15]],[[["nativebalanceresponse",3]],["bool",15]],[[["currencyinforequest",3]],["bool",15]],[[["currencyinfo",3]],["bool",15]],[[["currencyinforesponse",3]],["bool",15]],[[["errorcode",4]],["bool",15]],[[["bytecode",3]],["bool",15]],[[["field",3]],["bool",15]],[[["struct",3]],["bool",15]],[[["function",3]],["bool",15]],[[["scriptmeta",3]],["bool",15]],[[["modulemeta",3]],["bool",15]],[[["metadata",3]],["bool",15]],[[["abortlocation",3]],["bool",15]],[[["functionloc",3]],["bool",15]],[[["moveerror",3]],["bool",15]],[[["abort",3]],["bool",15]],[[["failure",3]],["bool",15]],[[["message",3]],["bool",15]],[[["vmstatus",3]],["bool",15]],[[["structident",3]],["bool",15]],[[["lcstag",3]],["bool",15]],[[["moduleident",3]],["bool",15]],[[["vmevent",3]],["bool",15]],[[["vmaccesspath",3]],["bool",15]],[[["vmvalue",3]],["bool",15]],[[["vmargs",3]],["bool",15]],[[["vmpublishmodule",3]],["bool",15]],[[["vmexecutescript",3]],["bool",15]],[[["vmbalancechange",3]],["bool",15]],[[["vmbalancechangeset",3]],["bool",15]],[[["vmexecuteresponse",3]],["bool",15]],[[["multiplecompilationresult",3]],["bool",15]],[[["lcstype",4]],["bool",15]],[[["vmwriteop",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["errorcode",4]],[[],["errorcode",4]],[[],["errorcode",4]],[[],["errorcode",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["u128",15]],["u128",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],[["option",4],["vmtypetag",4]]],[[["i32",15]],[["option",4],["errorcode",4]]],[[["i32",15]],[["option",4],["lcstype",4]]],[[["i32",15]],[["option",4],["vmwriteop",4]]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,null,null,null,[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],null,null,[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["u128",3]],["bool",15]],[[["compilationunit",3]],["bool",15]],[[["sourcefiles",3]],["bool",15]],[[["compiledunit",3]],["bool",15]],[[["compilationresult",3]],["bool",15]],[[["dsaccesspath",3]],["bool",15]],[[["dsrawresponse",3]],["bool",15]],[[["dsaccesspaths",3]],["bool",15]],[[["dsrawresponses",3]],["bool",15]],[[["oraclepricerequest",3]],["bool",15]],[[["oraclepriceresponse",3]],["bool",15]],[[["nativebalancerequest",3]],["bool",15]],[[["nativebalanceresponse",3]],["bool",15]],[[["currencyinforequest",3]],["bool",15]],[[["currencyinfo",3]],["bool",15]],[[["currencyinforesponse",3]],["bool",15]],[[["bytecode",3]],["bool",15]],[[["field",3]],["bool",15]],[[["struct",3]],["bool",15]],[[["function",3]],["bool",15]],[[["scriptmeta",3]],["bool",15]],[[["modulemeta",3]],["bool",15]],[[["metadata",3]],["bool",15]],[[["abortlocation",3]],["bool",15]],[[["functionloc",3]],["bool",15]],[[["moveerror",3]],["bool",15]],[[["abort",3]],["bool",15]],[[["failure",3]],["bool",15]],[[["message",3]],["bool",15]],[[["vmstatus",3]],["bool",15]],[[["structident",3]],["bool",15]],[[["lcstag",3]],["bool",15]],[[["moduleident",3]],["bool",15]],[[["vmevent",3]],["bool",15]],[[["vmaccesspath",3]],["bool",15]],[[["vmvalue",3]],["bool",15]],[[["vmargs",3]],["bool",15]],[[["vmpublishmodule",3]],["bool",15]],[[["vmexecutescript",3]],["bool",15]],[[["vmbalancechange",3]],["bool",15]],[[["vmbalancechangeset",3]],["bool",15]],[[["vmexecuteresponse",3]],["bool",15]],[[["multiplecompilationresult",3]],["bool",15]],[[["global",3],["vec",3],["u8",15]],["dsaccesspath",3]],null,[[["vmtypetag",4]],[["option",4],["ordering",4]]],[[["errorcode",4]],[["option",4],["ordering",4]]],[[["lcstype",4]],[["option",4],["ordering",4]]],[[["vmwriteop",4]],[["option",4],["ordering",4]]],null,null,null,null,null,[[["vmtypetag",4]]],null,null,null,null,null,[[["errorcode",4]]],[[["errorcode",4]]],[[["errorcode",4]]],[[["errorcode",4]]],[[["vmwriteop",4]]],[[["vmtypetag",4]]],[[["lcstype",4]]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["vmwriteop",4]],[[],["vmtypetag",4]],null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[],["lcstype",4]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["dsrawresponse",3]],[[["errorcode",4],["string",3]],["dsrawresponse",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["dsserviceclient",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[]],[[],["dsserviceclient",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["dsserviceclient",3]],null,null,[[]],[[]],[[["request",3]]],[[["request",3]]],[[],["dsserviceserver",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[["request",3],["currencyinforequest",3]],[["pin",3],["box",3]]],[[["request",3],["nativebalancerequest",3]],[["box",3],["pin",3]]],[[["request",3],["oraclepricerequest",3]],[["box",3],["pin",3]]],[[["dsaccesspath",3],["request",3]],[["box",3],["pin",3]]],[[],["usize",15]],[[]],[[],["request",3]],[[["dsaccesspaths",3],["request",3]],[["pin",3],["box",3]]],[[],["dsserviceserver",3]],[[["context",3]],[["result",4],["poll",4]]],[[["context",3]],[["result",4],["poll",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["dsserviceserver",3]],null,[[]],[[]],[[],["dvmbytecodemetadataclient",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[],["dvmbytecodemetadataclient",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["dvmbytecodemetadataclient",3]],null,null,[[]],[[]],[[["request",3]]],[[["request",3]]],[[],["dvmbytecodemetadataserver",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[["request",3],["bytecode",3]],[["pin",3],["box",3]]],[[],["usize",15]],[[]],[[],["request",3]],[[],["dvmbytecodemetadataserver",3]],[[["context",3]],[["result",4],["poll",4]]],[[["context",3]],[["result",4],["poll",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["dvmbytecodemetadataserver",3]],null,[[]],[[]],[[],["dvmcompilerclient",3]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[],["dvmcompilerclient",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["dvmcompilerclient",3]],null,null,[[]],[[]],[[["request",3]]],[[["request",3]]],[[],["dvmcompilerserver",3]],[[]],[[["request",3],["sourcefiles",3]],[["box",3],["pin",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[],["dvmcompilerserver",3]],[[["context",3]],[["poll",4],["result",4]]],[[["context",3]],[["result",4],["poll",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["dvmcompilerserver",3]],null,null,null,[[]],[[]],[[],["meta",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[["meta",4]],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[["decodecontext",3],["u32",15],["wiretype",4],["option",4]],[["result",4],["decodeerror",3]]],[[["meta",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[],["op",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[["op",4]],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[["option",4],["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]],[[["op",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["vmmodulepublisherclient",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[],["vmmodulepublisherclient",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["vmmodulepublisherclient",3]],null,null,[[]],[[]],[[["request",3]]],[[["request",3]]],[[],["vmmodulepublisherserver",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[],["vmmodulepublisherserver",3]],[[["context",3]],[["result",4],["poll",4]]],[[["context",3]],[["poll",4],["result",4]]],[[["request",3],["vmpublishmodule",3]],[["pin",3],["box",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["vmmodulepublisherserver",3]],null,[[]],[[]],[[],["vmscriptexecutorclient",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[],["vmscriptexecutorclient",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["vmscriptexecutorclient",3]],null,null,[[]],[[]],[[["request",3]]],[[["request",3]]],[[],["vmscriptexecutorserver",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["request",3],["vmexecutescript",3]],[["pin",3],["box",3]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[],["vmscriptexecutorserver",3]],[[["context",3]],[["result",4],["poll",4]]],[[["context",3]],[["result",4],["poll",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["vmscriptexecutorserver",3]],null,null,null,null,[[]],[[]],[[],["error",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[["error",4]],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[["option",4],["decodecontext",3],["u32",15],["wiretype",4]],[["result",4],["decodeerror",3]]],[[["error",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["string",3],["hashmap",3]]]],"p":[[3,"TestKit"],[3,"Server"],[3,"Signal"],[4,"VmTypeTag"],[4,"ErrorCode"],[4,"VmWriteOp"],[4,"LcsType"],[3,"Abort"],[3,"Failure"],[3,"SourceFiles"],[3,"DsAccessPath"],[3,"NativeBalanceRequest"],[3,"CurrencyInfo"],[3,"AbortLocation"],[3,"StructIdent"],[3,"ModuleIdent"],[3,"VmAccessPath"],[3,"VmBalanceChange"],[3,"VmExecuteScript"],[3,"ScriptMeta"],[3,"Function"],[3,"NativeBalanceResponse"],[3,"VmExecuteResponse"],[3,"DsRawResponse"],[3,"DsRawResponses"],[3,"U128"],[3,"CompilationUnit"],[3,"CompiledUnit"],[3,"CompilationResult"],[3,"DsAccessPaths"],[3,"OraclePriceRequest"],[3,"OraclePriceResponse"],[3,"CurrencyInfoRequest"],[3,"CurrencyInfoResponse"],[3,"Bytecode"],[3,"Field"],[3,"Struct"],[3,"ModuleMeta"],[3,"Metadata"],[3,"FunctionLoc"],[3,"MoveError"],[3,"Message"],[3,"VmStatus"],[3,"LcsTag"],[3,"VmEvent"],[3,"VmValue"],[3,"VmArgs"],[3,"VmPublishModule"],[3,"VmBalanceChangeSet"],[3,"MultipleCompilationResult"],[3,"DsServiceClient"],[3,"DsServiceServer"],[8,"DsService"],[3,"DvmBytecodeMetadataClient"],[3,"DvmBytecodeMetadataServer"],[8,"DvmBytecodeMetadata"],[3,"DvmCompilerClient"],[3,"DvmCompilerServer"],[8,"DvmCompiler"],[4,"Meta"],[4,"Op"],[3,"VmModulePublisherClient"],[3,"VmModulePublisherServer"],[8,"VmModulePublisher"],[3,"VmScriptExecutorClient"],[3,"VmScriptExecutorServer"],[8,"VmScriptExecutor"],[4,"Error"]]},\
"load_generator":{"doc":"","t":[0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,4,13,13,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,8,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,0,0,5,11,0,11,11,11,11,5,5,5,4,13,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,13,13,4,13,13,4,3,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,5,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11],"n":["ds","dvm","info_service","log","tester","watcher","InMemoryDataSource","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_currency_info","get_native_balance","get_oracle_price","get_raw","init","into","into_request","multi_get_raw","new","start","store_write_set","to_owned","try_from","try_into","type_id","vzip","Dvm","External","Own","bind_client","borrow","borrow_mut","client","connect","deref","deref_mut","drop","drop","fmt","from","init","into","into_request","start","try_from","try_into","type_id","vzip","wait_for","process","uri","Client","ExecutionResult","borrow","borrow","borrow_mut","borrow_mut","compile","deref","deref","deref_mut","deref_mut","drop","drop","execute","from","from","gas_used","init","init","into","into","into_request","into_request","new","publish","status","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ws","InfoService","SystemInfo","borrow","borrow","borrow_mut","borrow_mut","cpu_usage","default","deref","deref","deref_mut","deref_mut","drop","drop","filled","fmt","from","from","init","init","into","into","into_request","into_request","load_info","memory","new","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CvsLog","Log","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","log","log","new","try_from","try_into","type_id","vzip","LoadHandler","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","is_run","mv_template","pipeline","run_load","shutdown","stat","try_from","try_into","type_id","vzip","load_script","module","store_script","Bind","Client","Dvm","Handler","Pipeline","as_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","execute","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","is_run","new","perform","stop","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Average","CompileModule","CompileScript","ExecuteScript","Operation","PublishModule","Read","Stat","StatCollector","StatWriter","Statistic","Write","avg","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compile_module_avg","compile_script_avg","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","execute_script_avg","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","items","new","new","publish_module_avg","quadratic_total_time","sd","statistic","statistics","store","take","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","total_time","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","vzip","vzip","LoadTimer","TimeInterval","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from_str","init","init","into","into","into_request","into_request","is_zero","new","start","time_left","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","watch","with_duration","zero_time"],"q":["load_generator","","","","","","load_generator::ds","","","","","","","","","","","","","","","","","","","","","","","","","","","load_generator::dvm","","","","","","","","","","","","","","","","","","","","","","","load_generator::dvm::Dvm","","load_generator::dvm::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","load_generator::info_service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","load_generator::log","","","","","","","","","","","","","","","","","","load_generator::tester","","","","","","","","","","","","","","","","","","","","load_generator::tester::mv_template","","","load_generator::tester::pipeline","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","load_generator::tester::stat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","load_generator::watcher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Total CPU usage.","","","","","","","","","","","","","","","","","","","Memory usage for the process (in ki":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,0,0,4,5,4,5,4,4,5,4,5,4,5,4,4,5,5,4,5,4,5,4,5,4,4,5,4,5,5,4,5,4,5,4,5,5,0,0,6,7,6,7,7,7,6,7,6,7,6,7,7,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,0,0,8,8,8,8,8,8,8,8,8,9,8,8,8,8,8,8,0,10,10,10,10,10,10,10,10,10,10,0,0,0,10,0,10,10,10,10,0,0,0,0,11,11,0,0,11,12,13,11,12,13,11,12,13,11,12,13,11,12,13,13,11,12,12,13,11,12,13,11,12,13,11,12,13,11,13,12,0,13,12,13,11,12,13,11,12,13,11,12,13,11,0,14,14,14,0,14,15,0,0,0,0,15,16,17,16,18,15,14,19,17,16,18,15,14,19,16,18,15,14,19,16,18,15,14,19,18,18,16,18,17,16,18,15,14,19,17,16,18,15,14,19,17,16,18,15,14,19,18,16,16,18,18,15,14,19,17,16,18,15,14,19,17,16,18,15,14,19,17,16,18,15,14,19,17,16,18,15,14,19,16,17,18,18,16,16,0,17,19,16,18,16,18,15,14,19,16,18,16,17,16,18,15,14,19,17,16,18,15,14,19,17,16,18,15,14,19,16,17,16,18,15,14,19,0,0,20,21,20,21,21,21,20,21,20,21,20,21,20,21,21,20,21,20,20,21,20,21,20,21,20,21,21,21,21,20,21,20,21,20,21,20,21,20,21,0,20,20],"f":[null,null,null,null,null,null,null,[[]],[[]],[[],["inmemorydatasource",3]],[[]],[[],["inmemorydatasource",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[["request",3],["currencyinforequest",3]],[["pin",3],["box",3]]],[[["request",3],["nativebalancerequest",3]],[["box",3],["pin",3]]],[[["oraclepricerequest",3],["request",3]],[["box",3],["pin",3]]],[[["dsaccesspath",3],["request",3]],[["pin",3],["box",3]]],[[],["usize",15]],[[]],[[],["request",3]],[[["request",3],["dsaccesspaths",3]],[["pin",3],["box",3]]],[[],["inmemorydatasource",3]],[[["endpoint",4]],[["result",4],["inmemorydatasource",3],["error",3]]],[[["writeset",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],null,[[["uri",3]],[["error",3],["dvm",4],["result",4]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[["infoserviceconfig",3],["asref",8],["memoryoptions",3],["path",3],["u16",15]],[["error",3],["dvm",4],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[["str",15],["accountaddress",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["vmargs",3],["vec",3],["u8",15],["accountaddress",3],["vec",3],["vec",3],["structident",3],["u64",15],["vec",3]]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[["uri",3]]],[[["vec",3],["accountaddress",3],["u64",15],["u8",15]]],null,[[],["result",4]],[[],["result",4]],[[["vmexecuteresponse",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],null,[[],["systeminfo",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[]],null,[[["uri",3]],[["infoservice",3],["result",4],["error",3]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[["systeminfo",3],["u64",15],["statistic",3]],[["error",3],["result",4]]],[[["systeminfo",3],["u64",15],["statistic",3]],[["error",3],["result",4]]],[[["asref",8],["path",3]],[["error",3],["cvslog",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[],["bool",15]],null,null,[[["arc",3],["statwriter",3],["dvm",4],["usize",15],["inmemorydatasource",3]],["loadhandler",3]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["str",15],["accountaddress",3]],["string",3]],[[["str",15],["accountaddress",3]],["string",3]],[[["str",15],["accountaddress",3]],["string",3]],null,null,null,null,null,[[],["client",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["bool",15]],[[["arc",3],["statwriter",3],["dvm",4],["inmemorydatasource",3]],["pipeline",3]],[[["pipeline",3]],["handler",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["u128",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["average",3]],[[],["statistic",3]],[[],["operation",4]],[[],["stat",4]],[[],["statwriter",3]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["average",3]],[[],["statistic",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,[[["sender",3],["receiver",3],["operation",4]],["statcollector",3]],[[],["statistic",3]],null,null,[[],["f64",15]],[[]],[[],[["statistic",3],["result",4],["error",3]]],[[["stat",4]],[["error",3],["result",4]]],[[],["average",3]],[[],["statistic",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u128",15]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["loadtimer",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]],["result",4]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["bool",15]],[[["timeinterval",3]],["loadtimer",3]],[[]],[[],["timeinterval",3]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["option",4],["loadhandler",3],["infoservice",3],["option",4],["statcollector",3],["duration",3],["timeinterval",3]]],[[["duration",3]],["timeinterval",3]],[[],["timeinterval",3]]],"p":[[3,"InMemoryDataSource"],[4,"Dvm"],[13,"Own"],[3,"Client"],[3,"ExecutionResult"],[3,"InfoService"],[3,"SystemInfo"],[3,"CvsLog"],[8,"Log"],[3,"LoadHandler"],[4,"Bind"],[3,"Pipeline"],[3,"Handler"],[4,"Stat"],[4,"Operation"],[3,"Average"],[3,"StatCollector"],[3,"Statistic"],[3,"StatWriter"],[3,"TimeInterval"],[3,"LoadTimer"]]},\
"loge":{"doc":"","t":[13,4,13,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12],"n":["Attach","Loge","Start","TestInfo","augment_clap","augment_clap","augment_subcommands","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","csv_path","default","deref","deref","deref_mut","deref_mut","drop","drop","ds_endpoint","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_subcommand","info_service","init","init","into","into","into_app","into_app","into_request","into_request","load_time","log_interval","main","test_info","threads_count","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ds_address","ds_port","dvm","dvm_port","info_service","info_service_addr","info_service_port","memory_config","path","test_info","test_info"],"q":["loge","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","loge::Loge","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,1,0,1,2,1,1,2,1,2,2,2,2,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,1,1,2,1,2,1,2,1,2,2,2,0,1,2,2,1,2,1,2,1,2,1,2,3,4,3,4,4,3,4,4,4,3,4],"f":[null,null,null,null,[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[]],[[]],[[]],[[]],[[],["testinfo",3]],[[]],null,[[],["testinfo",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["endpoint",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["option",4]],["option",4]],[[],[["uri",3],["option",4]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["app",3]],[[],["app",3]],[[],["request",3]],[[],["request",3]],null,null,[[]],[[],["testinfo",3]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Loge"],[3,"TestInfo"],[13,"Attach"],[13,"Start"]]},\
"move_decompiler":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,12,11,11,5,12,5,11,11,11,11],"n":["Opt","augment_clap","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","from_arg_matches","init","input","into","into_app","main","output","run","try_from","try_into","type_id","vzip"],"q":["move_decompiler","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","Path to compiled Move binary","","","","Optional path to output file. Prints results to stdout by …","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1],"f":[null,[[["app",3]],["app",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[["argmatches",3]]],[[],["usize",15]],null,[[]],[[],["app",3]],[[]],null,[[],[["error",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Opt"]]},\
"movec":{"doc":"","t":[13,13,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,5,5,11,11,11,11,12,12,12,12,12,12],"n":["Build","Check","Init","New","Opt","Update","augment_clap","augment_subcommands","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","from_arg_matches","from_subcommand","handle_error","init","into","into_app","load_manifest","main","try_from","try_into","type_id","vzip","address","address","project_name","project_name","repository","repository"],"q":["movec","","","","","","","","","","","","","","","","","","","","","","","","","","","movec::Opt","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","Account address.","Account address.","Project name.","Project name.","Basic uri to blockchain api.","Basic uri to blockchain api."],"i":[1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,2,3,2,3,2,3],"f":[null,null,null,null,null,null,[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[["argmatches",3]]],[[["option",4]],["option",4]],[[["result",4],["error",3]]],[[],["usize",15]],[[]],[[],["app",3]],[[["path",3]],["movetoml",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null],"p":[[4,"Opt"],[13,"Init"],[13,"New"]]},\
"status_table":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,5,12,5,11,11,11,11],"n":["Opts","augment_clap","borrow","borrow_mut","deref","deref_mut","drop","from","from_arg_matches","init","into","into_app","into_request","main","output","status_table_json","try_from","try_into","type_id","vzip"],"q":["status_table","","","","","","","","","","","","","","","","","","",""],"d":["Status table generator.","","","","","","","","","","","","","","Optional path to the output file. If not passed, result …","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1],"f":[null,[[["app",3]],["app",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["argmatches",3]]],[[],["usize",15]],[[]],[[],["app",3]],[[],["request",3]],[[]],null,[[],[["result",6],["string",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Opts"]]},\
"stdlib":{"doc":"","t":[3,3,3,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["Stdlib","Value","Ws","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_external_std","build_std","clone","clone_into","cmp","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","erased_serialize","erased_serialize","fmt","from","from","from","from","hash","init","init","init","into","into","into","into_request","into_request","into_request","modules","ne","partial_cmp","serialize","serialize","test_only_hash","test_only_hash","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","zero_std"],"q":["stdlib","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,2,3,1,2,3,0,0,1,1,2,1,1,2,3,1,2,3,1,2,3,2,2,2,3,1,1,2,3,3,2,1,2,3,1,2,3,1,2,3,1,2,2,2,3,2,3,1,1,2,3,1,2,3,1,2,3,1,2,3,0],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["stdlib",3]],[["writeset",3],["error",3],["result",4]]],[[],["writeset",3]],[[],["stdlib",3]],[[]],[[["value",3]],["ordering",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["value",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["ok",3],["error",3],["result",4]]],[[["serializer",8]],[["ok",3],["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["writeset",3]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,[[["value",3]],["bool",15]],[[["value",3]],[["option",4],["ordering",4]]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[],["writeset",3]]],"p":[[3,"Stdlib"],[3,"Value"],[3,"Ws"]]},\
"stdlib_builder":{"doc":"","t":[3,11,11,11,12,11,11,11,11,11,11,11,11,11,5,5,12,12,12,11,11,11,11],"n":["Opts","augment_clap","borrow","borrow_mut","debug_print","deref","deref_mut","drop","from","from_arg_matches","init","into","into_app","into_request","load_module","main","output","pretty_print","source_dir","try_from","try_into","type_id","vzip"],"q":["stdlib_builder","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","Verbose mode flag. Enables debug printing of internals …","","","","","","","","","","","","Optional path to the output file. If not passed, result …","Enables pretty printing of all output including …","Path to the directory with the standard library.","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1],"f":[null,[[["app",3]],["app",3]],[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["argmatches",3]]],[[],["usize",15]],[[]],[[],["app",3]],[[],["request",3]],[[["path",3]],[["result",4],["error",3]]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Opts"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};